//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34011
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Microsoft.Samples.Kinect.BodyBasics {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("jointexamDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class jointexamDataSet : global::System.Data.DataSet {
        
        private tab_examDataTable tabletab_exam;
        
        private tab_exam_recordDataTable tabletab_exam_record;
        
        private tab_exam_typeDataTable tabletab_exam_type;
        
        private tab_personDataTable tabletab_person;
        
        private ExamMasterDataTable tableExamMaster;
        
        private ExamRecordDataTable tableExamRecord;
        
        private AnalysisTypeDataTable tableAnalysisType;
        
        private v_tab_examanalysisDataTable tablev_tab_examanalysis;
        
        private global::System.Data.DataRelation relationexam2person;
        
        private global::System.Data.DataRelation relationrecord2exam;
        
        private global::System.Data.DataRelation relationrecord2type;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public jointexamDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected jointexamDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["tab_exam"] != null)) {
                    base.Tables.Add(new tab_examDataTable(ds.Tables["tab_exam"]));
                }
                if ((ds.Tables["tab_exam_record"] != null)) {
                    base.Tables.Add(new tab_exam_recordDataTable(ds.Tables["tab_exam_record"]));
                }
                if ((ds.Tables["tab_exam_type"] != null)) {
                    base.Tables.Add(new tab_exam_typeDataTable(ds.Tables["tab_exam_type"]));
                }
                if ((ds.Tables["tab_person"] != null)) {
                    base.Tables.Add(new tab_personDataTable(ds.Tables["tab_person"]));
                }
                if ((ds.Tables["ExamMaster"] != null)) {
                    base.Tables.Add(new ExamMasterDataTable(ds.Tables["ExamMaster"]));
                }
                if ((ds.Tables["ExamRecord"] != null)) {
                    base.Tables.Add(new ExamRecordDataTable(ds.Tables["ExamRecord"]));
                }
                if ((ds.Tables["AnalysisType"] != null)) {
                    base.Tables.Add(new AnalysisTypeDataTable(ds.Tables["AnalysisType"]));
                }
                if ((ds.Tables["v_tab_examanalysis"] != null)) {
                    base.Tables.Add(new v_tab_examanalysisDataTable(ds.Tables["v_tab_examanalysis"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tab_examDataTable tab_exam {
            get {
                return this.tabletab_exam;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tab_exam_recordDataTable tab_exam_record {
            get {
                return this.tabletab_exam_record;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tab_exam_typeDataTable tab_exam_type {
            get {
                return this.tabletab_exam_type;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public tab_personDataTable tab_person {
            get {
                return this.tabletab_person;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ExamMasterDataTable ExamMaster {
            get {
                return this.tableExamMaster;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ExamRecordDataTable ExamRecord {
            get {
                return this.tableExamRecord;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AnalysisTypeDataTable AnalysisType {
            get {
                return this.tableAnalysisType;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public v_tab_examanalysisDataTable v_tab_examanalysis {
            get {
                return this.tablev_tab_examanalysis;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            jointexamDataSet cln = ((jointexamDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["tab_exam"] != null)) {
                    base.Tables.Add(new tab_examDataTable(ds.Tables["tab_exam"]));
                }
                if ((ds.Tables["tab_exam_record"] != null)) {
                    base.Tables.Add(new tab_exam_recordDataTable(ds.Tables["tab_exam_record"]));
                }
                if ((ds.Tables["tab_exam_type"] != null)) {
                    base.Tables.Add(new tab_exam_typeDataTable(ds.Tables["tab_exam_type"]));
                }
                if ((ds.Tables["tab_person"] != null)) {
                    base.Tables.Add(new tab_personDataTable(ds.Tables["tab_person"]));
                }
                if ((ds.Tables["ExamMaster"] != null)) {
                    base.Tables.Add(new ExamMasterDataTable(ds.Tables["ExamMaster"]));
                }
                if ((ds.Tables["ExamRecord"] != null)) {
                    base.Tables.Add(new ExamRecordDataTable(ds.Tables["ExamRecord"]));
                }
                if ((ds.Tables["AnalysisType"] != null)) {
                    base.Tables.Add(new AnalysisTypeDataTable(ds.Tables["AnalysisType"]));
                }
                if ((ds.Tables["v_tab_examanalysis"] != null)) {
                    base.Tables.Add(new v_tab_examanalysisDataTable(ds.Tables["v_tab_examanalysis"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tabletab_exam = ((tab_examDataTable)(base.Tables["tab_exam"]));
            if ((initTable == true)) {
                if ((this.tabletab_exam != null)) {
                    this.tabletab_exam.InitVars();
                }
            }
            this.tabletab_exam_record = ((tab_exam_recordDataTable)(base.Tables["tab_exam_record"]));
            if ((initTable == true)) {
                if ((this.tabletab_exam_record != null)) {
                    this.tabletab_exam_record.InitVars();
                }
            }
            this.tabletab_exam_type = ((tab_exam_typeDataTable)(base.Tables["tab_exam_type"]));
            if ((initTable == true)) {
                if ((this.tabletab_exam_type != null)) {
                    this.tabletab_exam_type.InitVars();
                }
            }
            this.tabletab_person = ((tab_personDataTable)(base.Tables["tab_person"]));
            if ((initTable == true)) {
                if ((this.tabletab_person != null)) {
                    this.tabletab_person.InitVars();
                }
            }
            this.tableExamMaster = ((ExamMasterDataTable)(base.Tables["ExamMaster"]));
            if ((initTable == true)) {
                if ((this.tableExamMaster != null)) {
                    this.tableExamMaster.InitVars();
                }
            }
            this.tableExamRecord = ((ExamRecordDataTable)(base.Tables["ExamRecord"]));
            if ((initTable == true)) {
                if ((this.tableExamRecord != null)) {
                    this.tableExamRecord.InitVars();
                }
            }
            this.tableAnalysisType = ((AnalysisTypeDataTable)(base.Tables["AnalysisType"]));
            if ((initTable == true)) {
                if ((this.tableAnalysisType != null)) {
                    this.tableAnalysisType.InitVars();
                }
            }
            this.tablev_tab_examanalysis = ((v_tab_examanalysisDataTable)(base.Tables["v_tab_examanalysis"]));
            if ((initTable == true)) {
                if ((this.tablev_tab_examanalysis != null)) {
                    this.tablev_tab_examanalysis.InitVars();
                }
            }
            this.relationexam2person = this.Relations["exam2person"];
            this.relationrecord2exam = this.Relations["record2exam"];
            this.relationrecord2type = this.Relations["record2type"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "jointexamDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/jointexamDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabletab_exam = new tab_examDataTable();
            base.Tables.Add(this.tabletab_exam);
            this.tabletab_exam_record = new tab_exam_recordDataTable();
            base.Tables.Add(this.tabletab_exam_record);
            this.tabletab_exam_type = new tab_exam_typeDataTable();
            base.Tables.Add(this.tabletab_exam_type);
            this.tabletab_person = new tab_personDataTable();
            base.Tables.Add(this.tabletab_person);
            this.tableExamMaster = new ExamMasterDataTable();
            base.Tables.Add(this.tableExamMaster);
            this.tableExamRecord = new ExamRecordDataTable();
            base.Tables.Add(this.tableExamRecord);
            this.tableAnalysisType = new AnalysisTypeDataTable();
            base.Tables.Add(this.tableAnalysisType);
            this.tablev_tab_examanalysis = new v_tab_examanalysisDataTable();
            base.Tables.Add(this.tablev_tab_examanalysis);
            this.relationexam2person = new global::System.Data.DataRelation("exam2person", new global::System.Data.DataColumn[] {
                        this.tabletab_person.idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletab_exam.person_idColumn}, false);
            this.Relations.Add(this.relationexam2person);
            this.relationrecord2exam = new global::System.Data.DataRelation("record2exam", new global::System.Data.DataColumn[] {
                        this.tabletab_exam.idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletab_exam_record.exam_idColumn}, false);
            this.Relations.Add(this.relationrecord2exam);
            this.relationrecord2type = new global::System.Data.DataRelation("record2type", new global::System.Data.DataColumn[] {
                        this.tabletab_exam_type.idColumn}, new global::System.Data.DataColumn[] {
                        this.tabletab_exam_record.exam_type_idColumn}, false);
            this.Relations.Add(this.relationrecord2type);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetab_exam() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetab_exam_record() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetab_exam_type() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializetab_person() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeExamMaster() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeExamRecord() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAnalysisType() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializev_tab_examanalysis() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            jointexamDataSet ds = new jointexamDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tab_examRowChangeEventHandler(object sender, tab_examRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tab_exam_recordRowChangeEventHandler(object sender, tab_exam_recordRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tab_exam_typeRowChangeEventHandler(object sender, tab_exam_typeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void tab_personRowChangeEventHandler(object sender, tab_personRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ExamMasterRowChangeEventHandler(object sender, ExamMasterRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ExamRecordRowChangeEventHandler(object sender, ExamRecordRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AnalysisTypeRowChangeEventHandler(object sender, AnalysisTypeRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void v_tab_examanalysisRowChangeEventHandler(object sender, v_tab_examanalysisRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tab_examDataTable : global::System.Data.TypedTableBase<tab_examRow> {
            
            private global::System.Data.DataColumn columnperson_id;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnexam_date;
            
            private global::System.Data.DataColumn columnoperater;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_examDataTable() {
                this.TableName = "tab_exam";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tab_examDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tab_examDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn person_idColumn {
                get {
                    return this.columnperson_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn exam_dateColumn {
                get {
                    return this.columnexam_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn operaterColumn {
                get {
                    return this.columnoperater;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_examRow this[int index] {
                get {
                    return ((tab_examRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_examRowChangeEventHandler tab_examRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_examRowChangeEventHandler tab_examRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_examRowChangeEventHandler tab_examRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_examRowChangeEventHandler tab_examRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addtab_examRow(tab_examRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_examRow Addtab_examRow(tab_personRow parenttab_personRowByexam2person, System.DateTime exam_date, string operater) {
                tab_examRow rowtab_examRow = ((tab_examRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        exam_date,
                        operater};
                if ((parenttab_personRowByexam2person != null)) {
                    columnValuesArray[0] = parenttab_personRowByexam2person[0];
                }
                rowtab_examRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtab_examRow);
                return rowtab_examRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_examRow FindByid(int id) {
                return ((tab_examRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tab_examDataTable cln = ((tab_examDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tab_examDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnperson_id = base.Columns["person_id"];
                this.columnid = base.Columns["id"];
                this.columnexam_date = base.Columns["exam_date"];
                this.columnoperater = base.Columns["operater"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnperson_id = new global::System.Data.DataColumn("person_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnperson_id);
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnexam_date = new global::System.Data.DataColumn("exam_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexam_date);
                this.columnoperater = new global::System.Data.DataColumn("operater", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoperater);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnperson_id.AllowDBNull = false;
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnoperater.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_examRow Newtab_examRow() {
                return ((tab_examRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tab_examRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tab_examRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tab_examRowChanged != null)) {
                    this.tab_examRowChanged(this, new tab_examRowChangeEvent(((tab_examRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tab_examRowChanging != null)) {
                    this.tab_examRowChanging(this, new tab_examRowChangeEvent(((tab_examRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tab_examRowDeleted != null)) {
                    this.tab_examRowDeleted(this, new tab_examRowChangeEvent(((tab_examRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tab_examRowDeleting != null)) {
                    this.tab_examRowDeleting(this, new tab_examRowChangeEvent(((tab_examRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removetab_examRow(tab_examRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                jointexamDataSet ds = new jointexamDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tab_examDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tab_exam_recordDataTable : global::System.Data.TypedTableBase<tab_exam_recordRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnexam_type_id;
            
            private global::System.Data.DataColumn columnexam_id;
            
            private global::System.Data.DataColumn columnexam_time;
            
            private global::System.Data.DataColumn columnexam_snapshot_path;
            
            private global::System.Data.DataColumn columnSpineBaseX;
            
            private global::System.Data.DataColumn columnSpineBaseY;
            
            private global::System.Data.DataColumn columnSpineBaseZ;
            
            private global::System.Data.DataColumn columnSpineMidX;
            
            private global::System.Data.DataColumn columnSpineMidY;
            
            private global::System.Data.DataColumn columnSpineMidZ;
            
            private global::System.Data.DataColumn columnNeckX;
            
            private global::System.Data.DataColumn columnNeckY;
            
            private global::System.Data.DataColumn columnNeckZ;
            
            private global::System.Data.DataColumn columnHeadX;
            
            private global::System.Data.DataColumn columnHeadY;
            
            private global::System.Data.DataColumn columnHeadZ;
            
            private global::System.Data.DataColumn columnSpineShoulderX;
            
            private global::System.Data.DataColumn columnSpineShoulderY;
            
            private global::System.Data.DataColumn columnSpineShoulderZ;
            
            private global::System.Data.DataColumn columnShoulderLeftX;
            
            private global::System.Data.DataColumn columnShoulderLeftY;
            
            private global::System.Data.DataColumn columnShoulderLeftZ;
            
            private global::System.Data.DataColumn columnElbowLeftX;
            
            private global::System.Data.DataColumn columnElbowLeftY;
            
            private global::System.Data.DataColumn columnElbowLeftZ;
            
            private global::System.Data.DataColumn columnWristLeftX;
            
            private global::System.Data.DataColumn columnWristLeftY;
            
            private global::System.Data.DataColumn columnWristLeftZ;
            
            private global::System.Data.DataColumn columnHandLeftX;
            
            private global::System.Data.DataColumn columnHandLeftY;
            
            private global::System.Data.DataColumn columnHandLeftZ;
            
            private global::System.Data.DataColumn columnHipLeftX;
            
            private global::System.Data.DataColumn columnHipLeftY;
            
            private global::System.Data.DataColumn columnHipLeftZ;
            
            private global::System.Data.DataColumn columnKneeLeftX;
            
            private global::System.Data.DataColumn columnKneeLeftY;
            
            private global::System.Data.DataColumn columnKneeLeftZ;
            
            private global::System.Data.DataColumn columnAnkleLeftX;
            
            private global::System.Data.DataColumn columnAnkleLeftY;
            
            private global::System.Data.DataColumn columnAnkleLeftZ;
            
            private global::System.Data.DataColumn columnFootLeftX;
            
            private global::System.Data.DataColumn columnFootLeftY;
            
            private global::System.Data.DataColumn columnFootLeftZ;
            
            private global::System.Data.DataColumn columnHandTipLeftX;
            
            private global::System.Data.DataColumn columnHandTipLeftY;
            
            private global::System.Data.DataColumn columnHandTipLeftZ;
            
            private global::System.Data.DataColumn columnThumbLeftX;
            
            private global::System.Data.DataColumn columnThumbLeftY;
            
            private global::System.Data.DataColumn columnThumbLeftZ;
            
            private global::System.Data.DataColumn columnShoulderRightX;
            
            private global::System.Data.DataColumn columnShoulderRightY;
            
            private global::System.Data.DataColumn columnShoulderRightZ;
            
            private global::System.Data.DataColumn columnElbowRightX;
            
            private global::System.Data.DataColumn columnElbowRightY;
            
            private global::System.Data.DataColumn columnElbowRightZ;
            
            private global::System.Data.DataColumn columnWristRightX;
            
            private global::System.Data.DataColumn columnWristRightY;
            
            private global::System.Data.DataColumn columnWristRightZ;
            
            private global::System.Data.DataColumn columnHandRightX;
            
            private global::System.Data.DataColumn columnHandRightY;
            
            private global::System.Data.DataColumn columnHandRightZ;
            
            private global::System.Data.DataColumn columnHipRightX;
            
            private global::System.Data.DataColumn columnHipRightY;
            
            private global::System.Data.DataColumn columnHipRightZ;
            
            private global::System.Data.DataColumn columnKneeRightX;
            
            private global::System.Data.DataColumn columnKneeRightY;
            
            private global::System.Data.DataColumn columnKneeRightZ;
            
            private global::System.Data.DataColumn columnAnkleRightX;
            
            private global::System.Data.DataColumn columnAnkleRightY;
            
            private global::System.Data.DataColumn columnAnkleRightZ;
            
            private global::System.Data.DataColumn columnFootRightX;
            
            private global::System.Data.DataColumn columnFootRightY;
            
            private global::System.Data.DataColumn columnFootRightZ;
            
            private global::System.Data.DataColumn columnHandTipRightX;
            
            private global::System.Data.DataColumn columnHandTipRightY;
            
            private global::System.Data.DataColumn columnHandTipRightZ;
            
            private global::System.Data.DataColumn columnThumbRightX;
            
            private global::System.Data.DataColumn columnThumbRightY;
            
            private global::System.Data.DataColumn columnThumbRightZ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_recordDataTable() {
                this.TableName = "tab_exam_record";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tab_exam_recordDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tab_exam_recordDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn exam_type_idColumn {
                get {
                    return this.columnexam_type_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn exam_idColumn {
                get {
                    return this.columnexam_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn exam_timeColumn {
                get {
                    return this.columnexam_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn exam_snapshot_pathColumn {
                get {
                    return this.columnexam_snapshot_path;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineBaseXColumn {
                get {
                    return this.columnSpineBaseX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineBaseYColumn {
                get {
                    return this.columnSpineBaseY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineBaseZColumn {
                get {
                    return this.columnSpineBaseZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineMidXColumn {
                get {
                    return this.columnSpineMidX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineMidYColumn {
                get {
                    return this.columnSpineMidY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineMidZColumn {
                get {
                    return this.columnSpineMidZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NeckXColumn {
                get {
                    return this.columnNeckX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NeckYColumn {
                get {
                    return this.columnNeckY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NeckZColumn {
                get {
                    return this.columnNeckZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeadXColumn {
                get {
                    return this.columnHeadX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeadYColumn {
                get {
                    return this.columnHeadY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeadZColumn {
                get {
                    return this.columnHeadZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineShoulderXColumn {
                get {
                    return this.columnSpineShoulderX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineShoulderYColumn {
                get {
                    return this.columnSpineShoulderY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineShoulderZColumn {
                get {
                    return this.columnSpineShoulderZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShoulderLeftXColumn {
                get {
                    return this.columnShoulderLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShoulderLeftYColumn {
                get {
                    return this.columnShoulderLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShoulderLeftZColumn {
                get {
                    return this.columnShoulderLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ElbowLeftXColumn {
                get {
                    return this.columnElbowLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ElbowLeftYColumn {
                get {
                    return this.columnElbowLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ElbowLeftZColumn {
                get {
                    return this.columnElbowLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WristLeftXColumn {
                get {
                    return this.columnWristLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WristLeftYColumn {
                get {
                    return this.columnWristLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WristLeftZColumn {
                get {
                    return this.columnWristLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandLeftXColumn {
                get {
                    return this.columnHandLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandLeftYColumn {
                get {
                    return this.columnHandLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandLeftZColumn {
                get {
                    return this.columnHandLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HipLeftXColumn {
                get {
                    return this.columnHipLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HipLeftYColumn {
                get {
                    return this.columnHipLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HipLeftZColumn {
                get {
                    return this.columnHipLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KneeLeftXColumn {
                get {
                    return this.columnKneeLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KneeLeftYColumn {
                get {
                    return this.columnKneeLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KneeLeftZColumn {
                get {
                    return this.columnKneeLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnkleLeftXColumn {
                get {
                    return this.columnAnkleLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnkleLeftYColumn {
                get {
                    return this.columnAnkleLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnkleLeftZColumn {
                get {
                    return this.columnAnkleLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FootLeftXColumn {
                get {
                    return this.columnFootLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FootLeftYColumn {
                get {
                    return this.columnFootLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FootLeftZColumn {
                get {
                    return this.columnFootLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandTipLeftXColumn {
                get {
                    return this.columnHandTipLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandTipLeftYColumn {
                get {
                    return this.columnHandTipLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandTipLeftZColumn {
                get {
                    return this.columnHandTipLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThumbLeftXColumn {
                get {
                    return this.columnThumbLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThumbLeftYColumn {
                get {
                    return this.columnThumbLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThumbLeftZColumn {
                get {
                    return this.columnThumbLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShoulderRightXColumn {
                get {
                    return this.columnShoulderRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShoulderRightYColumn {
                get {
                    return this.columnShoulderRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShoulderRightZColumn {
                get {
                    return this.columnShoulderRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ElbowRightXColumn {
                get {
                    return this.columnElbowRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ElbowRightYColumn {
                get {
                    return this.columnElbowRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ElbowRightZColumn {
                get {
                    return this.columnElbowRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WristRightXColumn {
                get {
                    return this.columnWristRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WristRightYColumn {
                get {
                    return this.columnWristRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WristRightZColumn {
                get {
                    return this.columnWristRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandRightXColumn {
                get {
                    return this.columnHandRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandRightYColumn {
                get {
                    return this.columnHandRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandRightZColumn {
                get {
                    return this.columnHandRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HipRightXColumn {
                get {
                    return this.columnHipRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HipRightYColumn {
                get {
                    return this.columnHipRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HipRightZColumn {
                get {
                    return this.columnHipRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KneeRightXColumn {
                get {
                    return this.columnKneeRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KneeRightYColumn {
                get {
                    return this.columnKneeRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KneeRightZColumn {
                get {
                    return this.columnKneeRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnkleRightXColumn {
                get {
                    return this.columnAnkleRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnkleRightYColumn {
                get {
                    return this.columnAnkleRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnkleRightZColumn {
                get {
                    return this.columnAnkleRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FootRightXColumn {
                get {
                    return this.columnFootRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FootRightYColumn {
                get {
                    return this.columnFootRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FootRightZColumn {
                get {
                    return this.columnFootRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandTipRightXColumn {
                get {
                    return this.columnHandTipRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandTipRightYColumn {
                get {
                    return this.columnHandTipRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandTipRightZColumn {
                get {
                    return this.columnHandTipRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThumbRightXColumn {
                get {
                    return this.columnThumbRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThumbRightYColumn {
                get {
                    return this.columnThumbRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThumbRightZColumn {
                get {
                    return this.columnThumbRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_recordRow this[int index] {
                get {
                    return ((tab_exam_recordRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_exam_recordRowChangeEventHandler tab_exam_recordRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_exam_recordRowChangeEventHandler tab_exam_recordRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_exam_recordRowChangeEventHandler tab_exam_recordRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_exam_recordRowChangeEventHandler tab_exam_recordRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addtab_exam_recordRow(tab_exam_recordRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_recordRow Addtab_exam_recordRow(
                        tab_exam_typeRow parenttab_exam_typeRowByrecord2type, 
                        tab_examRow parenttab_examRowByrecord2exam, 
                        System.DateTime exam_time, 
                        string exam_snapshot_path, 
                        double SpineBaseX, 
                        double SpineBaseY, 
                        double SpineBaseZ, 
                        double SpineMidX, 
                        double SpineMidY, 
                        double SpineMidZ, 
                        double NeckX, 
                        double NeckY, 
                        double NeckZ, 
                        double HeadX, 
                        double HeadY, 
                        double HeadZ, 
                        double SpineShoulderX, 
                        double SpineShoulderY, 
                        double SpineShoulderZ, 
                        double ShoulderLeftX, 
                        double ShoulderLeftY, 
                        double ShoulderLeftZ, 
                        double ElbowLeftX, 
                        double ElbowLeftY, 
                        double ElbowLeftZ, 
                        double WristLeftX, 
                        double WristLeftY, 
                        double WristLeftZ, 
                        double HandLeftX, 
                        double HandLeftY, 
                        double HandLeftZ, 
                        double HipLeftX, 
                        double HipLeftY, 
                        double HipLeftZ, 
                        double KneeLeftX, 
                        double KneeLeftY, 
                        double KneeLeftZ, 
                        double AnkleLeftX, 
                        double AnkleLeftY, 
                        double AnkleLeftZ, 
                        double FootLeftX, 
                        double FootLeftY, 
                        double FootLeftZ, 
                        double HandTipLeftX, 
                        double HandTipLeftY, 
                        double HandTipLeftZ, 
                        double ThumbLeftX, 
                        double ThumbLeftY, 
                        double ThumbLeftZ, 
                        double ShoulderRightX, 
                        double ShoulderRightY, 
                        double ShoulderRightZ, 
                        double ElbowRightX, 
                        double ElbowRightY, 
                        double ElbowRightZ, 
                        double WristRightX, 
                        double WristRightY, 
                        double WristRightZ, 
                        double HandRightX, 
                        double HandRightY, 
                        double HandRightZ, 
                        double HipRightX, 
                        double HipRightY, 
                        double HipRightZ, 
                        double KneeRightX, 
                        double KneeRightY, 
                        double KneeRightZ, 
                        double AnkleRightX, 
                        double AnkleRightY, 
                        double AnkleRightZ, 
                        double FootRightX, 
                        double FootRightY, 
                        double FootRightZ, 
                        double HandTipRightX, 
                        double HandTipRightY, 
                        double HandTipRightZ, 
                        double ThumbRightX, 
                        double ThumbRightY, 
                        double ThumbRightZ) {
                tab_exam_recordRow rowtab_exam_recordRow = ((tab_exam_recordRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        exam_time,
                        exam_snapshot_path,
                        SpineBaseX,
                        SpineBaseY,
                        SpineBaseZ,
                        SpineMidX,
                        SpineMidY,
                        SpineMidZ,
                        NeckX,
                        NeckY,
                        NeckZ,
                        HeadX,
                        HeadY,
                        HeadZ,
                        SpineShoulderX,
                        SpineShoulderY,
                        SpineShoulderZ,
                        ShoulderLeftX,
                        ShoulderLeftY,
                        ShoulderLeftZ,
                        ElbowLeftX,
                        ElbowLeftY,
                        ElbowLeftZ,
                        WristLeftX,
                        WristLeftY,
                        WristLeftZ,
                        HandLeftX,
                        HandLeftY,
                        HandLeftZ,
                        HipLeftX,
                        HipLeftY,
                        HipLeftZ,
                        KneeLeftX,
                        KneeLeftY,
                        KneeLeftZ,
                        AnkleLeftX,
                        AnkleLeftY,
                        AnkleLeftZ,
                        FootLeftX,
                        FootLeftY,
                        FootLeftZ,
                        HandTipLeftX,
                        HandTipLeftY,
                        HandTipLeftZ,
                        ThumbLeftX,
                        ThumbLeftY,
                        ThumbLeftZ,
                        ShoulderRightX,
                        ShoulderRightY,
                        ShoulderRightZ,
                        ElbowRightX,
                        ElbowRightY,
                        ElbowRightZ,
                        WristRightX,
                        WristRightY,
                        WristRightZ,
                        HandRightX,
                        HandRightY,
                        HandRightZ,
                        HipRightX,
                        HipRightY,
                        HipRightZ,
                        KneeRightX,
                        KneeRightY,
                        KneeRightZ,
                        AnkleRightX,
                        AnkleRightY,
                        AnkleRightZ,
                        FootRightX,
                        FootRightY,
                        FootRightZ,
                        HandTipRightX,
                        HandTipRightY,
                        HandTipRightZ,
                        ThumbRightX,
                        ThumbRightY,
                        ThumbRightZ};
                if ((parenttab_exam_typeRowByrecord2type != null)) {
                    columnValuesArray[1] = parenttab_exam_typeRowByrecord2type[0];
                }
                if ((parenttab_examRowByrecord2exam != null)) {
                    columnValuesArray[2] = parenttab_examRowByrecord2exam[1];
                }
                rowtab_exam_recordRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtab_exam_recordRow);
                return rowtab_exam_recordRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_recordRow FindByid(int id) {
                return ((tab_exam_recordRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tab_exam_recordDataTable cln = ((tab_exam_recordDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tab_exam_recordDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnexam_type_id = base.Columns["exam_type_id"];
                this.columnexam_id = base.Columns["exam_id"];
                this.columnexam_time = base.Columns["exam_time"];
                this.columnexam_snapshot_path = base.Columns["exam_snapshot_path"];
                this.columnSpineBaseX = base.Columns["SpineBaseX"];
                this.columnSpineBaseY = base.Columns["SpineBaseY"];
                this.columnSpineBaseZ = base.Columns["SpineBaseZ"];
                this.columnSpineMidX = base.Columns["SpineMidX"];
                this.columnSpineMidY = base.Columns["SpineMidY"];
                this.columnSpineMidZ = base.Columns["SpineMidZ"];
                this.columnNeckX = base.Columns["NeckX"];
                this.columnNeckY = base.Columns["NeckY"];
                this.columnNeckZ = base.Columns["NeckZ"];
                this.columnHeadX = base.Columns["HeadX"];
                this.columnHeadY = base.Columns["HeadY"];
                this.columnHeadZ = base.Columns["HeadZ"];
                this.columnSpineShoulderX = base.Columns["SpineShoulderX"];
                this.columnSpineShoulderY = base.Columns["SpineShoulderY"];
                this.columnSpineShoulderZ = base.Columns["SpineShoulderZ"];
                this.columnShoulderLeftX = base.Columns["ShoulderLeftX"];
                this.columnShoulderLeftY = base.Columns["ShoulderLeftY"];
                this.columnShoulderLeftZ = base.Columns["ShoulderLeftZ"];
                this.columnElbowLeftX = base.Columns["ElbowLeftX"];
                this.columnElbowLeftY = base.Columns["ElbowLeftY"];
                this.columnElbowLeftZ = base.Columns["ElbowLeftZ"];
                this.columnWristLeftX = base.Columns["WristLeftX"];
                this.columnWristLeftY = base.Columns["WristLeftY"];
                this.columnWristLeftZ = base.Columns["WristLeftZ"];
                this.columnHandLeftX = base.Columns["HandLeftX"];
                this.columnHandLeftY = base.Columns["HandLeftY"];
                this.columnHandLeftZ = base.Columns["HandLeftZ"];
                this.columnHipLeftX = base.Columns["HipLeftX"];
                this.columnHipLeftY = base.Columns["HipLeftY"];
                this.columnHipLeftZ = base.Columns["HipLeftZ"];
                this.columnKneeLeftX = base.Columns["KneeLeftX"];
                this.columnKneeLeftY = base.Columns["KneeLeftY"];
                this.columnKneeLeftZ = base.Columns["KneeLeftZ"];
                this.columnAnkleLeftX = base.Columns["AnkleLeftX"];
                this.columnAnkleLeftY = base.Columns["AnkleLeftY"];
                this.columnAnkleLeftZ = base.Columns["AnkleLeftZ"];
                this.columnFootLeftX = base.Columns["FootLeftX"];
                this.columnFootLeftY = base.Columns["FootLeftY"];
                this.columnFootLeftZ = base.Columns["FootLeftZ"];
                this.columnHandTipLeftX = base.Columns["HandTipLeftX"];
                this.columnHandTipLeftY = base.Columns["HandTipLeftY"];
                this.columnHandTipLeftZ = base.Columns["HandTipLeftZ"];
                this.columnThumbLeftX = base.Columns["ThumbLeftX"];
                this.columnThumbLeftY = base.Columns["ThumbLeftY"];
                this.columnThumbLeftZ = base.Columns["ThumbLeftZ"];
                this.columnShoulderRightX = base.Columns["ShoulderRightX"];
                this.columnShoulderRightY = base.Columns["ShoulderRightY"];
                this.columnShoulderRightZ = base.Columns["ShoulderRightZ"];
                this.columnElbowRightX = base.Columns["ElbowRightX"];
                this.columnElbowRightY = base.Columns["ElbowRightY"];
                this.columnElbowRightZ = base.Columns["ElbowRightZ"];
                this.columnWristRightX = base.Columns["WristRightX"];
                this.columnWristRightY = base.Columns["WristRightY"];
                this.columnWristRightZ = base.Columns["WristRightZ"];
                this.columnHandRightX = base.Columns["HandRightX"];
                this.columnHandRightY = base.Columns["HandRightY"];
                this.columnHandRightZ = base.Columns["HandRightZ"];
                this.columnHipRightX = base.Columns["HipRightX"];
                this.columnHipRightY = base.Columns["HipRightY"];
                this.columnHipRightZ = base.Columns["HipRightZ"];
                this.columnKneeRightX = base.Columns["KneeRightX"];
                this.columnKneeRightY = base.Columns["KneeRightY"];
                this.columnKneeRightZ = base.Columns["KneeRightZ"];
                this.columnAnkleRightX = base.Columns["AnkleRightX"];
                this.columnAnkleRightY = base.Columns["AnkleRightY"];
                this.columnAnkleRightZ = base.Columns["AnkleRightZ"];
                this.columnFootRightX = base.Columns["FootRightX"];
                this.columnFootRightY = base.Columns["FootRightY"];
                this.columnFootRightZ = base.Columns["FootRightZ"];
                this.columnHandTipRightX = base.Columns["HandTipRightX"];
                this.columnHandTipRightY = base.Columns["HandTipRightY"];
                this.columnHandTipRightZ = base.Columns["HandTipRightZ"];
                this.columnThumbRightX = base.Columns["ThumbRightX"];
                this.columnThumbRightY = base.Columns["ThumbRightY"];
                this.columnThumbRightZ = base.Columns["ThumbRightZ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnexam_type_id = new global::System.Data.DataColumn("exam_type_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexam_type_id);
                this.columnexam_id = new global::System.Data.DataColumn("exam_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexam_id);
                this.columnexam_time = new global::System.Data.DataColumn("exam_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexam_time);
                this.columnexam_snapshot_path = new global::System.Data.DataColumn("exam_snapshot_path", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexam_snapshot_path);
                this.columnSpineBaseX = new global::System.Data.DataColumn("SpineBaseX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineBaseX);
                this.columnSpineBaseY = new global::System.Data.DataColumn("SpineBaseY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineBaseY);
                this.columnSpineBaseZ = new global::System.Data.DataColumn("SpineBaseZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineBaseZ);
                this.columnSpineMidX = new global::System.Data.DataColumn("SpineMidX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineMidX);
                this.columnSpineMidY = new global::System.Data.DataColumn("SpineMidY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineMidY);
                this.columnSpineMidZ = new global::System.Data.DataColumn("SpineMidZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineMidZ);
                this.columnNeckX = new global::System.Data.DataColumn("NeckX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeckX);
                this.columnNeckY = new global::System.Data.DataColumn("NeckY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeckY);
                this.columnNeckZ = new global::System.Data.DataColumn("NeckZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeckZ);
                this.columnHeadX = new global::System.Data.DataColumn("HeadX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadX);
                this.columnHeadY = new global::System.Data.DataColumn("HeadY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadY);
                this.columnHeadZ = new global::System.Data.DataColumn("HeadZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadZ);
                this.columnSpineShoulderX = new global::System.Data.DataColumn("SpineShoulderX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineShoulderX);
                this.columnSpineShoulderY = new global::System.Data.DataColumn("SpineShoulderY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineShoulderY);
                this.columnSpineShoulderZ = new global::System.Data.DataColumn("SpineShoulderZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineShoulderZ);
                this.columnShoulderLeftX = new global::System.Data.DataColumn("ShoulderLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoulderLeftX);
                this.columnShoulderLeftY = new global::System.Data.DataColumn("ShoulderLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoulderLeftY);
                this.columnShoulderLeftZ = new global::System.Data.DataColumn("ShoulderLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoulderLeftZ);
                this.columnElbowLeftX = new global::System.Data.DataColumn("ElbowLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElbowLeftX);
                this.columnElbowLeftY = new global::System.Data.DataColumn("ElbowLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElbowLeftY);
                this.columnElbowLeftZ = new global::System.Data.DataColumn("ElbowLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElbowLeftZ);
                this.columnWristLeftX = new global::System.Data.DataColumn("WristLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWristLeftX);
                this.columnWristLeftY = new global::System.Data.DataColumn("WristLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWristLeftY);
                this.columnWristLeftZ = new global::System.Data.DataColumn("WristLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWristLeftZ);
                this.columnHandLeftX = new global::System.Data.DataColumn("HandLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandLeftX);
                this.columnHandLeftY = new global::System.Data.DataColumn("HandLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandLeftY);
                this.columnHandLeftZ = new global::System.Data.DataColumn("HandLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandLeftZ);
                this.columnHipLeftX = new global::System.Data.DataColumn("HipLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHipLeftX);
                this.columnHipLeftY = new global::System.Data.DataColumn("HipLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHipLeftY);
                this.columnHipLeftZ = new global::System.Data.DataColumn("HipLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHipLeftZ);
                this.columnKneeLeftX = new global::System.Data.DataColumn("KneeLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKneeLeftX);
                this.columnKneeLeftY = new global::System.Data.DataColumn("KneeLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKneeLeftY);
                this.columnKneeLeftZ = new global::System.Data.DataColumn("KneeLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKneeLeftZ);
                this.columnAnkleLeftX = new global::System.Data.DataColumn("AnkleLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnkleLeftX);
                this.columnAnkleLeftY = new global::System.Data.DataColumn("AnkleLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnkleLeftY);
                this.columnAnkleLeftZ = new global::System.Data.DataColumn("AnkleLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnkleLeftZ);
                this.columnFootLeftX = new global::System.Data.DataColumn("FootLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFootLeftX);
                this.columnFootLeftY = new global::System.Data.DataColumn("FootLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFootLeftY);
                this.columnFootLeftZ = new global::System.Data.DataColumn("FootLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFootLeftZ);
                this.columnHandTipLeftX = new global::System.Data.DataColumn("HandTipLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandTipLeftX);
                this.columnHandTipLeftY = new global::System.Data.DataColumn("HandTipLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandTipLeftY);
                this.columnHandTipLeftZ = new global::System.Data.DataColumn("HandTipLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandTipLeftZ);
                this.columnThumbLeftX = new global::System.Data.DataColumn("ThumbLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumbLeftX);
                this.columnThumbLeftY = new global::System.Data.DataColumn("ThumbLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumbLeftY);
                this.columnThumbLeftZ = new global::System.Data.DataColumn("ThumbLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumbLeftZ);
                this.columnShoulderRightX = new global::System.Data.DataColumn("ShoulderRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoulderRightX);
                this.columnShoulderRightY = new global::System.Data.DataColumn("ShoulderRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoulderRightY);
                this.columnShoulderRightZ = new global::System.Data.DataColumn("ShoulderRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoulderRightZ);
                this.columnElbowRightX = new global::System.Data.DataColumn("ElbowRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElbowRightX);
                this.columnElbowRightY = new global::System.Data.DataColumn("ElbowRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElbowRightY);
                this.columnElbowRightZ = new global::System.Data.DataColumn("ElbowRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElbowRightZ);
                this.columnWristRightX = new global::System.Data.DataColumn("WristRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWristRightX);
                this.columnWristRightY = new global::System.Data.DataColumn("WristRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWristRightY);
                this.columnWristRightZ = new global::System.Data.DataColumn("WristRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWristRightZ);
                this.columnHandRightX = new global::System.Data.DataColumn("HandRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandRightX);
                this.columnHandRightY = new global::System.Data.DataColumn("HandRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandRightY);
                this.columnHandRightZ = new global::System.Data.DataColumn("HandRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandRightZ);
                this.columnHipRightX = new global::System.Data.DataColumn("HipRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHipRightX);
                this.columnHipRightY = new global::System.Data.DataColumn("HipRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHipRightY);
                this.columnHipRightZ = new global::System.Data.DataColumn("HipRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHipRightZ);
                this.columnKneeRightX = new global::System.Data.DataColumn("KneeRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKneeRightX);
                this.columnKneeRightY = new global::System.Data.DataColumn("KneeRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKneeRightY);
                this.columnKneeRightZ = new global::System.Data.DataColumn("KneeRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKneeRightZ);
                this.columnAnkleRightX = new global::System.Data.DataColumn("AnkleRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnkleRightX);
                this.columnAnkleRightY = new global::System.Data.DataColumn("AnkleRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnkleRightY);
                this.columnAnkleRightZ = new global::System.Data.DataColumn("AnkleRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnkleRightZ);
                this.columnFootRightX = new global::System.Data.DataColumn("FootRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFootRightX);
                this.columnFootRightY = new global::System.Data.DataColumn("FootRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFootRightY);
                this.columnFootRightZ = new global::System.Data.DataColumn("FootRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFootRightZ);
                this.columnHandTipRightX = new global::System.Data.DataColumn("HandTipRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandTipRightX);
                this.columnHandTipRightY = new global::System.Data.DataColumn("HandTipRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandTipRightY);
                this.columnHandTipRightZ = new global::System.Data.DataColumn("HandTipRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandTipRightZ);
                this.columnThumbRightX = new global::System.Data.DataColumn("ThumbRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumbRightX);
                this.columnThumbRightY = new global::System.Data.DataColumn("ThumbRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumbRightY);
                this.columnThumbRightZ = new global::System.Data.DataColumn("ThumbRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumbRightZ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnexam_type_id.AllowDBNull = false;
                this.columnexam_id.AllowDBNull = false;
                this.columnexam_snapshot_path.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_recordRow Newtab_exam_recordRow() {
                return ((tab_exam_recordRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tab_exam_recordRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tab_exam_recordRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tab_exam_recordRowChanged != null)) {
                    this.tab_exam_recordRowChanged(this, new tab_exam_recordRowChangeEvent(((tab_exam_recordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tab_exam_recordRowChanging != null)) {
                    this.tab_exam_recordRowChanging(this, new tab_exam_recordRowChangeEvent(((tab_exam_recordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tab_exam_recordRowDeleted != null)) {
                    this.tab_exam_recordRowDeleted(this, new tab_exam_recordRowChangeEvent(((tab_exam_recordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tab_exam_recordRowDeleting != null)) {
                    this.tab_exam_recordRowDeleting(this, new tab_exam_recordRowChangeEvent(((tab_exam_recordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removetab_exam_recordRow(tab_exam_recordRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                jointexamDataSet ds = new jointexamDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tab_exam_recordDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tab_exam_typeDataTable : global::System.Data.TypedTableBase<tab_exam_typeRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columndesc;
            
            private global::System.Data.DataColumn columnorder;
            
            private global::System.Data.DataColumn columnstyle;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_typeDataTable() {
                this.TableName = "tab_exam_type";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tab_exam_typeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tab_exam_typeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn descColumn {
                get {
                    return this.columndesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn orderColumn {
                get {
                    return this.columnorder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn styleColumn {
                get {
                    return this.columnstyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_typeRow this[int index] {
                get {
                    return ((tab_exam_typeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_exam_typeRowChangeEventHandler tab_exam_typeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_exam_typeRowChangeEventHandler tab_exam_typeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_exam_typeRowChangeEventHandler tab_exam_typeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_exam_typeRowChangeEventHandler tab_exam_typeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addtab_exam_typeRow(tab_exam_typeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_typeRow Addtab_exam_typeRow(string name, string desc, int order, int style) {
                tab_exam_typeRow rowtab_exam_typeRow = ((tab_exam_typeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name,
                        desc,
                        order,
                        style};
                rowtab_exam_typeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtab_exam_typeRow);
                return rowtab_exam_typeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_typeRow FindByid(int id) {
                return ((tab_exam_typeRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tab_exam_typeDataTable cln = ((tab_exam_typeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tab_exam_typeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columndesc = base.Columns["desc"];
                this.columnorder = base.Columns["order"];
                this.columnstyle = base.Columns["style"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columndesc = new global::System.Data.DataColumn("desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesc);
                this.columnorder = new global::System.Data.DataColumn("order", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder);
                this.columnstyle = new global::System.Data.DataColumn("style", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstyle);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 100;
                this.columndesc.MaxLength = 500;
                this.columnorder.AllowDBNull = false;
                this.columnstyle.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_typeRow Newtab_exam_typeRow() {
                return ((tab_exam_typeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tab_exam_typeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tab_exam_typeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tab_exam_typeRowChanged != null)) {
                    this.tab_exam_typeRowChanged(this, new tab_exam_typeRowChangeEvent(((tab_exam_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tab_exam_typeRowChanging != null)) {
                    this.tab_exam_typeRowChanging(this, new tab_exam_typeRowChangeEvent(((tab_exam_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tab_exam_typeRowDeleted != null)) {
                    this.tab_exam_typeRowDeleted(this, new tab_exam_typeRowChangeEvent(((tab_exam_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tab_exam_typeRowDeleting != null)) {
                    this.tab_exam_typeRowDeleting(this, new tab_exam_typeRowChangeEvent(((tab_exam_typeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removetab_exam_typeRow(tab_exam_typeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                jointexamDataSet ds = new jointexamDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tab_exam_typeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class tab_personDataTable : global::System.Data.TypedTableBase<tab_personRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnsex;
            
            private global::System.Data.DataColumn columnbirthday;
            
            private global::System.Data.DataColumn columnrace;
            
            private global::System.Data.DataColumn columnheight;
            
            private global::System.Data.DataColumn columnweight;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_personDataTable() {
                this.TableName = "tab_person";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tab_personDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected tab_personDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sexColumn {
                get {
                    return this.columnsex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn birthdayColumn {
                get {
                    return this.columnbirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn raceColumn {
                get {
                    return this.columnrace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn heightColumn {
                get {
                    return this.columnheight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_personRow this[int index] {
                get {
                    return ((tab_personRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_personRowChangeEventHandler tab_personRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_personRowChangeEventHandler tab_personRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_personRowChangeEventHandler tab_personRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event tab_personRowChangeEventHandler tab_personRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addtab_personRow(tab_personRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_personRow Addtab_personRow(string name, string sex, System.DateTime birthday, string race, float height, float weight) {
                tab_personRow rowtab_personRow = ((tab_personRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name,
                        sex,
                        birthday,
                        race,
                        height,
                        weight};
                rowtab_personRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowtab_personRow);
                return rowtab_personRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_personRow FindByid(int id) {
                return ((tab_personRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                tab_personDataTable cln = ((tab_personDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new tab_personDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnname = base.Columns["name"];
                this.columnsex = base.Columns["sex"];
                this.columnbirthday = base.Columns["birthday"];
                this.columnrace = base.Columns["race"];
                this.columnheight = base.Columns["height"];
                this.columnweight = base.Columns["weight"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnsex = new global::System.Data.DataColumn("sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsex);
                this.columnbirthday = new global::System.Data.DataColumn("birthday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthday);
                this.columnrace = new global::System.Data.DataColumn("race", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrace);
                this.columnheight = new global::System.Data.DataColumn("height", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnheight);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.Unique = true;
                this.columnname.MaxLength = 100;
                this.columnsex.MaxLength = 1;
                this.columnrace.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_personRow Newtab_personRow() {
                return ((tab_personRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new tab_personRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(tab_personRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.tab_personRowChanged != null)) {
                    this.tab_personRowChanged(this, new tab_personRowChangeEvent(((tab_personRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.tab_personRowChanging != null)) {
                    this.tab_personRowChanging(this, new tab_personRowChangeEvent(((tab_personRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.tab_personRowDeleted != null)) {
                    this.tab_personRowDeleted(this, new tab_personRowChangeEvent(((tab_personRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.tab_personRowDeleting != null)) {
                    this.tab_personRowDeleting(this, new tab_personRowChangeEvent(((tab_personRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removetab_personRow(tab_personRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                jointexamDataSet ds = new jointexamDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "tab_personDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ExamMasterDataTable : global::System.Data.TypedTableBase<ExamMasterRow> {
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnsex;
            
            private global::System.Data.DataColumn columnbirthday;
            
            private global::System.Data.DataColumn columnrace;
            
            private global::System.Data.DataColumn columnweight;
            
            private global::System.Data.DataColumn columnheight;
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnexam_date;
            
            private global::System.Data.DataColumn columnoperater;
            
            private global::System.Data.DataColumn columnexam_age;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ExamMasterDataTable() {
                this.TableName = "ExamMaster";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ExamMasterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ExamMasterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sexColumn {
                get {
                    return this.columnsex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn birthdayColumn {
                get {
                    return this.columnbirthday;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn raceColumn {
                get {
                    return this.columnrace;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn weightColumn {
                get {
                    return this.columnweight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn heightColumn {
                get {
                    return this.columnheight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn exam_dateColumn {
                get {
                    return this.columnexam_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn operaterColumn {
                get {
                    return this.columnoperater;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn exam_ageColumn {
                get {
                    return this.columnexam_age;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ExamMasterRow this[int index] {
                get {
                    return ((ExamMasterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ExamMasterRowChangeEventHandler ExamMasterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ExamMasterRowChangeEventHandler ExamMasterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ExamMasterRowChangeEventHandler ExamMasterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ExamMasterRowChangeEventHandler ExamMasterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddExamMasterRow(ExamMasterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ExamMasterRow AddExamMasterRow(string name, string sex, System.DateTime birthday, string race, float weight, float height, System.DateTime exam_date, string operater, int exam_age) {
                ExamMasterRow rowExamMasterRow = ((ExamMasterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        name,
                        sex,
                        birthday,
                        race,
                        weight,
                        height,
                        null,
                        exam_date,
                        operater,
                        exam_age};
                rowExamMasterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowExamMasterRow);
                return rowExamMasterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ExamMasterDataTable cln = ((ExamMasterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ExamMasterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnname = base.Columns["name"];
                this.columnsex = base.Columns["sex"];
                this.columnbirthday = base.Columns["birthday"];
                this.columnrace = base.Columns["race"];
                this.columnweight = base.Columns["weight"];
                this.columnheight = base.Columns["height"];
                this.columnid = base.Columns["id"];
                this.columnexam_date = base.Columns["exam_date"];
                this.columnoperater = base.Columns["operater"];
                this.columnexam_age = base.Columns["exam_age"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnsex = new global::System.Data.DataColumn("sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsex);
                this.columnbirthday = new global::System.Data.DataColumn("birthday", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirthday);
                this.columnrace = new global::System.Data.DataColumn("race", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrace);
                this.columnweight = new global::System.Data.DataColumn("weight", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnweight);
                this.columnheight = new global::System.Data.DataColumn("height", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnheight);
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnexam_date = new global::System.Data.DataColumn("exam_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexam_date);
                this.columnoperater = new global::System.Data.DataColumn("operater", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoperater);
                this.columnexam_age = new global::System.Data.DataColumn("exam_age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexam_age);
                this.columnname.MaxLength = 100;
                this.columnsex.MaxLength = 1;
                this.columnrace.MaxLength = 10;
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnoperater.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ExamMasterRow NewExamMasterRow() {
                return ((ExamMasterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ExamMasterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ExamMasterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ExamMasterRowChanged != null)) {
                    this.ExamMasterRowChanged(this, new ExamMasterRowChangeEvent(((ExamMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ExamMasterRowChanging != null)) {
                    this.ExamMasterRowChanging(this, new ExamMasterRowChangeEvent(((ExamMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ExamMasterRowDeleted != null)) {
                    this.ExamMasterRowDeleted(this, new ExamMasterRowChangeEvent(((ExamMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ExamMasterRowDeleting != null)) {
                    this.ExamMasterRowDeleting(this, new ExamMasterRowChangeEvent(((ExamMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveExamMasterRow(ExamMasterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                jointexamDataSet ds = new jointexamDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ExamMasterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ExamRecordDataTable : global::System.Data.TypedTableBase<ExamRecordRow> {
            
            private global::System.Data.DataColumn columnexam_time;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnexam_snapshot_path;
            
            private global::System.Data.DataColumn columnSpineBaseX;
            
            private global::System.Data.DataColumn columnSpineBaseY;
            
            private global::System.Data.DataColumn columnSpineBaseZ;
            
            private global::System.Data.DataColumn columnSpineMidX;
            
            private global::System.Data.DataColumn columnThumbRightZ;
            
            private global::System.Data.DataColumn columnThumbRightY;
            
            private global::System.Data.DataColumn columnThumbRightX;
            
            private global::System.Data.DataColumn columnHandTipRightZ;
            
            private global::System.Data.DataColumn columnHandTipRightY;
            
            private global::System.Data.DataColumn columnHandTipRightX;
            
            private global::System.Data.DataColumn columnFootRightZ;
            
            private global::System.Data.DataColumn columnFootRightY;
            
            private global::System.Data.DataColumn columnFootRightX;
            
            private global::System.Data.DataColumn columnAnkleRightZ;
            
            private global::System.Data.DataColumn columnAnkleRightX;
            
            private global::System.Data.DataColumn columnAnkleRightY;
            
            private global::System.Data.DataColumn columnKneeRightZ;
            
            private global::System.Data.DataColumn columnKneeRightY;
            
            private global::System.Data.DataColumn columnKneeRightX;
            
            private global::System.Data.DataColumn columnHipRightZ;
            
            private global::System.Data.DataColumn columnHipRightY;
            
            private global::System.Data.DataColumn columnHipRightX;
            
            private global::System.Data.DataColumn columnHandRightZ;
            
            private global::System.Data.DataColumn columnHandRightY;
            
            private global::System.Data.DataColumn columnHandRightX;
            
            private global::System.Data.DataColumn columnWristRightZ;
            
            private global::System.Data.DataColumn columnWristRightY;
            
            private global::System.Data.DataColumn columnWristRightX;
            
            private global::System.Data.DataColumn columnElbowRightZ;
            
            private global::System.Data.DataColumn columnElbowRightY;
            
            private global::System.Data.DataColumn columnElbowRightX;
            
            private global::System.Data.DataColumn columnShoulderRightZ;
            
            private global::System.Data.DataColumn columnShoulderRightY;
            
            private global::System.Data.DataColumn columnShoulderRightX;
            
            private global::System.Data.DataColumn columnThumbLeftZ;
            
            private global::System.Data.DataColumn columnThumbLeftY;
            
            private global::System.Data.DataColumn columnThumbLeftX;
            
            private global::System.Data.DataColumn columnHandTipLeftZ;
            
            private global::System.Data.DataColumn columnHandTipLeftY;
            
            private global::System.Data.DataColumn columnHandTipLeftX;
            
            private global::System.Data.DataColumn columnFootLeftZ;
            
            private global::System.Data.DataColumn columnFootLeftY;
            
            private global::System.Data.DataColumn columnFootLeftX;
            
            private global::System.Data.DataColumn columnAnkleLeftZ;
            
            private global::System.Data.DataColumn columnAnkleLeftY;
            
            private global::System.Data.DataColumn columnAnkleLeftX;
            
            private global::System.Data.DataColumn columnKneeLeftZ;
            
            private global::System.Data.DataColumn columnKneeLeftY;
            
            private global::System.Data.DataColumn columnKneeLeftX;
            
            private global::System.Data.DataColumn columnHipLeftZ;
            
            private global::System.Data.DataColumn columnHipLeftY;
            
            private global::System.Data.DataColumn columnHipLeftX;
            
            private global::System.Data.DataColumn columnHandLeftZ;
            
            private global::System.Data.DataColumn columnHandLeftY;
            
            private global::System.Data.DataColumn columnHandLeftX;
            
            private global::System.Data.DataColumn columnWristLeftZ;
            
            private global::System.Data.DataColumn columnWristLeftY;
            
            private global::System.Data.DataColumn columnWristLeftX;
            
            private global::System.Data.DataColumn columnElbowLeftZ;
            
            private global::System.Data.DataColumn columnElbowLeftY;
            
            private global::System.Data.DataColumn columnElbowLeftX;
            
            private global::System.Data.DataColumn columnShoulderLeftZ;
            
            private global::System.Data.DataColumn columnShoulderLeftY;
            
            private global::System.Data.DataColumn columnShoulderLeftX;
            
            private global::System.Data.DataColumn columnSpineShoulderZ;
            
            private global::System.Data.DataColumn columnSpineShoulderY;
            
            private global::System.Data.DataColumn columnSpineShoulderX;
            
            private global::System.Data.DataColumn columnHeadZ;
            
            private global::System.Data.DataColumn columnHeadY;
            
            private global::System.Data.DataColumn columnHeadX;
            
            private global::System.Data.DataColumn columnNeckZ;
            
            private global::System.Data.DataColumn columnNeckY;
            
            private global::System.Data.DataColumn columnNeckX;
            
            private global::System.Data.DataColumn columnSpineMidZ;
            
            private global::System.Data.DataColumn columnSpineMidY;
            
            private global::System.Data.DataColumn columnorder;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ExamRecordDataTable() {
                this.TableName = "ExamRecord";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ExamRecordDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ExamRecordDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn exam_timeColumn {
                get {
                    return this.columnexam_time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn exam_snapshot_pathColumn {
                get {
                    return this.columnexam_snapshot_path;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineBaseXColumn {
                get {
                    return this.columnSpineBaseX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineBaseYColumn {
                get {
                    return this.columnSpineBaseY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineBaseZColumn {
                get {
                    return this.columnSpineBaseZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineMidXColumn {
                get {
                    return this.columnSpineMidX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThumbRightZColumn {
                get {
                    return this.columnThumbRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThumbRightYColumn {
                get {
                    return this.columnThumbRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThumbRightXColumn {
                get {
                    return this.columnThumbRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandTipRightZColumn {
                get {
                    return this.columnHandTipRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandTipRightYColumn {
                get {
                    return this.columnHandTipRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandTipRightXColumn {
                get {
                    return this.columnHandTipRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FootRightZColumn {
                get {
                    return this.columnFootRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FootRightYColumn {
                get {
                    return this.columnFootRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FootRightXColumn {
                get {
                    return this.columnFootRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnkleRightZColumn {
                get {
                    return this.columnAnkleRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnkleRightXColumn {
                get {
                    return this.columnAnkleRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnkleRightYColumn {
                get {
                    return this.columnAnkleRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KneeRightZColumn {
                get {
                    return this.columnKneeRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KneeRightYColumn {
                get {
                    return this.columnKneeRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KneeRightXColumn {
                get {
                    return this.columnKneeRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HipRightZColumn {
                get {
                    return this.columnHipRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HipRightYColumn {
                get {
                    return this.columnHipRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HipRightXColumn {
                get {
                    return this.columnHipRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandRightZColumn {
                get {
                    return this.columnHandRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandRightYColumn {
                get {
                    return this.columnHandRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandRightXColumn {
                get {
                    return this.columnHandRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WristRightZColumn {
                get {
                    return this.columnWristRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WristRightYColumn {
                get {
                    return this.columnWristRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WristRightXColumn {
                get {
                    return this.columnWristRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ElbowRightZColumn {
                get {
                    return this.columnElbowRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ElbowRightYColumn {
                get {
                    return this.columnElbowRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ElbowRightXColumn {
                get {
                    return this.columnElbowRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShoulderRightZColumn {
                get {
                    return this.columnShoulderRightZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShoulderRightYColumn {
                get {
                    return this.columnShoulderRightY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShoulderRightXColumn {
                get {
                    return this.columnShoulderRightX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThumbLeftZColumn {
                get {
                    return this.columnThumbLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThumbLeftYColumn {
                get {
                    return this.columnThumbLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThumbLeftXColumn {
                get {
                    return this.columnThumbLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandTipLeftZColumn {
                get {
                    return this.columnHandTipLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandTipLeftYColumn {
                get {
                    return this.columnHandTipLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandTipLeftXColumn {
                get {
                    return this.columnHandTipLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FootLeftZColumn {
                get {
                    return this.columnFootLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FootLeftYColumn {
                get {
                    return this.columnFootLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FootLeftXColumn {
                get {
                    return this.columnFootLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnkleLeftZColumn {
                get {
                    return this.columnAnkleLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnkleLeftYColumn {
                get {
                    return this.columnAnkleLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AnkleLeftXColumn {
                get {
                    return this.columnAnkleLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KneeLeftZColumn {
                get {
                    return this.columnKneeLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KneeLeftYColumn {
                get {
                    return this.columnKneeLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KneeLeftXColumn {
                get {
                    return this.columnKneeLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HipLeftZColumn {
                get {
                    return this.columnHipLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HipLeftYColumn {
                get {
                    return this.columnHipLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HipLeftXColumn {
                get {
                    return this.columnHipLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandLeftZColumn {
                get {
                    return this.columnHandLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandLeftYColumn {
                get {
                    return this.columnHandLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HandLeftXColumn {
                get {
                    return this.columnHandLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WristLeftZColumn {
                get {
                    return this.columnWristLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WristLeftYColumn {
                get {
                    return this.columnWristLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WristLeftXColumn {
                get {
                    return this.columnWristLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ElbowLeftZColumn {
                get {
                    return this.columnElbowLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ElbowLeftYColumn {
                get {
                    return this.columnElbowLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ElbowLeftXColumn {
                get {
                    return this.columnElbowLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShoulderLeftZColumn {
                get {
                    return this.columnShoulderLeftZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShoulderLeftYColumn {
                get {
                    return this.columnShoulderLeftY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShoulderLeftXColumn {
                get {
                    return this.columnShoulderLeftX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineShoulderZColumn {
                get {
                    return this.columnSpineShoulderZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineShoulderYColumn {
                get {
                    return this.columnSpineShoulderY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineShoulderXColumn {
                get {
                    return this.columnSpineShoulderX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeadZColumn {
                get {
                    return this.columnHeadZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeadYColumn {
                get {
                    return this.columnHeadY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeadXColumn {
                get {
                    return this.columnHeadX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NeckZColumn {
                get {
                    return this.columnNeckZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NeckYColumn {
                get {
                    return this.columnNeckY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NeckXColumn {
                get {
                    return this.columnNeckX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineMidZColumn {
                get {
                    return this.columnSpineMidZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SpineMidYColumn {
                get {
                    return this.columnSpineMidY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn orderColumn {
                get {
                    return this.columnorder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ExamRecordRow this[int index] {
                get {
                    return ((ExamRecordRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ExamRecordRowChangeEventHandler ExamRecordRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ExamRecordRowChangeEventHandler ExamRecordRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ExamRecordRowChangeEventHandler ExamRecordRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ExamRecordRowChangeEventHandler ExamRecordRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddExamRecordRow(ExamRecordRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ExamRecordRow AddExamRecordRow(
                        System.DateTime exam_time, 
                        string name, 
                        string exam_snapshot_path, 
                        double SpineBaseX, 
                        double SpineBaseY, 
                        double SpineBaseZ, 
                        double SpineMidX, 
                        double ThumbRightZ, 
                        double ThumbRightY, 
                        double ThumbRightX, 
                        double HandTipRightZ, 
                        double HandTipRightY, 
                        double HandTipRightX, 
                        double FootRightZ, 
                        double FootRightY, 
                        double FootRightX, 
                        double AnkleRightZ, 
                        double AnkleRightX, 
                        double AnkleRightY, 
                        double KneeRightZ, 
                        double KneeRightY, 
                        double KneeRightX, 
                        double HipRightZ, 
                        double HipRightY, 
                        double HipRightX, 
                        double HandRightZ, 
                        double HandRightY, 
                        double HandRightX, 
                        double WristRightZ, 
                        double WristRightY, 
                        double WristRightX, 
                        double ElbowRightZ, 
                        double ElbowRightY, 
                        double ElbowRightX, 
                        double ShoulderRightZ, 
                        double ShoulderRightY, 
                        double ShoulderRightX, 
                        double ThumbLeftZ, 
                        double ThumbLeftY, 
                        double ThumbLeftX, 
                        double HandTipLeftZ, 
                        double HandTipLeftY, 
                        double HandTipLeftX, 
                        double FootLeftZ, 
                        double FootLeftY, 
                        double FootLeftX, 
                        double AnkleLeftZ, 
                        double AnkleLeftY, 
                        double AnkleLeftX, 
                        double KneeLeftZ, 
                        double KneeLeftY, 
                        double KneeLeftX, 
                        double HipLeftZ, 
                        double HipLeftY, 
                        double HipLeftX, 
                        double HandLeftZ, 
                        double HandLeftY, 
                        double HandLeftX, 
                        double WristLeftZ, 
                        double WristLeftY, 
                        double WristLeftX, 
                        double ElbowLeftZ, 
                        double ElbowLeftY, 
                        double ElbowLeftX, 
                        double ShoulderLeftZ, 
                        double ShoulderLeftY, 
                        double ShoulderLeftX, 
                        double SpineShoulderZ, 
                        double SpineShoulderY, 
                        double SpineShoulderX, 
                        double HeadZ, 
                        double HeadY, 
                        double HeadX, 
                        double NeckZ, 
                        double NeckY, 
                        double NeckX, 
                        double SpineMidZ, 
                        double SpineMidY, 
                        int order) {
                ExamRecordRow rowExamRecordRow = ((ExamRecordRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        exam_time,
                        name,
                        exam_snapshot_path,
                        SpineBaseX,
                        SpineBaseY,
                        SpineBaseZ,
                        SpineMidX,
                        ThumbRightZ,
                        ThumbRightY,
                        ThumbRightX,
                        HandTipRightZ,
                        HandTipRightY,
                        HandTipRightX,
                        FootRightZ,
                        FootRightY,
                        FootRightX,
                        AnkleRightZ,
                        AnkleRightX,
                        AnkleRightY,
                        KneeRightZ,
                        KneeRightY,
                        KneeRightX,
                        HipRightZ,
                        HipRightY,
                        HipRightX,
                        HandRightZ,
                        HandRightY,
                        HandRightX,
                        WristRightZ,
                        WristRightY,
                        WristRightX,
                        ElbowRightZ,
                        ElbowRightY,
                        ElbowRightX,
                        ShoulderRightZ,
                        ShoulderRightY,
                        ShoulderRightX,
                        ThumbLeftZ,
                        ThumbLeftY,
                        ThumbLeftX,
                        HandTipLeftZ,
                        HandTipLeftY,
                        HandTipLeftX,
                        FootLeftZ,
                        FootLeftY,
                        FootLeftX,
                        AnkleLeftZ,
                        AnkleLeftY,
                        AnkleLeftX,
                        KneeLeftZ,
                        KneeLeftY,
                        KneeLeftX,
                        HipLeftZ,
                        HipLeftY,
                        HipLeftX,
                        HandLeftZ,
                        HandLeftY,
                        HandLeftX,
                        WristLeftZ,
                        WristLeftY,
                        WristLeftX,
                        ElbowLeftZ,
                        ElbowLeftY,
                        ElbowLeftX,
                        ShoulderLeftZ,
                        ShoulderLeftY,
                        ShoulderLeftX,
                        SpineShoulderZ,
                        SpineShoulderY,
                        SpineShoulderX,
                        HeadZ,
                        HeadY,
                        HeadX,
                        NeckZ,
                        NeckY,
                        NeckX,
                        SpineMidZ,
                        SpineMidY,
                        order};
                rowExamRecordRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowExamRecordRow);
                return rowExamRecordRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ExamRecordDataTable cln = ((ExamRecordDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ExamRecordDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnexam_time = base.Columns["exam_time"];
                this.columnname = base.Columns["name"];
                this.columnexam_snapshot_path = base.Columns["exam_snapshot_path"];
                this.columnSpineBaseX = base.Columns["SpineBaseX"];
                this.columnSpineBaseY = base.Columns["SpineBaseY"];
                this.columnSpineBaseZ = base.Columns["SpineBaseZ"];
                this.columnSpineMidX = base.Columns["SpineMidX"];
                this.columnThumbRightZ = base.Columns["ThumbRightZ"];
                this.columnThumbRightY = base.Columns["ThumbRightY"];
                this.columnThumbRightX = base.Columns["ThumbRightX"];
                this.columnHandTipRightZ = base.Columns["HandTipRightZ"];
                this.columnHandTipRightY = base.Columns["HandTipRightY"];
                this.columnHandTipRightX = base.Columns["HandTipRightX"];
                this.columnFootRightZ = base.Columns["FootRightZ"];
                this.columnFootRightY = base.Columns["FootRightY"];
                this.columnFootRightX = base.Columns["FootRightX"];
                this.columnAnkleRightZ = base.Columns["AnkleRightZ"];
                this.columnAnkleRightX = base.Columns["AnkleRightX"];
                this.columnAnkleRightY = base.Columns["AnkleRightY"];
                this.columnKneeRightZ = base.Columns["KneeRightZ"];
                this.columnKneeRightY = base.Columns["KneeRightY"];
                this.columnKneeRightX = base.Columns["KneeRightX"];
                this.columnHipRightZ = base.Columns["HipRightZ"];
                this.columnHipRightY = base.Columns["HipRightY"];
                this.columnHipRightX = base.Columns["HipRightX"];
                this.columnHandRightZ = base.Columns["HandRightZ"];
                this.columnHandRightY = base.Columns["HandRightY"];
                this.columnHandRightX = base.Columns["HandRightX"];
                this.columnWristRightZ = base.Columns["WristRightZ"];
                this.columnWristRightY = base.Columns["WristRightY"];
                this.columnWristRightX = base.Columns["WristRightX"];
                this.columnElbowRightZ = base.Columns["ElbowRightZ"];
                this.columnElbowRightY = base.Columns["ElbowRightY"];
                this.columnElbowRightX = base.Columns["ElbowRightX"];
                this.columnShoulderRightZ = base.Columns["ShoulderRightZ"];
                this.columnShoulderRightY = base.Columns["ShoulderRightY"];
                this.columnShoulderRightX = base.Columns["ShoulderRightX"];
                this.columnThumbLeftZ = base.Columns["ThumbLeftZ"];
                this.columnThumbLeftY = base.Columns["ThumbLeftY"];
                this.columnThumbLeftX = base.Columns["ThumbLeftX"];
                this.columnHandTipLeftZ = base.Columns["HandTipLeftZ"];
                this.columnHandTipLeftY = base.Columns["HandTipLeftY"];
                this.columnHandTipLeftX = base.Columns["HandTipLeftX"];
                this.columnFootLeftZ = base.Columns["FootLeftZ"];
                this.columnFootLeftY = base.Columns["FootLeftY"];
                this.columnFootLeftX = base.Columns["FootLeftX"];
                this.columnAnkleLeftZ = base.Columns["AnkleLeftZ"];
                this.columnAnkleLeftY = base.Columns["AnkleLeftY"];
                this.columnAnkleLeftX = base.Columns["AnkleLeftX"];
                this.columnKneeLeftZ = base.Columns["KneeLeftZ"];
                this.columnKneeLeftY = base.Columns["KneeLeftY"];
                this.columnKneeLeftX = base.Columns["KneeLeftX"];
                this.columnHipLeftZ = base.Columns["HipLeftZ"];
                this.columnHipLeftY = base.Columns["HipLeftY"];
                this.columnHipLeftX = base.Columns["HipLeftX"];
                this.columnHandLeftZ = base.Columns["HandLeftZ"];
                this.columnHandLeftY = base.Columns["HandLeftY"];
                this.columnHandLeftX = base.Columns["HandLeftX"];
                this.columnWristLeftZ = base.Columns["WristLeftZ"];
                this.columnWristLeftY = base.Columns["WristLeftY"];
                this.columnWristLeftX = base.Columns["WristLeftX"];
                this.columnElbowLeftZ = base.Columns["ElbowLeftZ"];
                this.columnElbowLeftY = base.Columns["ElbowLeftY"];
                this.columnElbowLeftX = base.Columns["ElbowLeftX"];
                this.columnShoulderLeftZ = base.Columns["ShoulderLeftZ"];
                this.columnShoulderLeftY = base.Columns["ShoulderLeftY"];
                this.columnShoulderLeftX = base.Columns["ShoulderLeftX"];
                this.columnSpineShoulderZ = base.Columns["SpineShoulderZ"];
                this.columnSpineShoulderY = base.Columns["SpineShoulderY"];
                this.columnSpineShoulderX = base.Columns["SpineShoulderX"];
                this.columnHeadZ = base.Columns["HeadZ"];
                this.columnHeadY = base.Columns["HeadY"];
                this.columnHeadX = base.Columns["HeadX"];
                this.columnNeckZ = base.Columns["NeckZ"];
                this.columnNeckY = base.Columns["NeckY"];
                this.columnNeckX = base.Columns["NeckX"];
                this.columnSpineMidZ = base.Columns["SpineMidZ"];
                this.columnSpineMidY = base.Columns["SpineMidY"];
                this.columnorder = base.Columns["order"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnexam_time = new global::System.Data.DataColumn("exam_time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexam_time);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnexam_snapshot_path = new global::System.Data.DataColumn("exam_snapshot_path", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexam_snapshot_path);
                this.columnSpineBaseX = new global::System.Data.DataColumn("SpineBaseX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineBaseX);
                this.columnSpineBaseY = new global::System.Data.DataColumn("SpineBaseY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineBaseY);
                this.columnSpineBaseZ = new global::System.Data.DataColumn("SpineBaseZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineBaseZ);
                this.columnSpineMidX = new global::System.Data.DataColumn("SpineMidX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineMidX);
                this.columnThumbRightZ = new global::System.Data.DataColumn("ThumbRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumbRightZ);
                this.columnThumbRightY = new global::System.Data.DataColumn("ThumbRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumbRightY);
                this.columnThumbRightX = new global::System.Data.DataColumn("ThumbRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumbRightX);
                this.columnHandTipRightZ = new global::System.Data.DataColumn("HandTipRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandTipRightZ);
                this.columnHandTipRightY = new global::System.Data.DataColumn("HandTipRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandTipRightY);
                this.columnHandTipRightX = new global::System.Data.DataColumn("HandTipRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandTipRightX);
                this.columnFootRightZ = new global::System.Data.DataColumn("FootRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFootRightZ);
                this.columnFootRightY = new global::System.Data.DataColumn("FootRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFootRightY);
                this.columnFootRightX = new global::System.Data.DataColumn("FootRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFootRightX);
                this.columnAnkleRightZ = new global::System.Data.DataColumn("AnkleRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnkleRightZ);
                this.columnAnkleRightX = new global::System.Data.DataColumn("AnkleRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnkleRightX);
                this.columnAnkleRightY = new global::System.Data.DataColumn("AnkleRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnkleRightY);
                this.columnKneeRightZ = new global::System.Data.DataColumn("KneeRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKneeRightZ);
                this.columnKneeRightY = new global::System.Data.DataColumn("KneeRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKneeRightY);
                this.columnKneeRightX = new global::System.Data.DataColumn("KneeRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKneeRightX);
                this.columnHipRightZ = new global::System.Data.DataColumn("HipRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHipRightZ);
                this.columnHipRightY = new global::System.Data.DataColumn("HipRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHipRightY);
                this.columnHipRightX = new global::System.Data.DataColumn("HipRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHipRightX);
                this.columnHandRightZ = new global::System.Data.DataColumn("HandRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandRightZ);
                this.columnHandRightY = new global::System.Data.DataColumn("HandRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandRightY);
                this.columnHandRightX = new global::System.Data.DataColumn("HandRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandRightX);
                this.columnWristRightZ = new global::System.Data.DataColumn("WristRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWristRightZ);
                this.columnWristRightY = new global::System.Data.DataColumn("WristRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWristRightY);
                this.columnWristRightX = new global::System.Data.DataColumn("WristRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWristRightX);
                this.columnElbowRightZ = new global::System.Data.DataColumn("ElbowRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElbowRightZ);
                this.columnElbowRightY = new global::System.Data.DataColumn("ElbowRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElbowRightY);
                this.columnElbowRightX = new global::System.Data.DataColumn("ElbowRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElbowRightX);
                this.columnShoulderRightZ = new global::System.Data.DataColumn("ShoulderRightZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoulderRightZ);
                this.columnShoulderRightY = new global::System.Data.DataColumn("ShoulderRightY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoulderRightY);
                this.columnShoulderRightX = new global::System.Data.DataColumn("ShoulderRightX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoulderRightX);
                this.columnThumbLeftZ = new global::System.Data.DataColumn("ThumbLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumbLeftZ);
                this.columnThumbLeftY = new global::System.Data.DataColumn("ThumbLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumbLeftY);
                this.columnThumbLeftX = new global::System.Data.DataColumn("ThumbLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThumbLeftX);
                this.columnHandTipLeftZ = new global::System.Data.DataColumn("HandTipLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandTipLeftZ);
                this.columnHandTipLeftY = new global::System.Data.DataColumn("HandTipLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandTipLeftY);
                this.columnHandTipLeftX = new global::System.Data.DataColumn("HandTipLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandTipLeftX);
                this.columnFootLeftZ = new global::System.Data.DataColumn("FootLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFootLeftZ);
                this.columnFootLeftY = new global::System.Data.DataColumn("FootLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFootLeftY);
                this.columnFootLeftX = new global::System.Data.DataColumn("FootLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFootLeftX);
                this.columnAnkleLeftZ = new global::System.Data.DataColumn("AnkleLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnkleLeftZ);
                this.columnAnkleLeftY = new global::System.Data.DataColumn("AnkleLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnkleLeftY);
                this.columnAnkleLeftX = new global::System.Data.DataColumn("AnkleLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnkleLeftX);
                this.columnKneeLeftZ = new global::System.Data.DataColumn("KneeLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKneeLeftZ);
                this.columnKneeLeftY = new global::System.Data.DataColumn("KneeLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKneeLeftY);
                this.columnKneeLeftX = new global::System.Data.DataColumn("KneeLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKneeLeftX);
                this.columnHipLeftZ = new global::System.Data.DataColumn("HipLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHipLeftZ);
                this.columnHipLeftY = new global::System.Data.DataColumn("HipLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHipLeftY);
                this.columnHipLeftX = new global::System.Data.DataColumn("HipLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHipLeftX);
                this.columnHandLeftZ = new global::System.Data.DataColumn("HandLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandLeftZ);
                this.columnHandLeftY = new global::System.Data.DataColumn("HandLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandLeftY);
                this.columnHandLeftX = new global::System.Data.DataColumn("HandLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHandLeftX);
                this.columnWristLeftZ = new global::System.Data.DataColumn("WristLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWristLeftZ);
                this.columnWristLeftY = new global::System.Data.DataColumn("WristLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWristLeftY);
                this.columnWristLeftX = new global::System.Data.DataColumn("WristLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWristLeftX);
                this.columnElbowLeftZ = new global::System.Data.DataColumn("ElbowLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElbowLeftZ);
                this.columnElbowLeftY = new global::System.Data.DataColumn("ElbowLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElbowLeftY);
                this.columnElbowLeftX = new global::System.Data.DataColumn("ElbowLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnElbowLeftX);
                this.columnShoulderLeftZ = new global::System.Data.DataColumn("ShoulderLeftZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoulderLeftZ);
                this.columnShoulderLeftY = new global::System.Data.DataColumn("ShoulderLeftY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoulderLeftY);
                this.columnShoulderLeftX = new global::System.Data.DataColumn("ShoulderLeftX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShoulderLeftX);
                this.columnSpineShoulderZ = new global::System.Data.DataColumn("SpineShoulderZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineShoulderZ);
                this.columnSpineShoulderY = new global::System.Data.DataColumn("SpineShoulderY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineShoulderY);
                this.columnSpineShoulderX = new global::System.Data.DataColumn("SpineShoulderX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineShoulderX);
                this.columnHeadZ = new global::System.Data.DataColumn("HeadZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadZ);
                this.columnHeadY = new global::System.Data.DataColumn("HeadY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadY);
                this.columnHeadX = new global::System.Data.DataColumn("HeadX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadX);
                this.columnNeckZ = new global::System.Data.DataColumn("NeckZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeckZ);
                this.columnNeckY = new global::System.Data.DataColumn("NeckY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeckY);
                this.columnNeckX = new global::System.Data.DataColumn("NeckX", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeckX);
                this.columnSpineMidZ = new global::System.Data.DataColumn("SpineMidZ", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineMidZ);
                this.columnSpineMidY = new global::System.Data.DataColumn("SpineMidY", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpineMidY);
                this.columnorder = new global::System.Data.DataColumn("order", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorder);
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 100;
                this.columnexam_snapshot_path.MaxLength = 100;
                this.columnorder.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ExamRecordRow NewExamRecordRow() {
                return ((ExamRecordRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ExamRecordRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ExamRecordRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ExamRecordRowChanged != null)) {
                    this.ExamRecordRowChanged(this, new ExamRecordRowChangeEvent(((ExamRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ExamRecordRowChanging != null)) {
                    this.ExamRecordRowChanging(this, new ExamRecordRowChangeEvent(((ExamRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ExamRecordRowDeleted != null)) {
                    this.ExamRecordRowDeleted(this, new ExamRecordRowChangeEvent(((ExamRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ExamRecordRowDeleting != null)) {
                    this.ExamRecordRowDeleting(this, new ExamRecordRowChangeEvent(((ExamRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveExamRecordRow(ExamRecordRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                jointexamDataSet ds = new jointexamDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ExamRecordDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AnalysisTypeDataTable : global::System.Data.TypedTableBase<AnalysisTypeRow> {
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columndesc;
            
            private global::System.Data.DataColumn columnanalysis_category;
            
            private global::System.Data.DataColumn columnanalysis_name;
            
            private global::System.Data.DataColumn columnanalysis_fun;
            
            private global::System.Data.DataColumn columnuse_joints;
            
            private global::System.Data.DataColumn columnptr_order;
            
            private global::System.Data.DataColumn columndegrees;
            
            private global::System.Data.DataColumn columnx;
            
            private global::System.Data.DataColumn columny;
            
            private global::System.Data.DataColumn columnz;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AnalysisTypeDataTable() {
                this.TableName = "AnalysisType";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AnalysisTypeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AnalysisTypeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn descColumn {
                get {
                    return this.columndesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn analysis_categoryColumn {
                get {
                    return this.columnanalysis_category;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn analysis_nameColumn {
                get {
                    return this.columnanalysis_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn analysis_funColumn {
                get {
                    return this.columnanalysis_fun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn use_jointsColumn {
                get {
                    return this.columnuse_joints;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ptr_orderColumn {
                get {
                    return this.columnptr_order;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn degreesColumn {
                get {
                    return this.columndegrees;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xColumn {
                get {
                    return this.columnx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn yColumn {
                get {
                    return this.columny;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn zColumn {
                get {
                    return this.columnz;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AnalysisTypeRow this[int index] {
                get {
                    return ((AnalysisTypeRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AnalysisTypeRowChangeEventHandler AnalysisTypeRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AnalysisTypeRowChangeEventHandler AnalysisTypeRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AnalysisTypeRowChangeEventHandler AnalysisTypeRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AnalysisTypeRowChangeEventHandler AnalysisTypeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAnalysisTypeRow(AnalysisTypeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AnalysisTypeRow AddAnalysisTypeRow(string name, string desc, string analysis_category, string analysis_name, int analysis_fun, string use_joints, int ptr_order, double degrees, double x, double y, double z) {
                AnalysisTypeRow rowAnalysisTypeRow = ((AnalysisTypeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        name,
                        desc,
                        analysis_category,
                        analysis_name,
                        analysis_fun,
                        use_joints,
                        ptr_order,
                        degrees,
                        x,
                        y,
                        z};
                rowAnalysisTypeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAnalysisTypeRow);
                return rowAnalysisTypeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AnalysisTypeDataTable cln = ((AnalysisTypeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AnalysisTypeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnname = base.Columns["name"];
                this.columndesc = base.Columns["desc"];
                this.columnanalysis_category = base.Columns["analysis_category"];
                this.columnanalysis_name = base.Columns["analysis_name"];
                this.columnanalysis_fun = base.Columns["analysis_fun"];
                this.columnuse_joints = base.Columns["use_joints"];
                this.columnptr_order = base.Columns["ptr_order"];
                this.columndegrees = base.Columns["degrees"];
                this.columnx = base.Columns["x"];
                this.columny = base.Columns["y"];
                this.columnz = base.Columns["z"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columndesc = new global::System.Data.DataColumn("desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesc);
                this.columnanalysis_category = new global::System.Data.DataColumn("analysis_category", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanalysis_category);
                this.columnanalysis_name = new global::System.Data.DataColumn("analysis_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanalysis_name);
                this.columnanalysis_fun = new global::System.Data.DataColumn("analysis_fun", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnanalysis_fun);
                this.columnuse_joints = new global::System.Data.DataColumn("use_joints", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuse_joints);
                this.columnptr_order = new global::System.Data.DataColumn("ptr_order", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnptr_order);
                this.columndegrees = new global::System.Data.DataColumn("degrees", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndegrees);
                this.columnx = new global::System.Data.DataColumn("x", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnx);
                this.columny = new global::System.Data.DataColumn("y", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columny);
                this.columnz = new global::System.Data.DataColumn("z", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnz);
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 100;
                this.columndesc.MaxLength = 500;
                this.columnanalysis_category.MaxLength = 50;
                this.columnanalysis_name.MaxLength = 50;
                this.columnuse_joints.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AnalysisTypeRow NewAnalysisTypeRow() {
                return ((AnalysisTypeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AnalysisTypeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AnalysisTypeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AnalysisTypeRowChanged != null)) {
                    this.AnalysisTypeRowChanged(this, new AnalysisTypeRowChangeEvent(((AnalysisTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AnalysisTypeRowChanging != null)) {
                    this.AnalysisTypeRowChanging(this, new AnalysisTypeRowChangeEvent(((AnalysisTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AnalysisTypeRowDeleted != null)) {
                    this.AnalysisTypeRowDeleted(this, new AnalysisTypeRowChangeEvent(((AnalysisTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AnalysisTypeRowDeleting != null)) {
                    this.AnalysisTypeRowDeleting(this, new AnalysisTypeRowChangeEvent(((AnalysisTypeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAnalysisTypeRow(AnalysisTypeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                jointexamDataSet ds = new jointexamDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AnalysisTypeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class v_tab_examanalysisDataTable : global::System.Data.TypedTableBase<v_tab_examanalysisRow> {
            
            private global::System.Data.DataColumn columnascate;
            
            private global::System.Data.DataColumn columnscore;
            
            private global::System.Data.DataColumn columnastype;
            
            private global::System.Data.DataColumn columnasname;
            
            private global::System.Data.DataColumn columnascore;
            
            private global::System.Data.DataColumn columnasresult;
            
            private global::System.Data.DataColumn columnastypeid;
            
            private global::System.Data.DataColumn columnasId;
            
            private global::System.Data.DataColumn columnacategory;
            
            private global::System.Data.DataColumn columnmeaning;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public v_tab_examanalysisDataTable() {
                this.TableName = "v_tab_examanalysis";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal v_tab_examanalysisDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected v_tab_examanalysisDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ascateColumn {
                get {
                    return this.columnascate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn scoreColumn {
                get {
                    return this.columnscore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn astypeColumn {
                get {
                    return this.columnastype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn asnameColumn {
                get {
                    return this.columnasname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ascoreColumn {
                get {
                    return this.columnascore;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn asresultColumn {
                get {
                    return this.columnasresult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn astypeidColumn {
                get {
                    return this.columnastypeid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn asIdColumn {
                get {
                    return this.columnasId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn acategoryColumn {
                get {
                    return this.columnacategory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn meaningColumn {
                get {
                    return this.columnmeaning;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public v_tab_examanalysisRow this[int index] {
                get {
                    return ((v_tab_examanalysisRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event v_tab_examanalysisRowChangeEventHandler v_tab_examanalysisRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event v_tab_examanalysisRowChangeEventHandler v_tab_examanalysisRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event v_tab_examanalysisRowChangeEventHandler v_tab_examanalysisRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event v_tab_examanalysisRowChangeEventHandler v_tab_examanalysisRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addv_tab_examanalysisRow(v_tab_examanalysisRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public v_tab_examanalysisRow Addv_tab_examanalysisRow(string ascate, string score, string astype, string asname, string ascore, string asresult, string astypeid, string asId, string acategory, string meaning) {
                v_tab_examanalysisRow rowv_tab_examanalysisRow = ((v_tab_examanalysisRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ascate,
                        score,
                        astype,
                        asname,
                        ascore,
                        asresult,
                        astypeid,
                        asId,
                        acategory,
                        meaning};
                rowv_tab_examanalysisRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowv_tab_examanalysisRow);
                return rowv_tab_examanalysisRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                v_tab_examanalysisDataTable cln = ((v_tab_examanalysisDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new v_tab_examanalysisDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnascate = base.Columns["ascate"];
                this.columnscore = base.Columns["score"];
                this.columnastype = base.Columns["astype"];
                this.columnasname = base.Columns["asname"];
                this.columnascore = base.Columns["ascore"];
                this.columnasresult = base.Columns["asresult"];
                this.columnastypeid = base.Columns["astypeid"];
                this.columnasId = base.Columns["asId"];
                this.columnacategory = base.Columns["acategory"];
                this.columnmeaning = base.Columns["meaning"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnascate = new global::System.Data.DataColumn("ascate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnascate);
                this.columnscore = new global::System.Data.DataColumn("score", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscore);
                this.columnastype = new global::System.Data.DataColumn("astype", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnastype);
                this.columnasname = new global::System.Data.DataColumn("asname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasname);
                this.columnascore = new global::System.Data.DataColumn("ascore", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnascore);
                this.columnasresult = new global::System.Data.DataColumn("asresult", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasresult);
                this.columnastypeid = new global::System.Data.DataColumn("astypeid", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnastypeid);
                this.columnasId = new global::System.Data.DataColumn("asId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnasId);
                this.columnacategory = new global::System.Data.DataColumn("acategory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnacategory);
                this.columnmeaning = new global::System.Data.DataColumn("meaning", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmeaning);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public v_tab_examanalysisRow Newv_tab_examanalysisRow() {
                return ((v_tab_examanalysisRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new v_tab_examanalysisRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(v_tab_examanalysisRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.v_tab_examanalysisRowChanged != null)) {
                    this.v_tab_examanalysisRowChanged(this, new v_tab_examanalysisRowChangeEvent(((v_tab_examanalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.v_tab_examanalysisRowChanging != null)) {
                    this.v_tab_examanalysisRowChanging(this, new v_tab_examanalysisRowChangeEvent(((v_tab_examanalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.v_tab_examanalysisRowDeleted != null)) {
                    this.v_tab_examanalysisRowDeleted(this, new v_tab_examanalysisRowChangeEvent(((v_tab_examanalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.v_tab_examanalysisRowDeleting != null)) {
                    this.v_tab_examanalysisRowDeleting(this, new v_tab_examanalysisRowChangeEvent(((v_tab_examanalysisRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removev_tab_examanalysisRow(v_tab_examanalysisRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                jointexamDataSet ds = new jointexamDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "v_tab_examanalysisDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tab_examRow : global::System.Data.DataRow {
            
            private tab_examDataTable tabletab_exam;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tab_examRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletab_exam = ((tab_examDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int person_id {
                get {
                    return ((int)(this[this.tabletab_exam.person_idColumn]));
                }
                set {
                    this[this.tabletab_exam.person_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tabletab_exam.idColumn]));
                }
                set {
                    this[this.tabletab_exam.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime exam_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletab_exam.exam_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam”中列“exam_date”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam.exam_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string operater {
                get {
                    try {
                        return ((string)(this[this.tabletab_exam.operaterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam”中列“operater”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam.operaterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_personRow tab_personRow {
                get {
                    return ((tab_personRow)(this.GetParentRow(this.Table.ParentRelations["exam2person"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["exam2person"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isexam_dateNull() {
                return this.IsNull(this.tabletab_exam.exam_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setexam_dateNull() {
                this[this.tabletab_exam.exam_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoperaterNull() {
                return this.IsNull(this.tabletab_exam.operaterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoperaterNull() {
                this[this.tabletab_exam.operaterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_recordRow[] Gettab_exam_recordRows() {
                if ((this.Table.ChildRelations["record2exam"] == null)) {
                    return new tab_exam_recordRow[0];
                }
                else {
                    return ((tab_exam_recordRow[])(base.GetChildRows(this.Table.ChildRelations["record2exam"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tab_exam_recordRow : global::System.Data.DataRow {
            
            private tab_exam_recordDataTable tabletab_exam_record;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tab_exam_recordRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletab_exam_record = ((tab_exam_recordDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tabletab_exam_record.idColumn]));
                }
                set {
                    this[this.tabletab_exam_record.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int exam_type_id {
                get {
                    return ((int)(this[this.tabletab_exam_record.exam_type_idColumn]));
                }
                set {
                    this[this.tabletab_exam_record.exam_type_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int exam_id {
                get {
                    return ((int)(this[this.tabletab_exam_record.exam_idColumn]));
                }
                set {
                    this[this.tabletab_exam_record.exam_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime exam_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletab_exam_record.exam_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“exam_time”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.exam_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string exam_snapshot_path {
                get {
                    try {
                        return ((string)(this[this.tabletab_exam_record.exam_snapshot_pathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“exam_snapshot_path”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.exam_snapshot_pathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineBaseX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.SpineBaseXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“SpineBaseX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.SpineBaseXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineBaseY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.SpineBaseYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“SpineBaseY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.SpineBaseYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineBaseZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.SpineBaseZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“SpineBaseZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.SpineBaseZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineMidX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.SpineMidXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“SpineMidX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.SpineMidXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineMidY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.SpineMidYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“SpineMidY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.SpineMidYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineMidZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.SpineMidZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“SpineMidZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.SpineMidZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NeckX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.NeckXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“NeckX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.NeckXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NeckY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.NeckYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“NeckY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.NeckYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NeckZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.NeckZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“NeckZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.NeckZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HeadX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HeadXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HeadX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HeadXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HeadY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HeadYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HeadY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HeadYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HeadZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HeadZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HeadZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HeadZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineShoulderX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.SpineShoulderXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“SpineShoulderX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.SpineShoulderXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineShoulderY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.SpineShoulderYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“SpineShoulderY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.SpineShoulderYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineShoulderZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.SpineShoulderZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“SpineShoulderZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.SpineShoulderZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShoulderLeftX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ShoulderLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ShoulderLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ShoulderLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShoulderLeftY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ShoulderLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ShoulderLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ShoulderLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShoulderLeftZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ShoulderLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ShoulderLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ShoulderLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ElbowLeftX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ElbowLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ElbowLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ElbowLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ElbowLeftY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ElbowLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ElbowLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ElbowLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ElbowLeftZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ElbowLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ElbowLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ElbowLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WristLeftX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.WristLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“WristLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.WristLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WristLeftY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.WristLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“WristLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.WristLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WristLeftZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.WristLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“WristLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.WristLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandLeftX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HandLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HandLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HandLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandLeftY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HandLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HandLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HandLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandLeftZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HandLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HandLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HandLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HipLeftX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HipLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HipLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HipLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HipLeftY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HipLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HipLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HipLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HipLeftZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HipLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HipLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HipLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KneeLeftX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.KneeLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“KneeLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.KneeLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KneeLeftY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.KneeLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“KneeLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.KneeLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KneeLeftZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.KneeLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“KneeLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.KneeLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AnkleLeftX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.AnkleLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“AnkleLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.AnkleLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AnkleLeftY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.AnkleLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“AnkleLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.AnkleLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AnkleLeftZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.AnkleLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“AnkleLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.AnkleLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FootLeftX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.FootLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“FootLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.FootLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FootLeftY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.FootLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“FootLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.FootLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FootLeftZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.FootLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“FootLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.FootLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandTipLeftX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HandTipLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HandTipLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HandTipLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandTipLeftY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HandTipLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HandTipLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HandTipLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandTipLeftZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HandTipLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HandTipLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HandTipLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ThumbLeftX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ThumbLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ThumbLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ThumbLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ThumbLeftY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ThumbLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ThumbLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ThumbLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ThumbLeftZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ThumbLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ThumbLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ThumbLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShoulderRightX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ShoulderRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ShoulderRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ShoulderRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShoulderRightY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ShoulderRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ShoulderRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ShoulderRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShoulderRightZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ShoulderRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ShoulderRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ShoulderRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ElbowRightX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ElbowRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ElbowRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ElbowRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ElbowRightY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ElbowRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ElbowRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ElbowRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ElbowRightZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ElbowRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ElbowRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ElbowRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WristRightX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.WristRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“WristRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.WristRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WristRightY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.WristRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“WristRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.WristRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WristRightZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.WristRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“WristRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.WristRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandRightX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HandRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HandRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HandRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandRightY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HandRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HandRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HandRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandRightZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HandRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HandRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HandRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HipRightX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HipRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HipRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HipRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HipRightY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HipRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HipRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HipRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HipRightZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HipRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HipRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HipRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KneeRightX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.KneeRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“KneeRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.KneeRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KneeRightY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.KneeRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“KneeRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.KneeRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KneeRightZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.KneeRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“KneeRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.KneeRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AnkleRightX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.AnkleRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“AnkleRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.AnkleRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AnkleRightY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.AnkleRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“AnkleRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.AnkleRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AnkleRightZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.AnkleRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“AnkleRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.AnkleRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FootRightX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.FootRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“FootRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.FootRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FootRightY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.FootRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“FootRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.FootRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FootRightZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.FootRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“FootRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.FootRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandTipRightX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HandTipRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HandTipRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HandTipRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandTipRightY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HandTipRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HandTipRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HandTipRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandTipRightZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.HandTipRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“HandTipRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.HandTipRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ThumbRightX {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ThumbRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ThumbRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ThumbRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ThumbRightY {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ThumbRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ThumbRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ThumbRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ThumbRightZ {
                get {
                    try {
                        return ((double)(this[this.tabletab_exam_record.ThumbRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_record”中列“ThumbRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_record.ThumbRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_examRow tab_examRow {
                get {
                    return ((tab_examRow)(this.GetParentRow(this.Table.ParentRelations["record2exam"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["record2exam"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_typeRow tab_exam_typeRow {
                get {
                    return ((tab_exam_typeRow)(this.GetParentRow(this.Table.ParentRelations["record2type"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["record2type"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isexam_timeNull() {
                return this.IsNull(this.tabletab_exam_record.exam_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setexam_timeNull() {
                this[this.tabletab_exam_record.exam_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isexam_snapshot_pathNull() {
                return this.IsNull(this.tabletab_exam_record.exam_snapshot_pathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setexam_snapshot_pathNull() {
                this[this.tabletab_exam_record.exam_snapshot_pathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineBaseXNull() {
                return this.IsNull(this.tabletab_exam_record.SpineBaseXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineBaseXNull() {
                this[this.tabletab_exam_record.SpineBaseXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineBaseYNull() {
                return this.IsNull(this.tabletab_exam_record.SpineBaseYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineBaseYNull() {
                this[this.tabletab_exam_record.SpineBaseYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineBaseZNull() {
                return this.IsNull(this.tabletab_exam_record.SpineBaseZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineBaseZNull() {
                this[this.tabletab_exam_record.SpineBaseZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineMidXNull() {
                return this.IsNull(this.tabletab_exam_record.SpineMidXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineMidXNull() {
                this[this.tabletab_exam_record.SpineMidXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineMidYNull() {
                return this.IsNull(this.tabletab_exam_record.SpineMidYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineMidYNull() {
                this[this.tabletab_exam_record.SpineMidYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineMidZNull() {
                return this.IsNull(this.tabletab_exam_record.SpineMidZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineMidZNull() {
                this[this.tabletab_exam_record.SpineMidZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNeckXNull() {
                return this.IsNull(this.tabletab_exam_record.NeckXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNeckXNull() {
                this[this.tabletab_exam_record.NeckXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNeckYNull() {
                return this.IsNull(this.tabletab_exam_record.NeckYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNeckYNull() {
                this[this.tabletab_exam_record.NeckYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNeckZNull() {
                return this.IsNull(this.tabletab_exam_record.NeckZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNeckZNull() {
                this[this.tabletab_exam_record.NeckZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeadXNull() {
                return this.IsNull(this.tabletab_exam_record.HeadXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeadXNull() {
                this[this.tabletab_exam_record.HeadXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeadYNull() {
                return this.IsNull(this.tabletab_exam_record.HeadYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeadYNull() {
                this[this.tabletab_exam_record.HeadYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeadZNull() {
                return this.IsNull(this.tabletab_exam_record.HeadZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeadZNull() {
                this[this.tabletab_exam_record.HeadZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineShoulderXNull() {
                return this.IsNull(this.tabletab_exam_record.SpineShoulderXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineShoulderXNull() {
                this[this.tabletab_exam_record.SpineShoulderXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineShoulderYNull() {
                return this.IsNull(this.tabletab_exam_record.SpineShoulderYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineShoulderYNull() {
                this[this.tabletab_exam_record.SpineShoulderYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineShoulderZNull() {
                return this.IsNull(this.tabletab_exam_record.SpineShoulderZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineShoulderZNull() {
                this[this.tabletab_exam_record.SpineShoulderZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShoulderLeftXNull() {
                return this.IsNull(this.tabletab_exam_record.ShoulderLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShoulderLeftXNull() {
                this[this.tabletab_exam_record.ShoulderLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShoulderLeftYNull() {
                return this.IsNull(this.tabletab_exam_record.ShoulderLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShoulderLeftYNull() {
                this[this.tabletab_exam_record.ShoulderLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShoulderLeftZNull() {
                return this.IsNull(this.tabletab_exam_record.ShoulderLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShoulderLeftZNull() {
                this[this.tabletab_exam_record.ShoulderLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElbowLeftXNull() {
                return this.IsNull(this.tabletab_exam_record.ElbowLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetElbowLeftXNull() {
                this[this.tabletab_exam_record.ElbowLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElbowLeftYNull() {
                return this.IsNull(this.tabletab_exam_record.ElbowLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetElbowLeftYNull() {
                this[this.tabletab_exam_record.ElbowLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElbowLeftZNull() {
                return this.IsNull(this.tabletab_exam_record.ElbowLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetElbowLeftZNull() {
                this[this.tabletab_exam_record.ElbowLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWristLeftXNull() {
                return this.IsNull(this.tabletab_exam_record.WristLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWristLeftXNull() {
                this[this.tabletab_exam_record.WristLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWristLeftYNull() {
                return this.IsNull(this.tabletab_exam_record.WristLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWristLeftYNull() {
                this[this.tabletab_exam_record.WristLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWristLeftZNull() {
                return this.IsNull(this.tabletab_exam_record.WristLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWristLeftZNull() {
                this[this.tabletab_exam_record.WristLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandLeftXNull() {
                return this.IsNull(this.tabletab_exam_record.HandLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandLeftXNull() {
                this[this.tabletab_exam_record.HandLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandLeftYNull() {
                return this.IsNull(this.tabletab_exam_record.HandLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandLeftYNull() {
                this[this.tabletab_exam_record.HandLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandLeftZNull() {
                return this.IsNull(this.tabletab_exam_record.HandLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandLeftZNull() {
                this[this.tabletab_exam_record.HandLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHipLeftXNull() {
                return this.IsNull(this.tabletab_exam_record.HipLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHipLeftXNull() {
                this[this.tabletab_exam_record.HipLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHipLeftYNull() {
                return this.IsNull(this.tabletab_exam_record.HipLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHipLeftYNull() {
                this[this.tabletab_exam_record.HipLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHipLeftZNull() {
                return this.IsNull(this.tabletab_exam_record.HipLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHipLeftZNull() {
                this[this.tabletab_exam_record.HipLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKneeLeftXNull() {
                return this.IsNull(this.tabletab_exam_record.KneeLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKneeLeftXNull() {
                this[this.tabletab_exam_record.KneeLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKneeLeftYNull() {
                return this.IsNull(this.tabletab_exam_record.KneeLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKneeLeftYNull() {
                this[this.tabletab_exam_record.KneeLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKneeLeftZNull() {
                return this.IsNull(this.tabletab_exam_record.KneeLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKneeLeftZNull() {
                this[this.tabletab_exam_record.KneeLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnkleLeftXNull() {
                return this.IsNull(this.tabletab_exam_record.AnkleLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnkleLeftXNull() {
                this[this.tabletab_exam_record.AnkleLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnkleLeftYNull() {
                return this.IsNull(this.tabletab_exam_record.AnkleLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnkleLeftYNull() {
                this[this.tabletab_exam_record.AnkleLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnkleLeftZNull() {
                return this.IsNull(this.tabletab_exam_record.AnkleLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnkleLeftZNull() {
                this[this.tabletab_exam_record.AnkleLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFootLeftXNull() {
                return this.IsNull(this.tabletab_exam_record.FootLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFootLeftXNull() {
                this[this.tabletab_exam_record.FootLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFootLeftYNull() {
                return this.IsNull(this.tabletab_exam_record.FootLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFootLeftYNull() {
                this[this.tabletab_exam_record.FootLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFootLeftZNull() {
                return this.IsNull(this.tabletab_exam_record.FootLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFootLeftZNull() {
                this[this.tabletab_exam_record.FootLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandTipLeftXNull() {
                return this.IsNull(this.tabletab_exam_record.HandTipLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandTipLeftXNull() {
                this[this.tabletab_exam_record.HandTipLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandTipLeftYNull() {
                return this.IsNull(this.tabletab_exam_record.HandTipLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandTipLeftYNull() {
                this[this.tabletab_exam_record.HandTipLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandTipLeftZNull() {
                return this.IsNull(this.tabletab_exam_record.HandTipLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandTipLeftZNull() {
                this[this.tabletab_exam_record.HandTipLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThumbLeftXNull() {
                return this.IsNull(this.tabletab_exam_record.ThumbLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThumbLeftXNull() {
                this[this.tabletab_exam_record.ThumbLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThumbLeftYNull() {
                return this.IsNull(this.tabletab_exam_record.ThumbLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThumbLeftYNull() {
                this[this.tabletab_exam_record.ThumbLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThumbLeftZNull() {
                return this.IsNull(this.tabletab_exam_record.ThumbLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThumbLeftZNull() {
                this[this.tabletab_exam_record.ThumbLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShoulderRightXNull() {
                return this.IsNull(this.tabletab_exam_record.ShoulderRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShoulderRightXNull() {
                this[this.tabletab_exam_record.ShoulderRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShoulderRightYNull() {
                return this.IsNull(this.tabletab_exam_record.ShoulderRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShoulderRightYNull() {
                this[this.tabletab_exam_record.ShoulderRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShoulderRightZNull() {
                return this.IsNull(this.tabletab_exam_record.ShoulderRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShoulderRightZNull() {
                this[this.tabletab_exam_record.ShoulderRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElbowRightXNull() {
                return this.IsNull(this.tabletab_exam_record.ElbowRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetElbowRightXNull() {
                this[this.tabletab_exam_record.ElbowRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElbowRightYNull() {
                return this.IsNull(this.tabletab_exam_record.ElbowRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetElbowRightYNull() {
                this[this.tabletab_exam_record.ElbowRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElbowRightZNull() {
                return this.IsNull(this.tabletab_exam_record.ElbowRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetElbowRightZNull() {
                this[this.tabletab_exam_record.ElbowRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWristRightXNull() {
                return this.IsNull(this.tabletab_exam_record.WristRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWristRightXNull() {
                this[this.tabletab_exam_record.WristRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWristRightYNull() {
                return this.IsNull(this.tabletab_exam_record.WristRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWristRightYNull() {
                this[this.tabletab_exam_record.WristRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWristRightZNull() {
                return this.IsNull(this.tabletab_exam_record.WristRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWristRightZNull() {
                this[this.tabletab_exam_record.WristRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandRightXNull() {
                return this.IsNull(this.tabletab_exam_record.HandRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandRightXNull() {
                this[this.tabletab_exam_record.HandRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandRightYNull() {
                return this.IsNull(this.tabletab_exam_record.HandRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandRightYNull() {
                this[this.tabletab_exam_record.HandRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandRightZNull() {
                return this.IsNull(this.tabletab_exam_record.HandRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandRightZNull() {
                this[this.tabletab_exam_record.HandRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHipRightXNull() {
                return this.IsNull(this.tabletab_exam_record.HipRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHipRightXNull() {
                this[this.tabletab_exam_record.HipRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHipRightYNull() {
                return this.IsNull(this.tabletab_exam_record.HipRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHipRightYNull() {
                this[this.tabletab_exam_record.HipRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHipRightZNull() {
                return this.IsNull(this.tabletab_exam_record.HipRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHipRightZNull() {
                this[this.tabletab_exam_record.HipRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKneeRightXNull() {
                return this.IsNull(this.tabletab_exam_record.KneeRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKneeRightXNull() {
                this[this.tabletab_exam_record.KneeRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKneeRightYNull() {
                return this.IsNull(this.tabletab_exam_record.KneeRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKneeRightYNull() {
                this[this.tabletab_exam_record.KneeRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKneeRightZNull() {
                return this.IsNull(this.tabletab_exam_record.KneeRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKneeRightZNull() {
                this[this.tabletab_exam_record.KneeRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnkleRightXNull() {
                return this.IsNull(this.tabletab_exam_record.AnkleRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnkleRightXNull() {
                this[this.tabletab_exam_record.AnkleRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnkleRightYNull() {
                return this.IsNull(this.tabletab_exam_record.AnkleRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnkleRightYNull() {
                this[this.tabletab_exam_record.AnkleRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnkleRightZNull() {
                return this.IsNull(this.tabletab_exam_record.AnkleRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnkleRightZNull() {
                this[this.tabletab_exam_record.AnkleRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFootRightXNull() {
                return this.IsNull(this.tabletab_exam_record.FootRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFootRightXNull() {
                this[this.tabletab_exam_record.FootRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFootRightYNull() {
                return this.IsNull(this.tabletab_exam_record.FootRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFootRightYNull() {
                this[this.tabletab_exam_record.FootRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFootRightZNull() {
                return this.IsNull(this.tabletab_exam_record.FootRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFootRightZNull() {
                this[this.tabletab_exam_record.FootRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandTipRightXNull() {
                return this.IsNull(this.tabletab_exam_record.HandTipRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandTipRightXNull() {
                this[this.tabletab_exam_record.HandTipRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandTipRightYNull() {
                return this.IsNull(this.tabletab_exam_record.HandTipRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandTipRightYNull() {
                this[this.tabletab_exam_record.HandTipRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandTipRightZNull() {
                return this.IsNull(this.tabletab_exam_record.HandTipRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandTipRightZNull() {
                this[this.tabletab_exam_record.HandTipRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThumbRightXNull() {
                return this.IsNull(this.tabletab_exam_record.ThumbRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThumbRightXNull() {
                this[this.tabletab_exam_record.ThumbRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThumbRightYNull() {
                return this.IsNull(this.tabletab_exam_record.ThumbRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThumbRightYNull() {
                this[this.tabletab_exam_record.ThumbRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThumbRightZNull() {
                return this.IsNull(this.tabletab_exam_record.ThumbRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThumbRightZNull() {
                this[this.tabletab_exam_record.ThumbRightZColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tab_exam_typeRow : global::System.Data.DataRow {
            
            private tab_exam_typeDataTable tabletab_exam_type;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tab_exam_typeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletab_exam_type = ((tab_exam_typeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tabletab_exam_type.idColumn]));
                }
                set {
                    this[this.tabletab_exam_type.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name {
                get {
                    return ((string)(this[this.tabletab_exam_type.nameColumn]));
                }
                set {
                    this[this.tabletab_exam_type.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string desc {
                get {
                    try {
                        return ((string)(this[this.tabletab_exam_type.descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_exam_type”中列“desc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_exam_type.descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int order {
                get {
                    return ((int)(this[this.tabletab_exam_type.orderColumn]));
                }
                set {
                    this[this.tabletab_exam_type.orderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int style {
                get {
                    return ((int)(this[this.tabletab_exam_type.styleColumn]));
                }
                set {
                    this[this.tabletab_exam_type.styleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdescNull() {
                return this.IsNull(this.tabletab_exam_type.descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdescNull() {
                this[this.tabletab_exam_type.descColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_recordRow[] Gettab_exam_recordRows() {
                if ((this.Table.ChildRelations["record2type"] == null)) {
                    return new tab_exam_recordRow[0];
                }
                else {
                    return ((tab_exam_recordRow[])(base.GetChildRows(this.Table.ChildRelations["record2type"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class tab_personRow : global::System.Data.DataRow {
            
            private tab_personDataTable tabletab_person;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal tab_personRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabletab_person = ((tab_personDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tabletab_person.idColumn]));
                }
                set {
                    this[this.tabletab_person.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tabletab_person.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_person”中列“name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_person.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sex {
                get {
                    try {
                        return ((string)(this[this.tabletab_person.sexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_person”中列“sex”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_person.sexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime birthday {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabletab_person.birthdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_person”中列“birthday”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_person.birthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string race {
                get {
                    try {
                        return ((string)(this[this.tabletab_person.raceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_person”中列“race”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_person.raceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float height {
                get {
                    try {
                        return ((float)(this[this.tabletab_person.heightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_person”中列“height”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_person.heightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float weight {
                get {
                    try {
                        return ((float)(this[this.tabletab_person.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“tab_person”中列“weight”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tabletab_person.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnameNull() {
                return this.IsNull(this.tabletab_person.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnameNull() {
                this[this.tabletab_person.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssexNull() {
                return this.IsNull(this.tabletab_person.sexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsexNull() {
                this[this.tabletab_person.sexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbirthdayNull() {
                return this.IsNull(this.tabletab_person.birthdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbirthdayNull() {
                this[this.tabletab_person.birthdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsraceNull() {
                return this.IsNull(this.tabletab_person.raceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetraceNull() {
                this[this.tabletab_person.raceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsheightNull() {
                return this.IsNull(this.tabletab_person.heightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetheightNull() {
                this[this.tabletab_person.heightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsweightNull() {
                return this.IsNull(this.tabletab_person.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetweightNull() {
                this[this.tabletab_person.weightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_examRow[] Gettab_examRows() {
                if ((this.Table.ChildRelations["exam2person"] == null)) {
                    return new tab_examRow[0];
                }
                else {
                    return ((tab_examRow[])(base.GetChildRows(this.Table.ChildRelations["exam2person"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ExamMasterRow : global::System.Data.DataRow {
            
            private ExamMasterDataTable tableExamMaster;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ExamMasterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableExamMaster = ((ExamMasterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableExamMaster.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamMaster”中列“name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamMaster.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string sex {
                get {
                    try {
                        return ((string)(this[this.tableExamMaster.sexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamMaster”中列“sex”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamMaster.sexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime birthday {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExamMaster.birthdayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamMaster”中列“birthday”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamMaster.birthdayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string race {
                get {
                    try {
                        return ((string)(this[this.tableExamMaster.raceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamMaster”中列“race”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamMaster.raceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float weight {
                get {
                    try {
                        return ((float)(this[this.tableExamMaster.weightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamMaster”中列“weight”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamMaster.weightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float height {
                get {
                    try {
                        return ((float)(this[this.tableExamMaster.heightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamMaster”中列“height”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamMaster.heightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int id {
                get {
                    return ((int)(this[this.tableExamMaster.idColumn]));
                }
                set {
                    this[this.tableExamMaster.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime exam_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExamMaster.exam_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamMaster”中列“exam_date”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamMaster.exam_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string operater {
                get {
                    try {
                        return ((string)(this[this.tableExamMaster.operaterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamMaster”中列“operater”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamMaster.operaterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int exam_age {
                get {
                    try {
                        return ((int)(this[this.tableExamMaster.exam_ageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamMaster”中列“exam_age”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamMaster.exam_ageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnameNull() {
                return this.IsNull(this.tableExamMaster.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnameNull() {
                this[this.tableExamMaster.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssexNull() {
                return this.IsNull(this.tableExamMaster.sexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsexNull() {
                this[this.tableExamMaster.sexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbirthdayNull() {
                return this.IsNull(this.tableExamMaster.birthdayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbirthdayNull() {
                this[this.tableExamMaster.birthdayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsraceNull() {
                return this.IsNull(this.tableExamMaster.raceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetraceNull() {
                this[this.tableExamMaster.raceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsweightNull() {
                return this.IsNull(this.tableExamMaster.weightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetweightNull() {
                this[this.tableExamMaster.weightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsheightNull() {
                return this.IsNull(this.tableExamMaster.heightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetheightNull() {
                this[this.tableExamMaster.heightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isexam_dateNull() {
                return this.IsNull(this.tableExamMaster.exam_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setexam_dateNull() {
                this[this.tableExamMaster.exam_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoperaterNull() {
                return this.IsNull(this.tableExamMaster.operaterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoperaterNull() {
                this[this.tableExamMaster.operaterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isexam_ageNull() {
                return this.IsNull(this.tableExamMaster.exam_ageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setexam_ageNull() {
                this[this.tableExamMaster.exam_ageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ExamRecordRow : global::System.Data.DataRow {
            
            private ExamRecordDataTable tableExamRecord;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ExamRecordRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableExamRecord = ((ExamRecordDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime exam_time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableExamRecord.exam_timeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“exam_time”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.exam_timeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name {
                get {
                    return ((string)(this[this.tableExamRecord.nameColumn]));
                }
                set {
                    this[this.tableExamRecord.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string exam_snapshot_path {
                get {
                    try {
                        return ((string)(this[this.tableExamRecord.exam_snapshot_pathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“exam_snapshot_path”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.exam_snapshot_pathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineBaseX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.SpineBaseXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“SpineBaseX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.SpineBaseXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineBaseY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.SpineBaseYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“SpineBaseY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.SpineBaseYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineBaseZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.SpineBaseZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“SpineBaseZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.SpineBaseZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineMidX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.SpineMidXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“SpineMidX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.SpineMidXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ThumbRightZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ThumbRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ThumbRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ThumbRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ThumbRightY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ThumbRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ThumbRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ThumbRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ThumbRightX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ThumbRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ThumbRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ThumbRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandTipRightZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HandTipRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HandTipRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HandTipRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandTipRightY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HandTipRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HandTipRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HandTipRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandTipRightX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HandTipRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HandTipRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HandTipRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FootRightZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.FootRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“FootRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.FootRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FootRightY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.FootRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“FootRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.FootRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FootRightX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.FootRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“FootRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.FootRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AnkleRightZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.AnkleRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“AnkleRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.AnkleRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AnkleRightX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.AnkleRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“AnkleRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.AnkleRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AnkleRightY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.AnkleRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“AnkleRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.AnkleRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KneeRightZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.KneeRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“KneeRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.KneeRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KneeRightY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.KneeRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“KneeRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.KneeRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KneeRightX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.KneeRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“KneeRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.KneeRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HipRightZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HipRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HipRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HipRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HipRightY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HipRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HipRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HipRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HipRightX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HipRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HipRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HipRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandRightZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HandRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HandRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HandRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandRightY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HandRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HandRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HandRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandRightX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HandRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HandRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HandRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WristRightZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.WristRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“WristRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.WristRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WristRightY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.WristRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“WristRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.WristRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WristRightX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.WristRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“WristRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.WristRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ElbowRightZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ElbowRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ElbowRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ElbowRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ElbowRightY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ElbowRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ElbowRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ElbowRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ElbowRightX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ElbowRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ElbowRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ElbowRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShoulderRightZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ShoulderRightZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ShoulderRightZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ShoulderRightZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShoulderRightY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ShoulderRightYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ShoulderRightY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ShoulderRightYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShoulderRightX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ShoulderRightXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ShoulderRightX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ShoulderRightXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ThumbLeftZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ThumbLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ThumbLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ThumbLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ThumbLeftY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ThumbLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ThumbLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ThumbLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ThumbLeftX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ThumbLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ThumbLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ThumbLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandTipLeftZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HandTipLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HandTipLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HandTipLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandTipLeftY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HandTipLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HandTipLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HandTipLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandTipLeftX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HandTipLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HandTipLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HandTipLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FootLeftZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.FootLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“FootLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.FootLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FootLeftY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.FootLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“FootLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.FootLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FootLeftX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.FootLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“FootLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.FootLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AnkleLeftZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.AnkleLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“AnkleLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.AnkleLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AnkleLeftY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.AnkleLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“AnkleLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.AnkleLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double AnkleLeftX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.AnkleLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“AnkleLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.AnkleLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KneeLeftZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.KneeLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“KneeLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.KneeLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KneeLeftY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.KneeLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“KneeLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.KneeLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double KneeLeftX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.KneeLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“KneeLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.KneeLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HipLeftZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HipLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HipLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HipLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HipLeftY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HipLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HipLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HipLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HipLeftX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HipLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HipLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HipLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandLeftZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HandLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HandLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HandLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandLeftY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HandLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HandLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HandLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HandLeftX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HandLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HandLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HandLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WristLeftZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.WristLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“WristLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.WristLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WristLeftY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.WristLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“WristLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.WristLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double WristLeftX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.WristLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“WristLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.WristLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ElbowLeftZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ElbowLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ElbowLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ElbowLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ElbowLeftY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ElbowLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ElbowLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ElbowLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ElbowLeftX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ElbowLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ElbowLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ElbowLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShoulderLeftZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ShoulderLeftZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ShoulderLeftZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ShoulderLeftZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShoulderLeftY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ShoulderLeftYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ShoulderLeftY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ShoulderLeftYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ShoulderLeftX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.ShoulderLeftXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“ShoulderLeftX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.ShoulderLeftXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineShoulderZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.SpineShoulderZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“SpineShoulderZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.SpineShoulderZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineShoulderY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.SpineShoulderYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“SpineShoulderY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.SpineShoulderYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineShoulderX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.SpineShoulderXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“SpineShoulderX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.SpineShoulderXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HeadZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HeadZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HeadZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HeadZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HeadY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HeadYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HeadY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HeadYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HeadX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.HeadXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“HeadX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.HeadXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NeckZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.NeckZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“NeckZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.NeckZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NeckY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.NeckYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“NeckY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.NeckYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NeckX {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.NeckXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“NeckX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.NeckXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineMidZ {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.SpineMidZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“SpineMidZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.SpineMidZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SpineMidY {
                get {
                    try {
                        return ((double)(this[this.tableExamRecord.SpineMidYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“ExamRecord”中列“SpineMidY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableExamRecord.SpineMidYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int order {
                get {
                    return ((int)(this[this.tableExamRecord.orderColumn]));
                }
                set {
                    this[this.tableExamRecord.orderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isexam_timeNull() {
                return this.IsNull(this.tableExamRecord.exam_timeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setexam_timeNull() {
                this[this.tableExamRecord.exam_timeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isexam_snapshot_pathNull() {
                return this.IsNull(this.tableExamRecord.exam_snapshot_pathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setexam_snapshot_pathNull() {
                this[this.tableExamRecord.exam_snapshot_pathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineBaseXNull() {
                return this.IsNull(this.tableExamRecord.SpineBaseXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineBaseXNull() {
                this[this.tableExamRecord.SpineBaseXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineBaseYNull() {
                return this.IsNull(this.tableExamRecord.SpineBaseYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineBaseYNull() {
                this[this.tableExamRecord.SpineBaseYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineBaseZNull() {
                return this.IsNull(this.tableExamRecord.SpineBaseZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineBaseZNull() {
                this[this.tableExamRecord.SpineBaseZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineMidXNull() {
                return this.IsNull(this.tableExamRecord.SpineMidXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineMidXNull() {
                this[this.tableExamRecord.SpineMidXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThumbRightZNull() {
                return this.IsNull(this.tableExamRecord.ThumbRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThumbRightZNull() {
                this[this.tableExamRecord.ThumbRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThumbRightYNull() {
                return this.IsNull(this.tableExamRecord.ThumbRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThumbRightYNull() {
                this[this.tableExamRecord.ThumbRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThumbRightXNull() {
                return this.IsNull(this.tableExamRecord.ThumbRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThumbRightXNull() {
                this[this.tableExamRecord.ThumbRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandTipRightZNull() {
                return this.IsNull(this.tableExamRecord.HandTipRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandTipRightZNull() {
                this[this.tableExamRecord.HandTipRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandTipRightYNull() {
                return this.IsNull(this.tableExamRecord.HandTipRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandTipRightYNull() {
                this[this.tableExamRecord.HandTipRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandTipRightXNull() {
                return this.IsNull(this.tableExamRecord.HandTipRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandTipRightXNull() {
                this[this.tableExamRecord.HandTipRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFootRightZNull() {
                return this.IsNull(this.tableExamRecord.FootRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFootRightZNull() {
                this[this.tableExamRecord.FootRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFootRightYNull() {
                return this.IsNull(this.tableExamRecord.FootRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFootRightYNull() {
                this[this.tableExamRecord.FootRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFootRightXNull() {
                return this.IsNull(this.tableExamRecord.FootRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFootRightXNull() {
                this[this.tableExamRecord.FootRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnkleRightZNull() {
                return this.IsNull(this.tableExamRecord.AnkleRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnkleRightZNull() {
                this[this.tableExamRecord.AnkleRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnkleRightXNull() {
                return this.IsNull(this.tableExamRecord.AnkleRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnkleRightXNull() {
                this[this.tableExamRecord.AnkleRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnkleRightYNull() {
                return this.IsNull(this.tableExamRecord.AnkleRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnkleRightYNull() {
                this[this.tableExamRecord.AnkleRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKneeRightZNull() {
                return this.IsNull(this.tableExamRecord.KneeRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKneeRightZNull() {
                this[this.tableExamRecord.KneeRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKneeRightYNull() {
                return this.IsNull(this.tableExamRecord.KneeRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKneeRightYNull() {
                this[this.tableExamRecord.KneeRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKneeRightXNull() {
                return this.IsNull(this.tableExamRecord.KneeRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKneeRightXNull() {
                this[this.tableExamRecord.KneeRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHipRightZNull() {
                return this.IsNull(this.tableExamRecord.HipRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHipRightZNull() {
                this[this.tableExamRecord.HipRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHipRightYNull() {
                return this.IsNull(this.tableExamRecord.HipRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHipRightYNull() {
                this[this.tableExamRecord.HipRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHipRightXNull() {
                return this.IsNull(this.tableExamRecord.HipRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHipRightXNull() {
                this[this.tableExamRecord.HipRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandRightZNull() {
                return this.IsNull(this.tableExamRecord.HandRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandRightZNull() {
                this[this.tableExamRecord.HandRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandRightYNull() {
                return this.IsNull(this.tableExamRecord.HandRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandRightYNull() {
                this[this.tableExamRecord.HandRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandRightXNull() {
                return this.IsNull(this.tableExamRecord.HandRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandRightXNull() {
                this[this.tableExamRecord.HandRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWristRightZNull() {
                return this.IsNull(this.tableExamRecord.WristRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWristRightZNull() {
                this[this.tableExamRecord.WristRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWristRightYNull() {
                return this.IsNull(this.tableExamRecord.WristRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWristRightYNull() {
                this[this.tableExamRecord.WristRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWristRightXNull() {
                return this.IsNull(this.tableExamRecord.WristRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWristRightXNull() {
                this[this.tableExamRecord.WristRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElbowRightZNull() {
                return this.IsNull(this.tableExamRecord.ElbowRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetElbowRightZNull() {
                this[this.tableExamRecord.ElbowRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElbowRightYNull() {
                return this.IsNull(this.tableExamRecord.ElbowRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetElbowRightYNull() {
                this[this.tableExamRecord.ElbowRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElbowRightXNull() {
                return this.IsNull(this.tableExamRecord.ElbowRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetElbowRightXNull() {
                this[this.tableExamRecord.ElbowRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShoulderRightZNull() {
                return this.IsNull(this.tableExamRecord.ShoulderRightZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShoulderRightZNull() {
                this[this.tableExamRecord.ShoulderRightZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShoulderRightYNull() {
                return this.IsNull(this.tableExamRecord.ShoulderRightYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShoulderRightYNull() {
                this[this.tableExamRecord.ShoulderRightYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShoulderRightXNull() {
                return this.IsNull(this.tableExamRecord.ShoulderRightXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShoulderRightXNull() {
                this[this.tableExamRecord.ShoulderRightXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThumbLeftZNull() {
                return this.IsNull(this.tableExamRecord.ThumbLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThumbLeftZNull() {
                this[this.tableExamRecord.ThumbLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThumbLeftYNull() {
                return this.IsNull(this.tableExamRecord.ThumbLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThumbLeftYNull() {
                this[this.tableExamRecord.ThumbLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsThumbLeftXNull() {
                return this.IsNull(this.tableExamRecord.ThumbLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetThumbLeftXNull() {
                this[this.tableExamRecord.ThumbLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandTipLeftZNull() {
                return this.IsNull(this.tableExamRecord.HandTipLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandTipLeftZNull() {
                this[this.tableExamRecord.HandTipLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandTipLeftYNull() {
                return this.IsNull(this.tableExamRecord.HandTipLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandTipLeftYNull() {
                this[this.tableExamRecord.HandTipLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandTipLeftXNull() {
                return this.IsNull(this.tableExamRecord.HandTipLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandTipLeftXNull() {
                this[this.tableExamRecord.HandTipLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFootLeftZNull() {
                return this.IsNull(this.tableExamRecord.FootLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFootLeftZNull() {
                this[this.tableExamRecord.FootLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFootLeftYNull() {
                return this.IsNull(this.tableExamRecord.FootLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFootLeftYNull() {
                this[this.tableExamRecord.FootLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFootLeftXNull() {
                return this.IsNull(this.tableExamRecord.FootLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFootLeftXNull() {
                this[this.tableExamRecord.FootLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnkleLeftZNull() {
                return this.IsNull(this.tableExamRecord.AnkleLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnkleLeftZNull() {
                this[this.tableExamRecord.AnkleLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnkleLeftYNull() {
                return this.IsNull(this.tableExamRecord.AnkleLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnkleLeftYNull() {
                this[this.tableExamRecord.AnkleLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAnkleLeftXNull() {
                return this.IsNull(this.tableExamRecord.AnkleLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAnkleLeftXNull() {
                this[this.tableExamRecord.AnkleLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKneeLeftZNull() {
                return this.IsNull(this.tableExamRecord.KneeLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKneeLeftZNull() {
                this[this.tableExamRecord.KneeLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKneeLeftYNull() {
                return this.IsNull(this.tableExamRecord.KneeLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKneeLeftYNull() {
                this[this.tableExamRecord.KneeLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKneeLeftXNull() {
                return this.IsNull(this.tableExamRecord.KneeLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKneeLeftXNull() {
                this[this.tableExamRecord.KneeLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHipLeftZNull() {
                return this.IsNull(this.tableExamRecord.HipLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHipLeftZNull() {
                this[this.tableExamRecord.HipLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHipLeftYNull() {
                return this.IsNull(this.tableExamRecord.HipLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHipLeftYNull() {
                this[this.tableExamRecord.HipLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHipLeftXNull() {
                return this.IsNull(this.tableExamRecord.HipLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHipLeftXNull() {
                this[this.tableExamRecord.HipLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandLeftZNull() {
                return this.IsNull(this.tableExamRecord.HandLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandLeftZNull() {
                this[this.tableExamRecord.HandLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandLeftYNull() {
                return this.IsNull(this.tableExamRecord.HandLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandLeftYNull() {
                this[this.tableExamRecord.HandLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHandLeftXNull() {
                return this.IsNull(this.tableExamRecord.HandLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHandLeftXNull() {
                this[this.tableExamRecord.HandLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWristLeftZNull() {
                return this.IsNull(this.tableExamRecord.WristLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWristLeftZNull() {
                this[this.tableExamRecord.WristLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWristLeftYNull() {
                return this.IsNull(this.tableExamRecord.WristLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWristLeftYNull() {
                this[this.tableExamRecord.WristLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWristLeftXNull() {
                return this.IsNull(this.tableExamRecord.WristLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWristLeftXNull() {
                this[this.tableExamRecord.WristLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElbowLeftZNull() {
                return this.IsNull(this.tableExamRecord.ElbowLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetElbowLeftZNull() {
                this[this.tableExamRecord.ElbowLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElbowLeftYNull() {
                return this.IsNull(this.tableExamRecord.ElbowLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetElbowLeftYNull() {
                this[this.tableExamRecord.ElbowLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsElbowLeftXNull() {
                return this.IsNull(this.tableExamRecord.ElbowLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetElbowLeftXNull() {
                this[this.tableExamRecord.ElbowLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShoulderLeftZNull() {
                return this.IsNull(this.tableExamRecord.ShoulderLeftZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShoulderLeftZNull() {
                this[this.tableExamRecord.ShoulderLeftZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShoulderLeftYNull() {
                return this.IsNull(this.tableExamRecord.ShoulderLeftYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShoulderLeftYNull() {
                this[this.tableExamRecord.ShoulderLeftYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShoulderLeftXNull() {
                return this.IsNull(this.tableExamRecord.ShoulderLeftXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShoulderLeftXNull() {
                this[this.tableExamRecord.ShoulderLeftXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineShoulderZNull() {
                return this.IsNull(this.tableExamRecord.SpineShoulderZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineShoulderZNull() {
                this[this.tableExamRecord.SpineShoulderZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineShoulderYNull() {
                return this.IsNull(this.tableExamRecord.SpineShoulderYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineShoulderYNull() {
                this[this.tableExamRecord.SpineShoulderYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineShoulderXNull() {
                return this.IsNull(this.tableExamRecord.SpineShoulderXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineShoulderXNull() {
                this[this.tableExamRecord.SpineShoulderXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeadZNull() {
                return this.IsNull(this.tableExamRecord.HeadZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeadZNull() {
                this[this.tableExamRecord.HeadZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeadYNull() {
                return this.IsNull(this.tableExamRecord.HeadYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeadYNull() {
                this[this.tableExamRecord.HeadYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeadXNull() {
                return this.IsNull(this.tableExamRecord.HeadXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeadXNull() {
                this[this.tableExamRecord.HeadXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNeckZNull() {
                return this.IsNull(this.tableExamRecord.NeckZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNeckZNull() {
                this[this.tableExamRecord.NeckZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNeckYNull() {
                return this.IsNull(this.tableExamRecord.NeckYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNeckYNull() {
                this[this.tableExamRecord.NeckYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNeckXNull() {
                return this.IsNull(this.tableExamRecord.NeckXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNeckXNull() {
                this[this.tableExamRecord.NeckXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineMidZNull() {
                return this.IsNull(this.tableExamRecord.SpineMidZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineMidZNull() {
                this[this.tableExamRecord.SpineMidZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpineMidYNull() {
                return this.IsNull(this.tableExamRecord.SpineMidYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpineMidYNull() {
                this[this.tableExamRecord.SpineMidYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AnalysisTypeRow : global::System.Data.DataRow {
            
            private AnalysisTypeDataTable tableAnalysisType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AnalysisTypeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAnalysisType = ((AnalysisTypeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string name {
                get {
                    return ((string)(this[this.tableAnalysisType.nameColumn]));
                }
                set {
                    this[this.tableAnalysisType.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string desc {
                get {
                    try {
                        return ((string)(this[this.tableAnalysisType.descColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AnalysisType”中列“desc”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAnalysisType.descColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string analysis_category {
                get {
                    try {
                        return ((string)(this[this.tableAnalysisType.analysis_categoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AnalysisType”中列“analysis_category”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAnalysisType.analysis_categoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string analysis_name {
                get {
                    try {
                        return ((string)(this[this.tableAnalysisType.analysis_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AnalysisType”中列“analysis_name”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAnalysisType.analysis_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int analysis_fun {
                get {
                    try {
                        return ((int)(this[this.tableAnalysisType.analysis_funColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AnalysisType”中列“analysis_fun”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAnalysisType.analysis_funColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string use_joints {
                get {
                    try {
                        return ((string)(this[this.tableAnalysisType.use_jointsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AnalysisType”中列“use_joints”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAnalysisType.use_jointsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ptr_order {
                get {
                    try {
                        return ((int)(this[this.tableAnalysisType.ptr_orderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AnalysisType”中列“ptr_order”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAnalysisType.ptr_orderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double degrees {
                get {
                    try {
                        return ((double)(this[this.tableAnalysisType.degreesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AnalysisType”中列“degrees”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAnalysisType.degreesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double x {
                get {
                    try {
                        return ((double)(this[this.tableAnalysisType.xColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AnalysisType”中列“x”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAnalysisType.xColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double y {
                get {
                    try {
                        return ((double)(this[this.tableAnalysisType.yColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AnalysisType”中列“y”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAnalysisType.yColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double z {
                get {
                    try {
                        return ((double)(this[this.tableAnalysisType.zColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“AnalysisType”中列“z”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableAnalysisType.zColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdescNull() {
                return this.IsNull(this.tableAnalysisType.descColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdescNull() {
                this[this.tableAnalysisType.descColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isanalysis_categoryNull() {
                return this.IsNull(this.tableAnalysisType.analysis_categoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setanalysis_categoryNull() {
                this[this.tableAnalysisType.analysis_categoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isanalysis_nameNull() {
                return this.IsNull(this.tableAnalysisType.analysis_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setanalysis_nameNull() {
                this[this.tableAnalysisType.analysis_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isanalysis_funNull() {
                return this.IsNull(this.tableAnalysisType.analysis_funColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setanalysis_funNull() {
                this[this.tableAnalysisType.analysis_funColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isuse_jointsNull() {
                return this.IsNull(this.tableAnalysisType.use_jointsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setuse_jointsNull() {
                this[this.tableAnalysisType.use_jointsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isptr_orderNull() {
                return this.IsNull(this.tableAnalysisType.ptr_orderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setptr_orderNull() {
                this[this.tableAnalysisType.ptr_orderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdegreesNull() {
                return this.IsNull(this.tableAnalysisType.degreesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdegreesNull() {
                this[this.tableAnalysisType.degreesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxNull() {
                return this.IsNull(this.tableAnalysisType.xColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxNull() {
                this[this.tableAnalysisType.xColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsyNull() {
                return this.IsNull(this.tableAnalysisType.yColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetyNull() {
                this[this.tableAnalysisType.yColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IszNull() {
                return this.IsNull(this.tableAnalysisType.zColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetzNull() {
                this[this.tableAnalysisType.zColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class v_tab_examanalysisRow : global::System.Data.DataRow {
            
            private v_tab_examanalysisDataTable tablev_tab_examanalysis;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal v_tab_examanalysisRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablev_tab_examanalysis = ((v_tab_examanalysisDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ascate {
                get {
                    try {
                        return ((string)(this[this.tablev_tab_examanalysis.ascateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“v_tab_examanalysis”中列“ascate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablev_tab_examanalysis.ascateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string score {
                get {
                    try {
                        return ((string)(this[this.tablev_tab_examanalysis.scoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“v_tab_examanalysis”中列“score”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablev_tab_examanalysis.scoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string astype {
                get {
                    try {
                        return ((string)(this[this.tablev_tab_examanalysis.astypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“v_tab_examanalysis”中列“astype”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablev_tab_examanalysis.astypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string asname {
                get {
                    try {
                        return ((string)(this[this.tablev_tab_examanalysis.asnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“v_tab_examanalysis”中列“asname”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablev_tab_examanalysis.asnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ascore {
                get {
                    try {
                        return ((string)(this[this.tablev_tab_examanalysis.ascoreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“v_tab_examanalysis”中列“ascore”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablev_tab_examanalysis.ascoreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string asresult {
                get {
                    try {
                        return ((string)(this[this.tablev_tab_examanalysis.asresultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“v_tab_examanalysis”中列“asresult”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablev_tab_examanalysis.asresultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string astypeid {
                get {
                    try {
                        return ((string)(this[this.tablev_tab_examanalysis.astypeidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“v_tab_examanalysis”中列“astypeid”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablev_tab_examanalysis.astypeidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string asId {
                get {
                    try {
                        return ((string)(this[this.tablev_tab_examanalysis.asIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“v_tab_examanalysis”中列“asId”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablev_tab_examanalysis.asIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string acategory {
                get {
                    try {
                        return ((string)(this[this.tablev_tab_examanalysis.acategoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“v_tab_examanalysis”中列“acategory”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablev_tab_examanalysis.acategoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string meaning {
                get {
                    try {
                        return ((string)(this[this.tablev_tab_examanalysis.meaningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“v_tab_examanalysis”中列“meaning”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablev_tab_examanalysis.meaningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsascateNull() {
                return this.IsNull(this.tablev_tab_examanalysis.ascateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetascateNull() {
                this[this.tablev_tab_examanalysis.ascateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsscoreNull() {
                return this.IsNull(this.tablev_tab_examanalysis.scoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetscoreNull() {
                this[this.tablev_tab_examanalysis.scoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsastypeNull() {
                return this.IsNull(this.tablev_tab_examanalysis.astypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetastypeNull() {
                this[this.tablev_tab_examanalysis.astypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsasnameNull() {
                return this.IsNull(this.tablev_tab_examanalysis.asnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetasnameNull() {
                this[this.tablev_tab_examanalysis.asnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsascoreNull() {
                return this.IsNull(this.tablev_tab_examanalysis.ascoreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetascoreNull() {
                this[this.tablev_tab_examanalysis.ascoreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsasresultNull() {
                return this.IsNull(this.tablev_tab_examanalysis.asresultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetasresultNull() {
                this[this.tablev_tab_examanalysis.asresultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsastypeidNull() {
                return this.IsNull(this.tablev_tab_examanalysis.astypeidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetastypeidNull() {
                this[this.tablev_tab_examanalysis.astypeidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsasIdNull() {
                return this.IsNull(this.tablev_tab_examanalysis.asIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetasIdNull() {
                this[this.tablev_tab_examanalysis.asIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsacategoryNull() {
                return this.IsNull(this.tablev_tab_examanalysis.acategoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetacategoryNull() {
                this[this.tablev_tab_examanalysis.acategoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmeaningNull() {
                return this.IsNull(this.tablev_tab_examanalysis.meaningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmeaningNull() {
                this[this.tablev_tab_examanalysis.meaningColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tab_examRowChangeEvent : global::System.EventArgs {
            
            private tab_examRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_examRowChangeEvent(tab_examRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_examRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tab_exam_recordRowChangeEvent : global::System.EventArgs {
            
            private tab_exam_recordRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_recordRowChangeEvent(tab_exam_recordRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_recordRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tab_exam_typeRowChangeEvent : global::System.EventArgs {
            
            private tab_exam_typeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_typeRowChangeEvent(tab_exam_typeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_exam_typeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class tab_personRowChangeEvent : global::System.EventArgs {
            
            private tab_personRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_personRowChangeEvent(tab_personRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public tab_personRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ExamMasterRowChangeEvent : global::System.EventArgs {
            
            private ExamMasterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ExamMasterRowChangeEvent(ExamMasterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ExamMasterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ExamRecordRowChangeEvent : global::System.EventArgs {
            
            private ExamRecordRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ExamRecordRowChangeEvent(ExamRecordRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ExamRecordRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AnalysisTypeRowChangeEvent : global::System.EventArgs {
            
            private AnalysisTypeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AnalysisTypeRowChangeEvent(AnalysisTypeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AnalysisTypeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class v_tab_examanalysisRowChangeEvent : global::System.EventArgs {
            
            private v_tab_examanalysisRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public v_tab_examanalysisRowChangeEvent(v_tab_examanalysisRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public v_tab_examanalysisRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Microsoft.Samples.Kinect.BodyBasics.jointexamDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tab_examTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tab_examTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tab_exam";
            tableMapping.ColumnMappings.Add("person_id", "person_id");
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("exam_date", "exam_date");
            tableMapping.ColumnMappings.Add("operater", "operater");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `tab_exam` WHERE ((`person_id` = @p1) AND (`id` = @p2) AND ((@p3 = 1 " +
                "AND `exam_date` IS NULL) OR (`exam_date` = @p4)) AND ((@p5 = 1 AND `operater` IS" +
                " NULL) OR (`operater` = @p6)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "person_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p4";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "exam_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "operater";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p6";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "operater";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `tab_exam` (`person_id`, `exam_date`, `operater`) VALUES (@p1, @p2, @" +
                "p3)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "person_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "exam_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "operater";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `tab_exam` SET `person_id` = @p1, `exam_date` = @p2, `operater` = @p3 WHER" +
                "E ((`person_id` = @p4) AND (`id` = @p5) AND ((@p6 = 1 AND `exam_date` IS NULL) O" +
                "R (`exam_date` = @p7)) AND ((@p8 = 1 AND `operater` IS NULL) OR (`operater` = @p" +
                "9)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "person_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "exam_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "operater";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "person_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p7";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "exam_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "operater";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p9";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "operater";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Microsoft.Samples.Kinect.BodyBasics.Properties.Settings.Default.jointexamConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `person_id`, `id`, `exam_date`, `operater` FROM `tab_exam`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(jointexamDataSet.tab_examDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual jointexamDataSet.tab_examDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            jointexamDataSet.tab_examDataTable dataTable = new jointexamDataSet.tab_examDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(jointexamDataSet.tab_examDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(jointexamDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tab_exam");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int p1, int p2, global::System.Nullable<global::System.DateTime> p4, string p6) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(p1));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(p2));
            if ((p4.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(p4.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p6 == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(p6));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int p1, global::System.Nullable<global::System.DateTime> p2, string p3) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(p1));
            if ((p2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(p2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p3 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(p3));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int p1, global::System.Nullable<global::System.DateTime> p2, string p3, int p4, int p5, global::System.Nullable<global::System.DateTime> p7, string p9) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(p1));
            if ((p2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(p2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p3 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(p3));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(p4));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(p5));
            if ((p7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(p7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p9 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(p9));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tab_exam_recordTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tab_exam_recordTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tab_exam_record";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("exam_type_id", "exam_type_id");
            tableMapping.ColumnMappings.Add("exam_id", "exam_id");
            tableMapping.ColumnMappings.Add("exam_time", "exam_time");
            tableMapping.ColumnMappings.Add("exam_snapshot_path", "exam_snapshot_path");
            tableMapping.ColumnMappings.Add("SpineBaseX", "SpineBaseX");
            tableMapping.ColumnMappings.Add("SpineBaseY", "SpineBaseY");
            tableMapping.ColumnMappings.Add("SpineBaseZ", "SpineBaseZ");
            tableMapping.ColumnMappings.Add("SpineMidX", "SpineMidX");
            tableMapping.ColumnMappings.Add("SpineMidY", "SpineMidY");
            tableMapping.ColumnMappings.Add("SpineMidZ", "SpineMidZ");
            tableMapping.ColumnMappings.Add("NeckX", "NeckX");
            tableMapping.ColumnMappings.Add("NeckY", "NeckY");
            tableMapping.ColumnMappings.Add("NeckZ", "NeckZ");
            tableMapping.ColumnMappings.Add("HeadX", "HeadX");
            tableMapping.ColumnMappings.Add("HeadY", "HeadY");
            tableMapping.ColumnMappings.Add("HeadZ", "HeadZ");
            tableMapping.ColumnMappings.Add("SpineShoulderX", "SpineShoulderX");
            tableMapping.ColumnMappings.Add("SpineShoulderY", "SpineShoulderY");
            tableMapping.ColumnMappings.Add("SpineShoulderZ", "SpineShoulderZ");
            tableMapping.ColumnMappings.Add("ShoulderLeftX", "ShoulderLeftX");
            tableMapping.ColumnMappings.Add("ShoulderLeftY", "ShoulderLeftY");
            tableMapping.ColumnMappings.Add("ShoulderLeftZ", "ShoulderLeftZ");
            tableMapping.ColumnMappings.Add("ElbowLeftX", "ElbowLeftX");
            tableMapping.ColumnMappings.Add("ElbowLeftY", "ElbowLeftY");
            tableMapping.ColumnMappings.Add("ElbowLeftZ", "ElbowLeftZ");
            tableMapping.ColumnMappings.Add("WristLeftX", "WristLeftX");
            tableMapping.ColumnMappings.Add("WristLeftY", "WristLeftY");
            tableMapping.ColumnMappings.Add("WristLeftZ", "WristLeftZ");
            tableMapping.ColumnMappings.Add("HandLeftX", "HandLeftX");
            tableMapping.ColumnMappings.Add("HandLeftY", "HandLeftY");
            tableMapping.ColumnMappings.Add("HandLeftZ", "HandLeftZ");
            tableMapping.ColumnMappings.Add("HipLeftX", "HipLeftX");
            tableMapping.ColumnMappings.Add("HipLeftY", "HipLeftY");
            tableMapping.ColumnMappings.Add("HipLeftZ", "HipLeftZ");
            tableMapping.ColumnMappings.Add("KneeLeftX", "KneeLeftX");
            tableMapping.ColumnMappings.Add("KneeLeftY", "KneeLeftY");
            tableMapping.ColumnMappings.Add("KneeLeftZ", "KneeLeftZ");
            tableMapping.ColumnMappings.Add("AnkleLeftX", "AnkleLeftX");
            tableMapping.ColumnMappings.Add("AnkleLeftY", "AnkleLeftY");
            tableMapping.ColumnMappings.Add("AnkleLeftZ", "AnkleLeftZ");
            tableMapping.ColumnMappings.Add("FootLeftX", "FootLeftX");
            tableMapping.ColumnMappings.Add("FootLeftY", "FootLeftY");
            tableMapping.ColumnMappings.Add("FootLeftZ", "FootLeftZ");
            tableMapping.ColumnMappings.Add("HandTipLeftX", "HandTipLeftX");
            tableMapping.ColumnMappings.Add("HandTipLeftY", "HandTipLeftY");
            tableMapping.ColumnMappings.Add("HandTipLeftZ", "HandTipLeftZ");
            tableMapping.ColumnMappings.Add("ThumbLeftX", "ThumbLeftX");
            tableMapping.ColumnMappings.Add("ThumbLeftY", "ThumbLeftY");
            tableMapping.ColumnMappings.Add("ThumbLeftZ", "ThumbLeftZ");
            tableMapping.ColumnMappings.Add("ShoulderRightX", "ShoulderRightX");
            tableMapping.ColumnMappings.Add("ShoulderRightY", "ShoulderRightY");
            tableMapping.ColumnMappings.Add("ShoulderRightZ", "ShoulderRightZ");
            tableMapping.ColumnMappings.Add("ElbowRightX", "ElbowRightX");
            tableMapping.ColumnMappings.Add("ElbowRightY", "ElbowRightY");
            tableMapping.ColumnMappings.Add("ElbowRightZ", "ElbowRightZ");
            tableMapping.ColumnMappings.Add("WristRightX", "WristRightX");
            tableMapping.ColumnMappings.Add("WristRightY", "WristRightY");
            tableMapping.ColumnMappings.Add("WristRightZ", "WristRightZ");
            tableMapping.ColumnMappings.Add("HandRightX", "HandRightX");
            tableMapping.ColumnMappings.Add("HandRightY", "HandRightY");
            tableMapping.ColumnMappings.Add("HandRightZ", "HandRightZ");
            tableMapping.ColumnMappings.Add("HipRightX", "HipRightX");
            tableMapping.ColumnMappings.Add("HipRightY", "HipRightY");
            tableMapping.ColumnMappings.Add("HipRightZ", "HipRightZ");
            tableMapping.ColumnMappings.Add("KneeRightX", "KneeRightX");
            tableMapping.ColumnMappings.Add("KneeRightY", "KneeRightY");
            tableMapping.ColumnMappings.Add("KneeRightZ", "KneeRightZ");
            tableMapping.ColumnMappings.Add("AnkleRightX", "AnkleRightX");
            tableMapping.ColumnMappings.Add("AnkleRightY", "AnkleRightY");
            tableMapping.ColumnMappings.Add("AnkleRightZ", "AnkleRightZ");
            tableMapping.ColumnMappings.Add("FootRightX", "FootRightX");
            tableMapping.ColumnMappings.Add("FootRightY", "FootRightY");
            tableMapping.ColumnMappings.Add("FootRightZ", "FootRightZ");
            tableMapping.ColumnMappings.Add("HandTipRightX", "HandTipRightX");
            tableMapping.ColumnMappings.Add("HandTipRightY", "HandTipRightY");
            tableMapping.ColumnMappings.Add("HandTipRightZ", "HandTipRightZ");
            tableMapping.ColumnMappings.Add("ThumbRightX", "ThumbRightX");
            tableMapping.ColumnMappings.Add("ThumbRightY", "ThumbRightY");
            tableMapping.ColumnMappings.Add("ThumbRightZ", "ThumbRightZ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `tab_exam_record` WHERE ((`id` = @p1) AND (`exam_type_id` = @p2) AND " +
                "(`exam_id` = @p3) AND ((@p4 = 1 AND `exam_time` IS NULL) OR (`exam_time` = @p5))" +
                " AND ((@p6 = 1 AND `exam_snapshot_path` IS NULL) OR (`exam_snapshot_path` = @p7)" +
                ") AND ((@p8 = 1 AND `SpineBaseX` IS NULL) OR (`SpineBaseX` = @p9)) AND ((@p10 = " +
                "1 AND `SpineBaseY` IS NULL) OR (`SpineBaseY` = @p11)) AND ((@p12 = 1 AND `SpineB" +
                "aseZ` IS NULL) OR (`SpineBaseZ` = @p13)) AND ((@p14 = 1 AND `SpineMidX` IS NULL)" +
                " OR (`SpineMidX` = @p15)) AND ((@p16 = 1 AND `SpineMidY` IS NULL) OR (`SpineMidY" +
                "` = @p17)) AND ((@p18 = 1 AND `SpineMidZ` IS NULL) OR (`SpineMidZ` = @p19)) AND " +
                "((@p20 = 1 AND `NeckX` IS NULL) OR (`NeckX` = @p21)) AND ((@p22 = 1 AND `NeckY` " +
                "IS NULL) OR (`NeckY` = @p23)) AND ((@p24 = 1 AND `NeckZ` IS NULL) OR (`NeckZ` = " +
                "@p25)) AND ((@p26 = 1 AND `HeadX` IS NULL) OR (`HeadX` = @p27)) AND ((@p28 = 1 A" +
                "ND `HeadY` IS NULL) OR (`HeadY` = @p29)) AND ((@p30 = 1 AND `HeadZ` IS NULL) OR " +
                "(`HeadZ` = @p31)) AND ((@p32 = 1 AND `SpineShoulderX` IS NULL) OR (`SpineShoulde" +
                "rX` = @p33)) AND ((@p34 = 1 AND `SpineShoulderY` IS NULL) OR (`SpineShoulderY` =" +
                " @p35)) AND ((@p36 = 1 AND `SpineShoulderZ` IS NULL) OR (`SpineShoulderZ` = @p37" +
                ")) AND ((@p38 = 1 AND `ShoulderLeftX` IS NULL) OR (`ShoulderLeftX` = @p39)) AND " +
                "((@p40 = 1 AND `ShoulderLeftY` IS NULL) OR (`ShoulderLeftY` = @p41)) AND ((@p42 " +
                "= 1 AND `ShoulderLeftZ` IS NULL) OR (`ShoulderLeftZ` = @p43)) AND ((@p44 = 1 AND" +
                " `ElbowLeftX` IS NULL) OR (`ElbowLeftX` = @p45)) AND ((@p46 = 1 AND `ElbowLeftY`" +
                " IS NULL) OR (`ElbowLeftY` = @p47)) AND ((@p48 = 1 AND `ElbowLeftZ` IS NULL) OR " +
                "(`ElbowLeftZ` = @p49)) AND ((@p50 = 1 AND `WristLeftX` IS NULL) OR (`WristLeftX`" +
                " = @p51)) AND ((@p52 = 1 AND `WristLeftY` IS NULL) OR (`WristLeftY` = @p53)) AND" +
                " ((@p54 = 1 AND `WristLeftZ` IS NULL) OR (`WristLeftZ` = @p55)) AND ((@p56 = 1 A" +
                "ND `HandLeftX` IS NULL) OR (`HandLeftX` = @p57)) AND ((@p58 = 1 AND `HandLeftY` " +
                "IS NULL) OR (`HandLeftY` = @p59)) AND ((@p60 = 1 AND `HandLeftZ` IS NULL) OR (`H" +
                "andLeftZ` = @p61)) AND ((@p62 = 1 AND `HipLeftX` IS NULL) OR (`HipLeftX` = @p63)" +
                ") AND ((@p64 = 1 AND `HipLeftY` IS NULL) OR (`HipLeftY` = @p65)) AND ((@p66 = 1 " +
                "AND `HipLeftZ` IS NULL) OR (`HipLeftZ` = @p67)) AND ((@p68 = 1 AND `KneeLeftX` I" +
                "S NULL) OR (`KneeLeftX` = @p69)) AND ((@p70 = 1 AND `KneeLeftY` IS NULL) OR (`Kn" +
                "eeLeftY` = @p71)) AND ((@p72 = 1 AND `KneeLeftZ` IS NULL) OR (`KneeLeftZ` = @p73" +
                ")) AND ((@p74 = 1 AND `AnkleLeftX` IS NULL) OR (`AnkleLeftX` = @p75)) AND ((@p76" +
                " = 1 AND `AnkleLeftY` IS NULL) OR (`AnkleLeftY` = @p77)) AND ((@p78 = 1 AND `Ank" +
                "leLeftZ` IS NULL) OR (`AnkleLeftZ` = @p79)) AND ((@p80 = 1 AND `FootLeftX` IS NU" +
                "LL) OR (`FootLeftX` = @p81)) AND ((@p82 = 1 AND `FootLeftY` IS NULL) OR (`FootLe" +
                "ftY` = @p83)) AND ((@p84 = 1 AND `FootLeftZ` IS NULL) OR (`FootLeftZ` = @p85)) A" +
                "ND ((@p86 = 1 AND `HandTipLeftX` IS NULL) OR (`HandTipLeftX` = @p87)) AND ((@p88" +
                " = 1 AND `HandTipLeftY` IS NULL) OR (`HandTipLeftY` = @p89)) AND ((@p90 = 1 AND " +
                "`HandTipLeftZ` IS NULL) OR (`HandTipLeftZ` = @p91)) AND ((@p92 = 1 AND `ThumbLef" +
                "tX` IS NULL) OR (`ThumbLeftX` = @p93)) AND ((@p94 = 1 AND `ThumbLeftY` IS NULL) " +
                "OR (`ThumbLeftY` = @p95)) AND ((@p96 = 1 AND `ThumbLeftZ` IS NULL) OR (`ThumbLef" +
                "tZ` = @p97)) AND ((@p98 = 1 AND `ShoulderRightX` IS NULL) OR (`ShoulderRightX` =" +
                " @p99)) AND ((@p100 = 1 AND `ShoulderRightY` IS NULL) OR (`ShoulderRightY` = @p1" +
                "01)) AND ((@p102 = 1 AND `ShoulderRightZ` IS NULL) OR (`ShoulderRightZ` = @p103)" +
                ") AND ((@p104 = 1 AND `ElbowRightX` IS NULL) OR (`ElbowRightX` = @p105)) AND ((@" +
                "p106 = 1 AND `ElbowRightY` IS NULL) OR (`ElbowRightY` = @p107)) AND ((@p108 = 1 " +
                "AND `ElbowRightZ` IS NULL) OR (`ElbowRightZ` = @p109)) AND ((@p110 = 1 AND `Wris" +
                "tRightX` IS NULL) OR (`WristRightX` = @p111)) AND ((@p112 = 1 AND `WristRightY` " +
                "IS NULL) OR (`WristRightY` = @p113)) AND ((@p114 = 1 AND `WristRightZ` IS NULL) " +
                "OR (`WristRightZ` = @p115)) AND ((@p116 = 1 AND `HandRightX` IS NULL) OR (`HandR" +
                "ightX` = @p117)) AND ((@p118 = 1 AND `HandRightY` IS NULL) OR (`HandRightY` = @p" +
                "119)) AND ((@p120 = 1 AND `HandRightZ` IS NULL) OR (`HandRightZ` = @p121)) AND (" +
                "(@p122 = 1 AND `HipRightX` IS NULL) OR (`HipRightX` = @p123)) AND ((@p124 = 1 AN" +
                "D `HipRightY` IS NULL) OR (`HipRightY` = @p125)) AND ((@p126 = 1 AND `HipRightZ`" +
                " IS NULL) OR (`HipRightZ` = @p127)) AND ((@p128 = 1 AND `KneeRightX` IS NULL) OR" +
                " (`KneeRightX` = @p129)) AND ((@p130 = 1 AND `KneeRightY` IS NULL) OR (`KneeRigh" +
                "tY` = @p131)) AND ((@p132 = 1 AND `KneeRightZ` IS NULL) OR (`KneeRightZ` = @p133" +
                ")) AND ((@p134 = 1 AND `AnkleRightX` IS NULL) OR (`AnkleRightX` = @p135)) AND ((" +
                "@p136 = 1 AND `AnkleRightY` IS NULL) OR (`AnkleRightY` = @p137)) AND ((@p138 = 1" +
                " AND `AnkleRightZ` IS NULL) OR (`AnkleRightZ` = @p139)) AND ((@p140 = 1 AND `Foo" +
                "tRightX` IS NULL) OR (`FootRightX` = @p141)) AND ((@p142 = 1 AND `FootRightY` IS" +
                " NULL) OR (`FootRightY` = @p143)) AND ((@p144 = 1 AND `FootRightZ` IS NULL) OR (" +
                "`FootRightZ` = @p145)) AND ((@p146 = 1 AND `HandTipRightX` IS NULL) OR (`HandTip" +
                "RightX` = @p147)) AND ((@p148 = 1 AND `HandTipRightY` IS NULL) OR (`HandTipRight" +
                "Y` = @p149)) AND ((@p150 = 1 AND `HandTipRightZ` IS NULL) OR (`HandTipRightZ` = " +
                "@p151)) AND ((@p152 = 1 AND `ThumbRightX` IS NULL) OR (`ThumbRightX` = @p153)) A" +
                "ND ((@p154 = 1 AND `ThumbRightY` IS NULL) OR (`ThumbRightY` = @p155)) AND ((@p15" +
                "6 = 1 AND `ThumbRightZ` IS NULL) OR (`ThumbRightZ` = @p157)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_type_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p5";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "exam_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_snapshot_path";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p7";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "exam_snapshot_path";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p9";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p11";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p12";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p13";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p14";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p15";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p16";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p17";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p18";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p19";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p20";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NeckX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p21";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "NeckX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p22";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NeckY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p23";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "NeckY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p24";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NeckZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p25";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "NeckZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p26";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HeadX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p27";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HeadX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p28";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HeadY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p29";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HeadY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p30";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HeadZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p31";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HeadZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p32";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p33";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p34";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p35";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p36";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p37";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p38";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p39";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p40";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p41";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p42";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p43";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p44";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p45";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p46";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p47";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p48";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p49";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p50";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p51";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p52";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p53";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p54";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p55";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p56";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p57";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p58";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p59";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p60";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p61";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p62";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p63";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p64";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p65";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p66";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p67";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p68";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p69";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p70";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p71";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p72";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p73";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p74";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p75";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p76";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p77";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p78";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p79";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p80";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p81";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p82";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p83";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p84";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p85";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p86";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p87";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p88";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p89";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p90";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p91";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p92";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p93";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p94";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p95";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p96";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p97";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p98";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p99";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p100";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p101";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p102";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p103";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p104";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p105";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p106";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p107";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p108";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p109";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p110";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "WristRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p111";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p112";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "WristRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p113";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p114";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "WristRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p115";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p116";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p117";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p118";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p119";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p120";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p121";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p122";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HipRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p123";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p124";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HipRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p125";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p126";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HipRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p127";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p128";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p129";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p130";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p131";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p132";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p133";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p134";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p135";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p136";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p137";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p138";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p139";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p140";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FootRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p141";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p142";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FootRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p143";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p144";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FootRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p145";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p146";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p147";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p148";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p149";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p150";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p151";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p152";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p153";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p154";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p155";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p156";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p157";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `tab_exam_record` (`exam_type_id`, `exam_id`, `exam_time`, `exam_snap" +
                "shot_path`, `SpineBaseX`, `SpineBaseY`, `SpineBaseZ`, `SpineMidX`, `SpineMidY`, " +
                "`SpineMidZ`, `NeckX`, `NeckY`, `NeckZ`, `HeadX`, `HeadY`, `HeadZ`, `SpineShoulde" +
                "rX`, `SpineShoulderY`, `SpineShoulderZ`, `ShoulderLeftX`, `ShoulderLeftY`, `Shou" +
                "lderLeftZ`, `ElbowLeftX`, `ElbowLeftY`, `ElbowLeftZ`, `WristLeftX`, `WristLeftY`" +
                ", `WristLeftZ`, `HandLeftX`, `HandLeftY`, `HandLeftZ`, `HipLeftX`, `HipLeftY`, `" +
                "HipLeftZ`, `KneeLeftX`, `KneeLeftY`, `KneeLeftZ`, `AnkleLeftX`, `AnkleLeftY`, `A" +
                "nkleLeftZ`, `FootLeftX`, `FootLeftY`, `FootLeftZ`, `HandTipLeftX`, `HandTipLeftY" +
                "`, `HandTipLeftZ`, `ThumbLeftX`, `ThumbLeftY`, `ThumbLeftZ`, `ShoulderRightX`, `" +
                "ShoulderRightY`, `ShoulderRightZ`, `ElbowRightX`, `ElbowRightY`, `ElbowRightZ`, " +
                "`WristRightX`, `WristRightY`, `WristRightZ`, `HandRightX`, `HandRightY`, `HandRi" +
                "ghtZ`, `HipRightX`, `HipRightY`, `HipRightZ`, `KneeRightX`, `KneeRightY`, `KneeR" +
                "ightZ`, `AnkleRightX`, `AnkleRightY`, `AnkleRightZ`, `FootRightX`, `FootRightY`," +
                " `FootRightZ`, `HandTipRightX`, `HandTipRightY`, `HandTipRightZ`, `ThumbRightX`," +
                " `ThumbRightY`, `ThumbRightZ`) VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @" +
                "p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22" +
                ", @p23, @p24, @p25, @p26, @p27, @p28, @p29, @p30, @p31, @p32, @p33, @p34, @p35, " +
                "@p36, @p37, @p38, @p39, @p40, @p41, @p42, @p43, @p44, @p45, @p46, @p47, @p48, @p" +
                "49, @p50, @p51, @p52, @p53, @p54, @p55, @p56, @p57, @p58, @p59, @p60, @p61, @p62" +
                ", @p63, @p64, @p65, @p66, @p67, @p68, @p69, @p70, @p71, @p72, @p73, @p74, @p75, " +
                "@p76, @p77, @p78, @p79)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_type_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_id";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "exam_time";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "exam_snapshot_path";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p5";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p6";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p7";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p8";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p9";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p10";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p11";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "NeckX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p12";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "NeckY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p13";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "NeckZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p14";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HeadX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p15";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HeadY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p16";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HeadZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p17";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p18";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p19";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p20";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p21";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p22";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p23";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p24";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p25";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p26";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p27";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p28";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p29";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p30";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p31";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p32";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p33";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p34";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p35";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p36";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p37";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p38";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p39";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p40";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p41";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p42";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p43";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p44";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p45";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p46";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p47";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p48";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p49";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p50";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p51";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p52";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p53";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p54";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p55";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p56";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristRightX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p57";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristRightY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p58";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristRightZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p59";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandRightX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p60";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandRightY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p61";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandRightZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p62";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipRightX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p63";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipRightY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p64";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipRightZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p65";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p66";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p67";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p68";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p69";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p70";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p71";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootRightX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p72";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootRightY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p73";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootRightZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p74";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p75";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p76";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p77";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightX";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p78";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightY";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p79";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightZ";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `tab_exam_record` SET `exam_type_id` = @p1, `exam_id` = @p2, `exam_time` =" +
                " @p3, `exam_snapshot_path` = @p4, `SpineBaseX` = @p5, `SpineBaseY` = @p6, `Spine" +
                "BaseZ` = @p7, `SpineMidX` = @p8, `SpineMidY` = @p9, `SpineMidZ` = @p10, `NeckX` " +
                "= @p11, `NeckY` = @p12, `NeckZ` = @p13, `HeadX` = @p14, `HeadY` = @p15, `HeadZ` " +
                "= @p16, `SpineShoulderX` = @p17, `SpineShoulderY` = @p18, `SpineShoulderZ` = @p1" +
                "9, `ShoulderLeftX` = @p20, `ShoulderLeftY` = @p21, `ShoulderLeftZ` = @p22, `Elbo" +
                "wLeftX` = @p23, `ElbowLeftY` = @p24, `ElbowLeftZ` = @p25, `WristLeftX` = @p26, `" +
                "WristLeftY` = @p27, `WristLeftZ` = @p28, `HandLeftX` = @p29, `HandLeftY` = @p30," +
                " `HandLeftZ` = @p31, `HipLeftX` = @p32, `HipLeftY` = @p33, `HipLeftZ` = @p34, `K" +
                "neeLeftX` = @p35, `KneeLeftY` = @p36, `KneeLeftZ` = @p37, `AnkleLeftX` = @p38, `" +
                "AnkleLeftY` = @p39, `AnkleLeftZ` = @p40, `FootLeftX` = @p41, `FootLeftY` = @p42," +
                " `FootLeftZ` = @p43, `HandTipLeftX` = @p44, `HandTipLeftY` = @p45, `HandTipLeftZ" +
                "` = @p46, `ThumbLeftX` = @p47, `ThumbLeftY` = @p48, `ThumbLeftZ` = @p49, `Should" +
                "erRightX` = @p50, `ShoulderRightY` = @p51, `ShoulderRightZ` = @p52, `ElbowRightX" +
                "` = @p53, `ElbowRightY` = @p54, `ElbowRightZ` = @p55, `WristRightX` = @p56, `Wri" +
                "stRightY` = @p57, `WristRightZ` = @p58, `HandRightX` = @p59, `HandRightY` = @p60" +
                ", `HandRightZ` = @p61, `HipRightX` = @p62, `HipRightY` = @p63, `HipRightZ` = @p6" +
                "4, `KneeRightX` = @p65, `KneeRightY` = @p66, `KneeRightZ` = @p67, `AnkleRightX` " +
                "= @p68, `AnkleRightY` = @p69, `AnkleRightZ` = @p70, `FootRightX` = @p71, `FootRi" +
                "ghtY` = @p72, `FootRightZ` = @p73, `HandTipRightX` = @p74, `HandTipRightY` = @p7" +
                "5, `HandTipRightZ` = @p76, `ThumbRightX` = @p77, `ThumbRightY` = @p78, `ThumbRig" +
                "htZ` = @p79 WHERE ((`id` = @p80) AND (`exam_type_id` = @p81) AND (`exam_id` = @p" +
                "82) AND ((@p83 = 1 AND `exam_time` IS NULL) OR (`exam_time` = @p84)) AND ((@p85 " +
                "= 1 AND `exam_snapshot_path` IS NULL) OR (`exam_snapshot_path` = @p86)) AND ((@p" +
                "87 = 1 AND `SpineBaseX` IS NULL) OR (`SpineBaseX` = @p88)) AND ((@p89 = 1 AND `S" +
                "pineBaseY` IS NULL) OR (`SpineBaseY` = @p90)) AND ((@p91 = 1 AND `SpineBaseZ` IS" +
                " NULL) OR (`SpineBaseZ` = @p92)) AND ((@p93 = 1 AND `SpineMidX` IS NULL) OR (`Sp" +
                "ineMidX` = @p94)) AND ((@p95 = 1 AND `SpineMidY` IS NULL) OR (`SpineMidY` = @p96" +
                ")) AND ((@p97 = 1 AND `SpineMidZ` IS NULL) OR (`SpineMidZ` = @p98)) AND ((@p99 =" +
                " 1 AND `NeckX` IS NULL) OR (`NeckX` = @p100)) AND ((@p101 = 1 AND `NeckY` IS NUL" +
                "L) OR (`NeckY` = @p102)) AND ((@p103 = 1 AND `NeckZ` IS NULL) OR (`NeckZ` = @p10" +
                "4)) AND ((@p105 = 1 AND `HeadX` IS NULL) OR (`HeadX` = @p106)) AND ((@p107 = 1 A" +
                "ND `HeadY` IS NULL) OR (`HeadY` = @p108)) AND ((@p109 = 1 AND `HeadZ` IS NULL) O" +
                "R (`HeadZ` = @p110)) AND ((@p111 = 1 AND `SpineShoulderX` IS NULL) OR (`SpineSho" +
                "ulderX` = @p112)) AND ((@p113 = 1 AND `SpineShoulderY` IS NULL) OR (`SpineShould" +
                "erY` = @p114)) AND ((@p115 = 1 AND `SpineShoulderZ` IS NULL) OR (`SpineShoulderZ" +
                "` = @p116)) AND ((@p117 = 1 AND `ShoulderLeftX` IS NULL) OR (`ShoulderLeftX` = @" +
                "p118)) AND ((@p119 = 1 AND `ShoulderLeftY` IS NULL) OR (`ShoulderLeftY` = @p120)" +
                ") AND ((@p121 = 1 AND `ShoulderLeftZ` IS NULL) OR (`ShoulderLeftZ` = @p122)) AND" +
                " ((@p123 = 1 AND `ElbowLeftX` IS NULL) OR (`ElbowLeftX` = @p124)) AND ((@p125 = " +
                "1 AND `ElbowLeftY` IS NULL) OR (`ElbowLeftY` = @p126)) AND ((@p127 = 1 AND `Elbo" +
                "wLeftZ` IS NULL) OR (`ElbowLeftZ` = @p128)) AND ((@p129 = 1 AND `WristLeftX` IS " +
                "NULL) OR (`WristLeftX` = @p130)) AND ((@p131 = 1 AND `WristLeftY` IS NULL) OR (`" +
                "WristLeftY` = @p132)) AND ((@p133 = 1 AND `WristLeftZ` IS NULL) OR (`WristLeftZ`" +
                " = @p134)) AND ((@p135 = 1 AND `HandLeftX` IS NULL) OR (`HandLeftX` = @p136)) AN" +
                "D ((@p137 = 1 AND `HandLeftY` IS NULL) OR (`HandLeftY` = @p138)) AND ((@p139 = 1" +
                " AND `HandLeftZ` IS NULL) OR (`HandLeftZ` = @p140)) AND ((@p141 = 1 AND `HipLeft" +
                "X` IS NULL) OR (`HipLeftX` = @p142)) AND ((@p143 = 1 AND `HipLeftY` IS NULL) OR " +
                "(`HipLeftY` = @p144)) AND ((@p145 = 1 AND `HipLeftZ` IS NULL) OR (`HipLeftZ` = @" +
                "p146)) AND ((@p147 = 1 AND `KneeLeftX` IS NULL) OR (`KneeLeftX` = @p148)) AND ((" +
                "@p149 = 1 AND `KneeLeftY` IS NULL) OR (`KneeLeftY` = @p150)) AND ((@p151 = 1 AND" +
                " `KneeLeftZ` IS NULL) OR (`KneeLeftZ` = @p152)) AND ((@p153 = 1 AND `AnkleLeftX`" +
                " IS NULL) OR (`AnkleLeftX` = @p154)) AND ((@p155 = 1 AND `AnkleLeftY` IS NULL) O" +
                "R (`AnkleLeftY` = @p156)) AND ((@p157 = 1 AND `AnkleLeftZ` IS NULL) OR (`AnkleLe" +
                "ftZ` = @p158)) AND ((@p159 = 1 AND `FootLeftX` IS NULL) OR (`FootLeftX` = @p160)" +
                ") AND ((@p161 = 1 AND `FootLeftY` IS NULL) OR (`FootLeftY` = @p162)) AND ((@p163" +
                " = 1 AND `FootLeftZ` IS NULL) OR (`FootLeftZ` = @p164)) AND ((@p165 = 1 AND `Han" +
                "dTipLeftX` IS NULL) OR (`HandTipLeftX` = @p166)) AND ((@p167 = 1 AND `HandTipLef" +
                "tY` IS NULL) OR (`HandTipLeftY` = @p168)) AND ((@p169 = 1 AND `HandTipLeftZ` IS " +
                "NULL) OR (`HandTipLeftZ` = @p170)) AND ((@p171 = 1 AND `ThumbLeftX` IS NULL) OR " +
                "(`ThumbLeftX` = @p172)) AND ((@p173 = 1 AND `ThumbLeftY` IS NULL) OR (`ThumbLeft" +
                "Y` = @p174)) AND ((@p175 = 1 AND `ThumbLeftZ` IS NULL) OR (`ThumbLeftZ` = @p176)" +
                ") AND ((@p177 = 1 AND `ShoulderRightX` IS NULL) OR (`ShoulderRightX` = @p178)) A" +
                "ND ((@p179 = 1 AND `ShoulderRightY` IS NULL) OR (`ShoulderRightY` = @p180)) AND " +
                "((@p181 = 1 AND `ShoulderRightZ` IS NULL) OR (`ShoulderRightZ` = @p182)) AND ((@" +
                "p183 = 1 AND `ElbowRightX` IS NULL) OR (`ElbowRightX` = @p184)) AND ((@p185 = 1 " +
                "AND `ElbowRightY` IS NULL) OR (`ElbowRightY` = @p186)) AND ((@p187 = 1 AND `Elbo" +
                "wRightZ` IS NULL) OR (`ElbowRightZ` = @p188)) AND ((@p189 = 1 AND `WristRightX` " +
                "IS NULL) OR (`WristRightX` = @p190)) AND ((@p191 = 1 AND `WristRightY` IS NULL) " +
                "OR (`WristRightY` = @p192)) AND ((@p193 = 1 AND `WristRightZ` IS NULL) OR (`Wris" +
                "tRightZ` = @p194)) AND ((@p195 = 1 AND `HandRightX` IS NULL) OR (`HandRightX` = " +
                "@p196)) AND ((@p197 = 1 AND `HandRightY` IS NULL) OR (`HandRightY` = @p198)) AND" +
                " ((@p199 = 1 AND `HandRightZ` IS NULL) OR (`HandRightZ` = @p200)) AND ((@p201 = " +
                "1 AND `HipRightX` IS NULL) OR (`HipRightX` = @p202)) AND ((@p203 = 1 AND `HipRig" +
                "htY` IS NULL) OR (`HipRightY` = @p204)) AND ((@p205 = 1 AND `HipRightZ` IS NULL)" +
                " OR (`HipRightZ` = @p206)) AND ((@p207 = 1 AND `KneeRightX` IS NULL) OR (`KneeRi" +
                "ghtX` = @p208)) AND ((@p209 = 1 AND `KneeRightY` IS NULL) OR (`KneeRightY` = @p2" +
                "10)) AND ((@p211 = 1 AND `KneeRightZ` IS NULL) OR (`KneeRightZ` = @p212)) AND ((" +
                "@p213 = 1 AND `AnkleRightX` IS NULL) OR (`AnkleRightX` = @p214)) AND ((@p215 = 1" +
                " AND `AnkleRightY` IS NULL) OR (`AnkleRightY` = @p216)) AND ((@p217 = 1 AND `Ank" +
                "leRightZ` IS NULL) OR (`AnkleRightZ` = @p218)) AND ((@p219 = 1 AND `FootRightX` " +
                "IS NULL) OR (`FootRightX` = @p220)) AND ((@p221 = 1 AND `FootRightY` IS NULL) OR" +
                " (`FootRightY` = @p222)) AND ((@p223 = 1 AND `FootRightZ` IS NULL) OR (`FootRigh" +
                "tZ` = @p224)) AND ((@p225 = 1 AND `HandTipRightX` IS NULL) OR (`HandTipRightX` =" +
                " @p226)) AND ((@p227 = 1 AND `HandTipRightY` IS NULL) OR (`HandTipRightY` = @p22" +
                "8)) AND ((@p229 = 1 AND `HandTipRightZ` IS NULL) OR (`HandTipRightZ` = @p230)) A" +
                "ND ((@p231 = 1 AND `ThumbRightX` IS NULL) OR (`ThumbRightX` = @p232)) AND ((@p23" +
                "3 = 1 AND `ThumbRightY` IS NULL) OR (`ThumbRightY` = @p234)) AND ((@p235 = 1 AND" +
                " `ThumbRightZ` IS NULL) OR (`ThumbRightZ` = @p236)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_type_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_id";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "exam_time";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "exam_snapshot_path";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p5";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p6";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p7";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p8";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p9";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p10";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p11";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "NeckX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p12";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "NeckY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p13";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "NeckZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p14";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HeadX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p15";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HeadY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p16";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HeadZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p17";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p18";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p19";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p20";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p21";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p22";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p23";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p24";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p25";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p26";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p27";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p28";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p29";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p30";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p31";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p32";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p33";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p34";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p35";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p36";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p37";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p38";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p39";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p40";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p41";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p42";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p43";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p44";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p45";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p46";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p47";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p48";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p49";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p50";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p51";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p52";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p53";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p54";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p55";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p56";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristRightX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p57";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristRightY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p58";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristRightZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p59";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandRightX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p60";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandRightY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p61";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandRightZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p62";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipRightX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p63";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipRightY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p64";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipRightZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p65";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p66";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p67";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p68";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p69";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p70";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p71";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootRightX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p72";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootRightY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p73";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootRightZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p74";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p75";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p76";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p77";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightX";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p78";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightY";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p79";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightZ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p80";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p81";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_type_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p82";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p83";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p84";
            param.DbType = global::System.Data.DbType.DateTime;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "exam_time";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p85";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_snapshot_path";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p86";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "exam_snapshot_path";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p87";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p88";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p89";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p90";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p91";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p92";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineBaseZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p93";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p94";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p95";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p96";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p97";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p98";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineMidZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p99";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NeckX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p100";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "NeckX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p101";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NeckY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p102";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "NeckY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p103";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "NeckZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p104";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "NeckZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p105";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HeadX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p106";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HeadX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p107";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HeadY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p108";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HeadY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p109";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HeadZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p110";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HeadZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p111";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p112";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p113";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p114";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p115";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p116";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "SpineShoulderZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p117";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p118";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p119";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p120";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p121";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p122";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p123";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p124";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p125";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p126";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p127";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p128";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p129";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p130";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p131";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p132";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p133";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p134";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p135";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p136";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p137";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p138";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p139";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p140";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p141";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p142";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p143";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p144";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p145";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p146";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p147";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p148";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p149";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p150";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p151";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p152";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p153";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p154";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p155";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p156";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p157";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p158";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p159";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p160";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p161";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p162";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p163";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p164";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p165";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p166";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p167";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p168";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p169";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p170";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p171";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p172";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p173";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p174";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p175";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p176";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbLeftZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p177";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p178";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p179";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p180";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p181";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p182";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ShoulderRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p183";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p184";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p185";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p186";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p187";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p188";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ElbowRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p189";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "WristRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p190";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p191";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "WristRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p192";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p193";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "WristRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p194";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "WristRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p195";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p196";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p197";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p198";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p199";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p200";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p201";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HipRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p202";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p203";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HipRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p204";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p205";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HipRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p206";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HipRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p207";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p208";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p209";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p210";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p211";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p212";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "KneeRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p213";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p214";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p215";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p216";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p217";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p218";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "AnkleRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p219";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FootRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p220";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p221";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FootRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p222";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p223";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "FootRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p224";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "FootRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p225";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p226";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p227";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p228";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p229";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p230";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "HandTipRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p231";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p232";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightX";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p233";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p234";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightY";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p235";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p236";
            param.DbType = global::System.Data.DbType.Double;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Double;
            param.IsNullable = true;
            param.SourceColumn = "ThumbRightZ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Microsoft.Samples.Kinect.BodyBasics.Properties.Settings.Default.jointexamConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT `id`, `exam_type_id`, `exam_id`, `exam_time`, `exam_snapshot_path`, `SpineBaseX`, `SpineBaseY`, `SpineBaseZ`, `SpineMidX`, `SpineMidY`, `SpineMidZ`, `NeckX`, `NeckY`, `NeckZ`, `HeadX`, `HeadY`, `HeadZ`, `SpineShoulderX`, `SpineShoulderY`, `SpineShoulderZ`, `ShoulderLeftX`, `ShoulderLeftY`, `ShoulderLeftZ`, `ElbowLeftX`, `ElbowLeftY`, `ElbowLeftZ`, `WristLeftX`, `WristLeftY`, `WristLeftZ`, `HandLeftX`, `HandLeftY`, `HandLeftZ`, `HipLeftX`, `HipLeftY`, `HipLeftZ`, `KneeLeftX`, `KneeLeftY`, `KneeLeftZ`, `AnkleLeftX`, `AnkleLeftY`, `AnkleLeftZ`, `FootLeftX`, `FootLeftY`, `FootLeftZ`, `HandTipLeftX`, `HandTipLeftY`, `HandTipLeftZ`, `ThumbLeftX`, `ThumbLeftY`, `ThumbLeftZ`, `ShoulderRightX`, `ShoulderRightY`, `ShoulderRightZ`, `ElbowRightX`, `ElbowRightY`, `ElbowRightZ`, `WristRightX`, `WristRightY`, `WristRightZ`, `HandRightX`, `HandRightY`, `HandRightZ`, `HipRightX`, `HipRightY`, `HipRightZ`, `KneeRightX`, `KneeRightY`, `KneeRightZ`, `AnkleRightX`, `AnkleRightY`, `AnkleRightZ`, `FootRightX`, `FootRightY`, `FootRightZ`, `HandTipRightX`, `HandTipRightY`, `HandTipRightZ`, `ThumbRightX`, `ThumbRightY`, `ThumbRightZ` FROM `tab_exam_record`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(jointexamDataSet.tab_exam_recordDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual jointexamDataSet.tab_exam_recordDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            jointexamDataSet.tab_exam_recordDataTable dataTable = new jointexamDataSet.tab_exam_recordDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(jointexamDataSet.tab_exam_recordDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(jointexamDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tab_exam_record");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int p1, 
                    int p2, 
                    int p3, 
                    global::System.Nullable<global::System.DateTime> p5, 
                    string p7, 
                    global::System.Nullable<double> p9, 
                    global::System.Nullable<double> p11, 
                    global::System.Nullable<double> p13, 
                    global::System.Nullable<double> p15, 
                    global::System.Nullable<double> p17, 
                    global::System.Nullable<double> p19, 
                    global::System.Nullable<double> p21, 
                    global::System.Nullable<double> p23, 
                    global::System.Nullable<double> p25, 
                    global::System.Nullable<double> p27, 
                    global::System.Nullable<double> p29, 
                    global::System.Nullable<double> p31, 
                    global::System.Nullable<double> p33, 
                    global::System.Nullable<double> p35, 
                    global::System.Nullable<double> p37, 
                    global::System.Nullable<double> p39, 
                    global::System.Nullable<double> p41, 
                    global::System.Nullable<double> p43, 
                    global::System.Nullable<double> p45, 
                    global::System.Nullable<double> p47, 
                    global::System.Nullable<double> p49, 
                    global::System.Nullable<double> p51, 
                    global::System.Nullable<double> p53, 
                    global::System.Nullable<double> p55, 
                    global::System.Nullable<double> p57, 
                    global::System.Nullable<double> p59, 
                    global::System.Nullable<double> p61, 
                    global::System.Nullable<double> p63, 
                    global::System.Nullable<double> p65, 
                    global::System.Nullable<double> p67, 
                    global::System.Nullable<double> p69, 
                    global::System.Nullable<double> p71, 
                    global::System.Nullable<double> p73, 
                    global::System.Nullable<double> p75, 
                    global::System.Nullable<double> p77, 
                    global::System.Nullable<double> p79, 
                    global::System.Nullable<double> p81, 
                    global::System.Nullable<double> p83, 
                    global::System.Nullable<double> p85, 
                    global::System.Nullable<double> p87, 
                    global::System.Nullable<double> p89, 
                    global::System.Nullable<double> p91, 
                    global::System.Nullable<double> p93, 
                    global::System.Nullable<double> p95, 
                    global::System.Nullable<double> p97, 
                    global::System.Nullable<double> p99, 
                    global::System.Nullable<double> p101, 
                    global::System.Nullable<double> p103, 
                    global::System.Nullable<double> p105, 
                    global::System.Nullable<double> p107, 
                    global::System.Nullable<double> p109, 
                    global::System.Nullable<double> p111, 
                    global::System.Nullable<double> p113, 
                    global::System.Nullable<double> p115, 
                    global::System.Nullable<double> p117, 
                    global::System.Nullable<double> p119, 
                    global::System.Nullable<double> p121, 
                    global::System.Nullable<double> p123, 
                    global::System.Nullable<double> p125, 
                    global::System.Nullable<double> p127, 
                    global::System.Nullable<double> p129, 
                    global::System.Nullable<double> p131, 
                    global::System.Nullable<double> p133, 
                    global::System.Nullable<double> p135, 
                    global::System.Nullable<double> p137, 
                    global::System.Nullable<double> p139, 
                    global::System.Nullable<double> p141, 
                    global::System.Nullable<double> p143, 
                    global::System.Nullable<double> p145, 
                    global::System.Nullable<double> p147, 
                    global::System.Nullable<double> p149, 
                    global::System.Nullable<double> p151, 
                    global::System.Nullable<double> p153, 
                    global::System.Nullable<double> p155, 
                    global::System.Nullable<double> p157) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(p1));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(p2));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(p3));
            if ((p5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(p5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p7 == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(p7));
            }
            if ((p9.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(p9.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((p11.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(p11.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((p13.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(p13.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((p15.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(p15.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((p17.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(p17.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((p19.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(p19.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((p21.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(p21.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((p23.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((double)(p23.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((p25.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(p25.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((p27.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((double)(p27.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((p29.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((double)(p29.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((p31.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((double)(p31.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((p33.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((double)(p33.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((p35.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((double)(p35.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((p37.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((double)(p37.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((p39.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((double)(p39.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((p41.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((double)(p41.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((p43.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((double)(p43.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((p45.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((double)(p45.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((p47.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((double)(p47.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((p49.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((double)(p49.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((p51.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((double)(p51.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((p53.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((double)(p53.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((p55.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((double)(p55.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((p57.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((double)(p57.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((p59.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((double)(p59.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((p61.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((double)(p61.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((p63.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((double)(p63.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((p65.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((double)(p65.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((p67.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((double)(p67.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((p69.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((double)(p69.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((p71.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((double)(p71.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((p73.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((double)(p73.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((p75.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((double)(p75.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((p77.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((double)(p77.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((p79.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((double)(p79.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((p81.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((double)(p81.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((p83.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((double)(p83.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((p85.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((double)(p85.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((p87.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((double)(p87.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((p89.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((double)(p89.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((p91.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((double)(p91.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((p93.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((double)(p93.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((p95.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((double)(p95.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((p97.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((double)(p97.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((p99.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((double)(p99.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((p101.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((double)(p101.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            if ((p103.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((double)(p103.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            if ((p105.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((double)(p105.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            if ((p107.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((double)(p107.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((p109.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((double)(p109.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((p111.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((double)(p111.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((p113.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((double)(p113.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            if ((p115.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[114].Value = ((double)(p115.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            if ((p117.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[116].Value = ((double)(p117.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            if ((p119.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((double)(p119.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            if ((p121.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((double)(p121.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            if ((p123.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((double)(p123.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            if ((p125.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((double)(p125.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            if ((p127.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((double)(p127.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            if ((p129.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((double)(p129.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            if ((p131.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((double)(p131.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((p133.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((double)(p133.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            if ((p135.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((double)(p135.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            if ((p137.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((double)(p137.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            if ((p139.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((double)(p139.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            if ((p141.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((double)(p141.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            if ((p143.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[142].Value = ((double)(p143.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            if ((p145.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[144].Value = ((double)(p145.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            if ((p147.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[146].Value = ((double)(p147.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            if ((p149.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((double)(p149.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            if ((p151.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((double)(p151.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            if ((p153.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((double)(p153.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            if ((p155.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((double)(p155.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            if ((p157.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[156].Value = ((double)(p157.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int p1, 
                    int p2, 
                    global::System.Nullable<global::System.DateTime> p3, 
                    string p4, 
                    global::System.Nullable<double> p5, 
                    global::System.Nullable<double> p6, 
                    global::System.Nullable<double> p7, 
                    global::System.Nullable<double> p8, 
                    global::System.Nullable<double> p9, 
                    global::System.Nullable<double> p10, 
                    global::System.Nullable<double> p11, 
                    global::System.Nullable<double> p12, 
                    global::System.Nullable<double> p13, 
                    global::System.Nullable<double> p14, 
                    global::System.Nullable<double> p15, 
                    global::System.Nullable<double> p16, 
                    global::System.Nullable<double> p17, 
                    global::System.Nullable<double> p18, 
                    global::System.Nullable<double> p19, 
                    global::System.Nullable<double> p20, 
                    global::System.Nullable<double> p21, 
                    global::System.Nullable<double> p22, 
                    global::System.Nullable<double> p23, 
                    global::System.Nullable<double> p24, 
                    global::System.Nullable<double> p25, 
                    global::System.Nullable<double> p26, 
                    global::System.Nullable<double> p27, 
                    global::System.Nullable<double> p28, 
                    global::System.Nullable<double> p29, 
                    global::System.Nullable<double> p30, 
                    global::System.Nullable<double> p31, 
                    global::System.Nullable<double> p32, 
                    global::System.Nullable<double> p33, 
                    global::System.Nullable<double> p34, 
                    global::System.Nullable<double> p35, 
                    global::System.Nullable<double> p36, 
                    global::System.Nullable<double> p37, 
                    global::System.Nullable<double> p38, 
                    global::System.Nullable<double> p39, 
                    global::System.Nullable<double> p40, 
                    global::System.Nullable<double> p41, 
                    global::System.Nullable<double> p42, 
                    global::System.Nullable<double> p43, 
                    global::System.Nullable<double> p44, 
                    global::System.Nullable<double> p45, 
                    global::System.Nullable<double> p46, 
                    global::System.Nullable<double> p47, 
                    global::System.Nullable<double> p48, 
                    global::System.Nullable<double> p49, 
                    global::System.Nullable<double> p50, 
                    global::System.Nullable<double> p51, 
                    global::System.Nullable<double> p52, 
                    global::System.Nullable<double> p53, 
                    global::System.Nullable<double> p54, 
                    global::System.Nullable<double> p55, 
                    global::System.Nullable<double> p56, 
                    global::System.Nullable<double> p57, 
                    global::System.Nullable<double> p58, 
                    global::System.Nullable<double> p59, 
                    global::System.Nullable<double> p60, 
                    global::System.Nullable<double> p61, 
                    global::System.Nullable<double> p62, 
                    global::System.Nullable<double> p63, 
                    global::System.Nullable<double> p64, 
                    global::System.Nullable<double> p65, 
                    global::System.Nullable<double> p66, 
                    global::System.Nullable<double> p67, 
                    global::System.Nullable<double> p68, 
                    global::System.Nullable<double> p69, 
                    global::System.Nullable<double> p70, 
                    global::System.Nullable<double> p71, 
                    global::System.Nullable<double> p72, 
                    global::System.Nullable<double> p73, 
                    global::System.Nullable<double> p74, 
                    global::System.Nullable<double> p75, 
                    global::System.Nullable<double> p76, 
                    global::System.Nullable<double> p77, 
                    global::System.Nullable<double> p78, 
                    global::System.Nullable<double> p79) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(p1));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(p2));
            if ((p3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(p3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(p5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(p6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((p7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(p7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(p8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((p9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(p9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((p10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(p10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((p11.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(p11.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((p12.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(p12.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((p13.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(p13.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((p14.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(p14.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((p15.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(p15.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((p16.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(p16.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((p17.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(p17.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((p18.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(p18.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((p19.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(p19.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((p20.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(p20.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((p21.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(p21.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((p22.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(p22.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((p23.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(p23.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((p24.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(p24.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((p25.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(p25.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((p26.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((double)(p26.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((p27.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((double)(p27.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((p28.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(p28.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((p29.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((double)(p29.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((p30.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((double)(p30.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((p31.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((double)(p31.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((p32.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((double)(p32.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((p33.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((double)(p33.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((p34.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((double)(p34.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((p35.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((double)(p35.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((p36.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((double)(p36.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((p37.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((double)(p37.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((p38.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((double)(p38.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((p39.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((double)(p39.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((p40.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((double)(p40.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((p41.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((double)(p41.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((p42.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((double)(p42.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((p43.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((double)(p43.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((p44.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((double)(p44.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((p45.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((double)(p45.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((p46.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((double)(p46.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((p47.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((double)(p47.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((p48.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((double)(p48.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((p49.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((double)(p49.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((p50.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((double)(p50.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((p51.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((double)(p51.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((p52.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((double)(p52.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((p53.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((double)(p53.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((p54.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((double)(p54.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((p55.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((double)(p55.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((p56.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((double)(p56.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((p57.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((double)(p57.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((p58.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((double)(p58.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((p59.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((double)(p59.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((p60.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((double)(p60.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((p61.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((double)(p61.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((p62.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((double)(p62.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((p63.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((double)(p63.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((p64.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((double)(p64.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((p65.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((double)(p65.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((p66.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((double)(p66.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((p67.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((double)(p67.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((p68.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((double)(p68.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((p69.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((double)(p69.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((p70.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((double)(p70.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((p71.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((double)(p71.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((p72.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((double)(p72.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((p73.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((double)(p73.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((p74.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((double)(p74.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((p75.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((double)(p75.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((p76.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((double)(p76.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((p77.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[76].Value = ((double)(p77.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((p78.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((double)(p78.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((p79.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((double)(p79.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int p1, 
                    int p2, 
                    global::System.Nullable<global::System.DateTime> p3, 
                    string p4, 
                    global::System.Nullable<double> p5, 
                    global::System.Nullable<double> p6, 
                    global::System.Nullable<double> p7, 
                    global::System.Nullable<double> p8, 
                    global::System.Nullable<double> p9, 
                    global::System.Nullable<double> p10, 
                    global::System.Nullable<double> p11, 
                    global::System.Nullable<double> p12, 
                    global::System.Nullable<double> p13, 
                    global::System.Nullable<double> p14, 
                    global::System.Nullable<double> p15, 
                    global::System.Nullable<double> p16, 
                    global::System.Nullable<double> p17, 
                    global::System.Nullable<double> p18, 
                    global::System.Nullable<double> p19, 
                    global::System.Nullable<double> p20, 
                    global::System.Nullable<double> p21, 
                    global::System.Nullable<double> p22, 
                    global::System.Nullable<double> p23, 
                    global::System.Nullable<double> p24, 
                    global::System.Nullable<double> p25, 
                    global::System.Nullable<double> p26, 
                    global::System.Nullable<double> p27, 
                    global::System.Nullable<double> p28, 
                    global::System.Nullable<double> p29, 
                    global::System.Nullable<double> p30, 
                    global::System.Nullable<double> p31, 
                    global::System.Nullable<double> p32, 
                    global::System.Nullable<double> p33, 
                    global::System.Nullable<double> p34, 
                    global::System.Nullable<double> p35, 
                    global::System.Nullable<double> p36, 
                    global::System.Nullable<double> p37, 
                    global::System.Nullable<double> p38, 
                    global::System.Nullable<double> p39, 
                    global::System.Nullable<double> p40, 
                    global::System.Nullable<double> p41, 
                    global::System.Nullable<double> p42, 
                    global::System.Nullable<double> p43, 
                    global::System.Nullable<double> p44, 
                    global::System.Nullable<double> p45, 
                    global::System.Nullable<double> p46, 
                    global::System.Nullable<double> p47, 
                    global::System.Nullable<double> p48, 
                    global::System.Nullable<double> p49, 
                    global::System.Nullable<double> p50, 
                    global::System.Nullable<double> p51, 
                    global::System.Nullable<double> p52, 
                    global::System.Nullable<double> p53, 
                    global::System.Nullable<double> p54, 
                    global::System.Nullable<double> p55, 
                    global::System.Nullable<double> p56, 
                    global::System.Nullable<double> p57, 
                    global::System.Nullable<double> p58, 
                    global::System.Nullable<double> p59, 
                    global::System.Nullable<double> p60, 
                    global::System.Nullable<double> p61, 
                    global::System.Nullable<double> p62, 
                    global::System.Nullable<double> p63, 
                    global::System.Nullable<double> p64, 
                    global::System.Nullable<double> p65, 
                    global::System.Nullable<double> p66, 
                    global::System.Nullable<double> p67, 
                    global::System.Nullable<double> p68, 
                    global::System.Nullable<double> p69, 
                    global::System.Nullable<double> p70, 
                    global::System.Nullable<double> p71, 
                    global::System.Nullable<double> p72, 
                    global::System.Nullable<double> p73, 
                    global::System.Nullable<double> p74, 
                    global::System.Nullable<double> p75, 
                    global::System.Nullable<double> p76, 
                    global::System.Nullable<double> p77, 
                    global::System.Nullable<double> p78, 
                    global::System.Nullable<double> p79, 
                    int p80, 
                    int p81, 
                    int p82, 
                    global::System.Nullable<global::System.DateTime> p84, 
                    string p86, 
                    global::System.Nullable<double> p88, 
                    global::System.Nullable<double> p90, 
                    global::System.Nullable<double> p92, 
                    global::System.Nullable<double> p94, 
                    global::System.Nullable<double> p96, 
                    global::System.Nullable<double> p98, 
                    global::System.Nullable<double> p100, 
                    global::System.Nullable<double> p102, 
                    global::System.Nullable<double> p104, 
                    global::System.Nullable<double> p106, 
                    global::System.Nullable<double> p108, 
                    global::System.Nullable<double> p110, 
                    global::System.Nullable<double> p112, 
                    global::System.Nullable<double> p114, 
                    global::System.Nullable<double> p116, 
                    global::System.Nullable<double> p118, 
                    global::System.Nullable<double> p120, 
                    global::System.Nullable<double> p122, 
                    global::System.Nullable<double> p124, 
                    global::System.Nullable<double> p126, 
                    global::System.Nullable<double> p128, 
                    global::System.Nullable<double> p130, 
                    global::System.Nullable<double> p132, 
                    global::System.Nullable<double> p134, 
                    global::System.Nullable<double> p136, 
                    global::System.Nullable<double> p138, 
                    global::System.Nullable<double> p140, 
                    global::System.Nullable<double> p142, 
                    global::System.Nullable<double> p144, 
                    global::System.Nullable<double> p146, 
                    global::System.Nullable<double> p148, 
                    global::System.Nullable<double> p150, 
                    global::System.Nullable<double> p152, 
                    global::System.Nullable<double> p154, 
                    global::System.Nullable<double> p156, 
                    global::System.Nullable<double> p158, 
                    global::System.Nullable<double> p160, 
                    global::System.Nullable<double> p162, 
                    global::System.Nullable<double> p164, 
                    global::System.Nullable<double> p166, 
                    global::System.Nullable<double> p168, 
                    global::System.Nullable<double> p170, 
                    global::System.Nullable<double> p172, 
                    global::System.Nullable<double> p174, 
                    global::System.Nullable<double> p176, 
                    global::System.Nullable<double> p178, 
                    global::System.Nullable<double> p180, 
                    global::System.Nullable<double> p182, 
                    global::System.Nullable<double> p184, 
                    global::System.Nullable<double> p186, 
                    global::System.Nullable<double> p188, 
                    global::System.Nullable<double> p190, 
                    global::System.Nullable<double> p192, 
                    global::System.Nullable<double> p194, 
                    global::System.Nullable<double> p196, 
                    global::System.Nullable<double> p198, 
                    global::System.Nullable<double> p200, 
                    global::System.Nullable<double> p202, 
                    global::System.Nullable<double> p204, 
                    global::System.Nullable<double> p206, 
                    global::System.Nullable<double> p208, 
                    global::System.Nullable<double> p210, 
                    global::System.Nullable<double> p212, 
                    global::System.Nullable<double> p214, 
                    global::System.Nullable<double> p216, 
                    global::System.Nullable<double> p218, 
                    global::System.Nullable<double> p220, 
                    global::System.Nullable<double> p222, 
                    global::System.Nullable<double> p224, 
                    global::System.Nullable<double> p226, 
                    global::System.Nullable<double> p228, 
                    global::System.Nullable<double> p230, 
                    global::System.Nullable<double> p232, 
                    global::System.Nullable<double> p234, 
                    global::System.Nullable<double> p236) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(p1));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(p2));
            if ((p3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(p3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(p5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(p6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((p7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(p7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(p8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((p9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(p9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((p10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(p10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((p11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(p11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((p12.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(p12.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((p13.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(p13.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((p14.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(p14.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((p15.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(p15.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((p16.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(p16.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((p17.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(p17.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((p18.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(p18.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((p19.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(p19.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((p20.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(p20.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((p21.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(p21.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((p22.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(p22.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((p23.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(p23.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((p24.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(p24.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((p25.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(p25.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((p26.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(p26.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((p27.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(p27.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((p28.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(p28.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((p29.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(p29.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((p30.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(p30.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((p31.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(p31.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((p32.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(p32.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((p33.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(p33.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((p34.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(p34.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((p35.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(p35.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((p36.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(p36.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((p37.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(p37.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((p38.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(p38.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((p39.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(p39.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((p40.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(p40.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((p41.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(p41.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((p42.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(p42.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((p43.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((double)(p43.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((p44.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(p44.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((p45.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(p45.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((p46.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(p46.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((p47.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(p47.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((p48.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((double)(p48.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((p49.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((double)(p49.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((p50.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(p50.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((p51.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(p51.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((p52.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((double)(p52.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((p53.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(p53.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((p54.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((double)(p54.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((p55.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(p55.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((p56.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((double)(p56.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((p57.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(p57.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((p58.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((double)(p58.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((p59.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(p59.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((p60.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((double)(p60.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((p61.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(p61.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((p62.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((double)(p62.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((p63.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((double)(p63.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((p64.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((double)(p64.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((p65.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((double)(p65.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((p66.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((double)(p66.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((p67.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((double)(p67.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((p68.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((double)(p68.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((p69.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((double)(p69.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((p70.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((double)(p70.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((p71.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((double)(p71.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((p72.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((double)(p72.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((p73.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((double)(p73.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((p74.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((double)(p74.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((p75.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((double)(p75.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((p76.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((double)(p76.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((p77.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((double)(p77.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((p78.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((double)(p78.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((p79.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((double)(p79.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(p80));
            this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(p81));
            this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(p82));
            if ((p84.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((System.DateTime)(p84.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((p86 == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(p86));
            }
            if ((p88.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((double)(p88.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((p90.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((double)(p90.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((p92.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((double)(p92.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((p94.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((double)(p94.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((p96.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((double)(p96.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((p98.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((double)(p98.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((p100.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((double)(p100.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((p102.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((double)(p102.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((p104.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((double)(p104.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((p106.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((double)(p106.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            if ((p108.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((double)(p108.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            if ((p110.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((double)(p110.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            if ((p112.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((double)(p112.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            if ((p114.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((double)(p114.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            if ((p116.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((double)(p116.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            if ((p118.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((double)(p118.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            if ((p120.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((double)(p120.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            if ((p122.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((double)(p122.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            if ((p124.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((double)(p124.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            if ((p126.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((double)(p126.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            if ((p128.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((double)(p128.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            if ((p130.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((double)(p130.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            if ((p132.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((double)(p132.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            if ((p134.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((double)(p134.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((p136.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((double)(p136.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            if ((p138.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((double)(p138.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            if ((p140.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((double)(p140.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            if ((p142.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((double)(p142.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            if ((p144.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((double)(p144.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            if ((p146.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((double)(p146.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            if ((p148.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((double)(p148.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((p150.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((double)(p150.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            if ((p152.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((double)(p152.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            if ((p154.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((double)(p154.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            if ((p156.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((double)(p156.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            if ((p158.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((double)(p158.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            if ((p160.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((double)(p160.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            if ((p162.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((double)(p162.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            if ((p164.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((double)(p164.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            if ((p166.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((double)(p166.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            if ((p168.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((double)(p168.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            if ((p170.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((double)(p170.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((p172.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((double)(p172.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((p174.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((double)(p174.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            if ((p176.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((double)(p176.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            if ((p178.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((double)(p178.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            if ((p180.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((double)(p180.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            if ((p182.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((double)(p182.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            if ((p184.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((double)(p184.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            if ((p186.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((double)(p186.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            if ((p188.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((double)(p188.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            if ((p190.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((double)(p190.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            if ((p192.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((double)(p192.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            if ((p194.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((double)(p194.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            if ((p196.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((double)(p196.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            if ((p198.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[197].Value = ((double)(p198.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[197].Value = global::System.DBNull.Value;
            }
            if ((p200.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[199].Value = ((double)(p200.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[199].Value = global::System.DBNull.Value;
            }
            if ((p202.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[201].Value = ((double)(p202.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[201].Value = global::System.DBNull.Value;
            }
            if ((p204.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[203].Value = ((double)(p204.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[203].Value = global::System.DBNull.Value;
            }
            if ((p206.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[205].Value = ((double)(p206.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[205].Value = global::System.DBNull.Value;
            }
            if ((p208.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[207].Value = ((double)(p208.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[207].Value = global::System.DBNull.Value;
            }
            if ((p210.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[209].Value = ((double)(p210.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[209].Value = global::System.DBNull.Value;
            }
            if ((p212.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[211].Value = ((double)(p212.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[211].Value = global::System.DBNull.Value;
            }
            if ((p214.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[213].Value = ((double)(p214.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[213].Value = global::System.DBNull.Value;
            }
            if ((p216.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[215].Value = ((double)(p216.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[215].Value = global::System.DBNull.Value;
            }
            if ((p218.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[217].Value = ((double)(p218.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[217].Value = global::System.DBNull.Value;
            }
            if ((p220.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[219].Value = ((double)(p220.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[219].Value = global::System.DBNull.Value;
            }
            if ((p222.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[221].Value = ((double)(p222.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[221].Value = global::System.DBNull.Value;
            }
            if ((p224.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[223].Value = ((double)(p224.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[223].Value = global::System.DBNull.Value;
            }
            if ((p226.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[225].Value = ((double)(p226.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[225].Value = global::System.DBNull.Value;
            }
            if ((p228.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[227].Value = ((double)(p228.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[227].Value = global::System.DBNull.Value;
            }
            if ((p230.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[229].Value = ((double)(p230.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[229].Value = global::System.DBNull.Value;
            }
            if ((p232.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[231].Value = ((double)(p232.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[231].Value = global::System.DBNull.Value;
            }
            if ((p234.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[233].Value = ((double)(p234.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[233].Value = global::System.DBNull.Value;
            }
            if ((p236.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[235].Value = ((double)(p236.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[235].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tab_exam_typeTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tab_exam_typeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tab_exam_type";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("desc", "desc");
            tableMapping.ColumnMappings.Add("order", "order");
            tableMapping.ColumnMappings.Add("style", "style");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM `tab_exam_type` WHERE ((`id` = @p1) AND (`name` = @p2) AND ((@p3 = 1 " +
                "AND `desc` IS NULL) OR (`desc` = @p4)) AND (`order` = @p5) AND (`style` = @p6))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "order";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "style";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `tab_exam_type` (`name`, `desc`, `order`, `style`) VALUES (@p1, @p2, " +
                "@p3, @p4)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "order";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "style";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE `tab_exam_type` SET `name` = @p1, `desc` = @p2, `order` = @p3, `style` = @" +
                "p4 WHERE ((`id` = @p5) AND (`name` = @p6) AND ((@p7 = 1 AND `desc` IS NULL) OR (" +
                "`desc` = @p8)) AND (`order` = @p9) AND (`style` = @p10))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "order";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "style";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p5";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p6";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p8";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "desc";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p9";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "order";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "style";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Microsoft.Samples.Kinect.BodyBasics.Properties.Settings.Default.jointexamConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `id`, `name`, `desc`, `order`, `style` FROM `tab_exam_type` order by `orde" +
                "r`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(jointexamDataSet.tab_exam_typeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual jointexamDataSet.tab_exam_typeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            jointexamDataSet.tab_exam_typeDataTable dataTable = new jointexamDataSet.tab_exam_typeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(jointexamDataSet.tab_exam_typeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(jointexamDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tab_exam_type");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int p1, string p2, string p4, int p5, int p6) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p4 == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(p4));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(p5));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(p6));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string p1, string p2, int p3, int p4) {
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(p3));
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(p4));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string p1, string p2, int p3, int p4, int p5, string p6, string p8, int p9, int p10) {
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(p3));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(p4));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(p5));
            if ((p6 == null)) {
                throw new global::System.ArgumentNullException("p6");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(p6));
            }
            if ((p8 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(p8));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(p9));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(p10));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class tab_personTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public tab_personTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "tab_person";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("sex", "sex");
            tableMapping.ColumnMappings.Add("birthday", "birthday");
            tableMapping.ColumnMappings.Add("race", "race");
            tableMapping.ColumnMappings.Add("height", "height");
            tableMapping.ColumnMappings.Add("weight", "weight");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM `tab_person` WHERE ((`id` = @p1) AND ((@p2 = 1 AND `name` IS NULL) OR (`name` = @p3)) AND ((@p4 = 1 AND `sex` IS NULL) OR (`sex` = @p5)) AND ((@p6 = 1 AND `birthday` IS NULL) OR (`birthday` = @p7)) AND ((@p8 = 1 AND `race` IS NULL) OR (`race` = @p9)) AND ((@p10 = 1 AND `height` IS NULL) OR (`height` = @p11)) AND ((@p12 = 1 AND `weight` IS NULL) OR (`weight` = @p13)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p4";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sex";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p5";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sex";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p6";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "birthday";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p7";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "birthday";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "race";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p9";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "race";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "height";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p11";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "height";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p12";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "weight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p13";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "weight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO `tab_person` (`name`, `sex`, `birthday`, `race`, `height`, `weight`) " +
                "VALUES (@p1, @p2, @p3, @p4, @p5, @p6)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sex";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "birthday";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "race";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p5";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "height";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p6";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "weight";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE `tab_person` SET `name` = @p1, `sex` = @p2, `birthday` = @p3, `race` = @p4, `height` = @p5, `weight` = @p6 WHERE ((`id` = @p7) AND ((@p8 = 1 AND `name` IS NULL) OR (`name` = @p9)) AND ((@p10 = 1 AND `sex` IS NULL) OR (`sex` = @p11)) AND ((@p12 = 1 AND `birthday` IS NULL) OR (`birthday` = @p13)) AND ((@p14 = 1 AND `race` IS NULL) OR (`race` = @p15)) AND ((@p16 = 1 AND `height` IS NULL) OR (`height` = @p17)) AND ((@p18 = 1 AND `weight` IS NULL) OR (`weight` = @p19)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p1";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p2";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sex";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p3";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "birthday";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p4";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "race";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p5";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "height";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p6";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "weight";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p7";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p8";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p9";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p10";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "sex";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p11";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "sex";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p12";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "birthday";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p13";
            param.DbType = global::System.Data.DbType.Date;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "birthday";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p14";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "race";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p15";
            param.DbType = global::System.Data.DbType.String;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "race";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p16";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "height";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p17";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "height";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p18";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "weight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@p19";
            param.DbType = global::System.Data.DbType.Single;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Float;
            param.IsNullable = true;
            param.SourceColumn = "weight";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Microsoft.Samples.Kinect.BodyBasics.Properties.Settings.Default.jointexamConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT `id`, `name`, `sex`, `birthday`, `race`, `height`, `weight` FROM `tab_pers" +
                "on`";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(jointexamDataSet.tab_personDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual jointexamDataSet.tab_personDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            jointexamDataSet.tab_personDataTable dataTable = new jointexamDataSet.tab_personDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(jointexamDataSet.tab_personDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(jointexamDataSet dataSet) {
            return this.Adapter.Update(dataSet, "tab_person");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int p1, string p3, string p5, global::System.Nullable<global::System.DateTime> p7, string p9, global::System.Nullable<float> p11, global::System.Nullable<float> p13) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(p1));
            if ((p3 == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(p3));
            }
            if ((p5 == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p7.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(p7.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p9 == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(p9));
            }
            if ((p11.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((float)(p11.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((p13.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((float)(p13.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string p1, string p2, global::System.Nullable<global::System.DateTime> p3, string p4, global::System.Nullable<float> p5, global::System.Nullable<float> p6) {
            if ((p1 == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(p3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((float)(p5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((float)(p6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string p1, string p2, global::System.Nullable<global::System.DateTime> p3, string p4, global::System.Nullable<float> p5, global::System.Nullable<float> p6, int p7, string p9, string p11, global::System.Nullable<global::System.DateTime> p13, string p15, global::System.Nullable<float> p17, global::System.Nullable<float> p19) {
            if ((p1 == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(p1));
            }
            if ((p2 == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(p3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((float)(p5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((float)(p6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(p7));
            if ((p9 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(p9));
            }
            if ((p11 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(p11));
            }
            if ((p13.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(p13.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((p15 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(p15));
            }
            if ((p17.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((float)(p17.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((p19.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((float)(p19.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ExamMasterTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ExamMasterTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ExamMaster";
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("sex", "sex");
            tableMapping.ColumnMappings.Add("birthday", "birthday");
            tableMapping.ColumnMappings.Add("race", "race");
            tableMapping.ColumnMappings.Add("weight", "weight");
            tableMapping.ColumnMappings.Add("height", "height");
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("exam_date", "exam_date");
            tableMapping.ColumnMappings.Add("operater", "operater");
            tableMapping.ColumnMappings.Add("exam_age", "exam_age");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Microsoft.Samples.Kinect.BodyBasics.Properties.Settings.Default.jointexamConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT   tab_person.name, tab_person.sex, tab_person.birthday, tab_person.race, tab_person.weight, tab_person.height, 
                tab_person.id, tab_exam.exam_date, tab_exam.operater, tab_exam.exam_age
FROM      tab_exam INNER JOIN
                tab_person ON tab_exam.person_id = tab_person.id
WHERE   (tab_exam.id = @param1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@param1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(jointexamDataSet.ExamMasterDataTable dataTable, int param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(param1));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual jointexamDataSet.ExamMasterDataTable GetData(int param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(param1));
            jointexamDataSet.ExamMasterDataTable dataTable = new jointexamDataSet.ExamMasterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ExamRecordTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ExamRecordTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ExamRecord";
            tableMapping.ColumnMappings.Add("exam_time", "exam_time");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("exam_snapshot_path", "exam_snapshot_path");
            tableMapping.ColumnMappings.Add("SpineBaseX", "SpineBaseX");
            tableMapping.ColumnMappings.Add("SpineBaseY", "SpineBaseY");
            tableMapping.ColumnMappings.Add("SpineBaseZ", "SpineBaseZ");
            tableMapping.ColumnMappings.Add("SpineMidX", "SpineMidX");
            tableMapping.ColumnMappings.Add("ThumbRightZ", "ThumbRightZ");
            tableMapping.ColumnMappings.Add("ThumbRightY", "ThumbRightY");
            tableMapping.ColumnMappings.Add("ThumbRightX", "ThumbRightX");
            tableMapping.ColumnMappings.Add("HandTipRightZ", "HandTipRightZ");
            tableMapping.ColumnMappings.Add("HandTipRightY", "HandTipRightY");
            tableMapping.ColumnMappings.Add("HandTipRightX", "HandTipRightX");
            tableMapping.ColumnMappings.Add("FootRightZ", "FootRightZ");
            tableMapping.ColumnMappings.Add("FootRightY", "FootRightY");
            tableMapping.ColumnMappings.Add("FootRightX", "FootRightX");
            tableMapping.ColumnMappings.Add("AnkleRightZ", "AnkleRightZ");
            tableMapping.ColumnMappings.Add("AnkleRightX", "AnkleRightX");
            tableMapping.ColumnMappings.Add("AnkleRightY", "AnkleRightY");
            tableMapping.ColumnMappings.Add("KneeRightZ", "KneeRightZ");
            tableMapping.ColumnMappings.Add("KneeRightY", "KneeRightY");
            tableMapping.ColumnMappings.Add("KneeRightX", "KneeRightX");
            tableMapping.ColumnMappings.Add("HipRightZ", "HipRightZ");
            tableMapping.ColumnMappings.Add("HipRightY", "HipRightY");
            tableMapping.ColumnMappings.Add("HipRightX", "HipRightX");
            tableMapping.ColumnMappings.Add("HandRightZ", "HandRightZ");
            tableMapping.ColumnMappings.Add("HandRightY", "HandRightY");
            tableMapping.ColumnMappings.Add("HandRightX", "HandRightX");
            tableMapping.ColumnMappings.Add("WristRightZ", "WristRightZ");
            tableMapping.ColumnMappings.Add("WristRightY", "WristRightY");
            tableMapping.ColumnMappings.Add("WristRightX", "WristRightX");
            tableMapping.ColumnMappings.Add("ElbowRightZ", "ElbowRightZ");
            tableMapping.ColumnMappings.Add("ElbowRightY", "ElbowRightY");
            tableMapping.ColumnMappings.Add("ElbowRightX", "ElbowRightX");
            tableMapping.ColumnMappings.Add("ShoulderRightZ", "ShoulderRightZ");
            tableMapping.ColumnMappings.Add("ShoulderRightY", "ShoulderRightY");
            tableMapping.ColumnMappings.Add("ShoulderRightX", "ShoulderRightX");
            tableMapping.ColumnMappings.Add("ThumbLeftZ", "ThumbLeftZ");
            tableMapping.ColumnMappings.Add("ThumbLeftY", "ThumbLeftY");
            tableMapping.ColumnMappings.Add("ThumbLeftX", "ThumbLeftX");
            tableMapping.ColumnMappings.Add("HandTipLeftZ", "HandTipLeftZ");
            tableMapping.ColumnMappings.Add("HandTipLeftY", "HandTipLeftY");
            tableMapping.ColumnMappings.Add("HandTipLeftX", "HandTipLeftX");
            tableMapping.ColumnMappings.Add("FootLeftZ", "FootLeftZ");
            tableMapping.ColumnMappings.Add("FootLeftY", "FootLeftY");
            tableMapping.ColumnMappings.Add("FootLeftX", "FootLeftX");
            tableMapping.ColumnMappings.Add("AnkleLeftZ", "AnkleLeftZ");
            tableMapping.ColumnMappings.Add("AnkleLeftY", "AnkleLeftY");
            tableMapping.ColumnMappings.Add("AnkleLeftX", "AnkleLeftX");
            tableMapping.ColumnMappings.Add("KneeLeftZ", "KneeLeftZ");
            tableMapping.ColumnMappings.Add("KneeLeftY", "KneeLeftY");
            tableMapping.ColumnMappings.Add("KneeLeftX", "KneeLeftX");
            tableMapping.ColumnMappings.Add("HipLeftZ", "HipLeftZ");
            tableMapping.ColumnMappings.Add("HipLeftY", "HipLeftY");
            tableMapping.ColumnMappings.Add("HipLeftX", "HipLeftX");
            tableMapping.ColumnMappings.Add("HandLeftZ", "HandLeftZ");
            tableMapping.ColumnMappings.Add("HandLeftY", "HandLeftY");
            tableMapping.ColumnMappings.Add("HandLeftX", "HandLeftX");
            tableMapping.ColumnMappings.Add("WristLeftZ", "WristLeftZ");
            tableMapping.ColumnMappings.Add("WristLeftY", "WristLeftY");
            tableMapping.ColumnMappings.Add("WristLeftX", "WristLeftX");
            tableMapping.ColumnMappings.Add("ElbowLeftZ", "ElbowLeftZ");
            tableMapping.ColumnMappings.Add("ElbowLeftY", "ElbowLeftY");
            tableMapping.ColumnMappings.Add("ElbowLeftX", "ElbowLeftX");
            tableMapping.ColumnMappings.Add("ShoulderLeftZ", "ShoulderLeftZ");
            tableMapping.ColumnMappings.Add("ShoulderLeftY", "ShoulderLeftY");
            tableMapping.ColumnMappings.Add("ShoulderLeftX", "ShoulderLeftX");
            tableMapping.ColumnMappings.Add("SpineShoulderZ", "SpineShoulderZ");
            tableMapping.ColumnMappings.Add("SpineShoulderY", "SpineShoulderY");
            tableMapping.ColumnMappings.Add("SpineShoulderX", "SpineShoulderX");
            tableMapping.ColumnMappings.Add("HeadZ", "HeadZ");
            tableMapping.ColumnMappings.Add("HeadY", "HeadY");
            tableMapping.ColumnMappings.Add("HeadX", "HeadX");
            tableMapping.ColumnMappings.Add("NeckZ", "NeckZ");
            tableMapping.ColumnMappings.Add("NeckY", "NeckY");
            tableMapping.ColumnMappings.Add("NeckX", "NeckX");
            tableMapping.ColumnMappings.Add("SpineMidZ", "SpineMidZ");
            tableMapping.ColumnMappings.Add("SpineMidY", "SpineMidY");
            tableMapping.ColumnMappings.Add("order", "order");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Microsoft.Samples.Kinect.BodyBasics.Properties.Settings.Default.jointexamConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT   tab_exam_type.name, tab_exam_record.exam_time, tab_exam_record.exam_snap" +
                "shot_path, \r\n                tab_exam_record.SpineBaseX, tab_exam_record.SpineBa" +
                "seY, tab_exam_record.SpineBaseZ, \r\n                tab_exam_record.SpineMidX, ta" +
                "b_exam_record.SpineMidY, tab_exam_record.SpineMidZ, tab_exam_record.NeckX, \r\n   " +
                "             tab_exam_record.NeckY, tab_exam_record.NeckZ, tab_exam_record.HeadX" +
                ", tab_exam_record.HeadY, \r\n                tab_exam_record.HeadZ, tab_exam_recor" +
                "d.SpineShoulderX, tab_exam_record.SpineShoulderY, \r\n                tab_exam_rec" +
                "ord.SpineShoulderZ, tab_exam_record.ShoulderLeftX, tab_exam_record.ShoulderLeftY" +
                ", \r\n                tab_exam_record.ShoulderLeftZ, tab_exam_record.ElbowLeftX, t" +
                "ab_exam_record.ElbowLeftY, \r\n                tab_exam_record.ElbowLeftZ, tab_exa" +
                "m_record.WristLeftX, tab_exam_record.WristLeftY, tab_exam_record.WristLeftZ, \r\n " +
                "               tab_exam_record.HandLeftX, tab_exam_record.HandLeftY, tab_exam_re" +
                "cord.HandLeftZ, tab_exam_record.HipLeftX, \r\n                tab_exam_record.HipL" +
                "eftY, tab_exam_record.HipLeftZ, tab_exam_record.KneeLeftX, tab_exam_record.KneeL" +
                "eftY, \r\n                tab_exam_record.KneeLeftZ, tab_exam_record.AnkleLeftX, t" +
                "ab_exam_record.AnkleLeftY, tab_exam_record.AnkleLeftZ, \r\n                tab_exa" +
                "m_record.FootLeftX, tab_exam_record.FootLeftY, tab_exam_record.FootLeftZ, tab_ex" +
                "am_record.HandTipLeftX, \r\n                tab_exam_record.HandTipLeftY, tab_exam" +
                "_record.HandTipLeftZ, tab_exam_record.ThumbLeftX, \r\n                tab_exam_rec" +
                "ord.ThumbLeftY, tab_exam_record.ThumbLeftZ, tab_exam_record.ShoulderRightX, \r\n  " +
                "              tab_exam_record.ShoulderRightY, tab_exam_record.ShoulderRightZ, ta" +
                "b_exam_record.ElbowRightX, \r\n                tab_exam_record.ElbowRightY, tab_ex" +
                "am_record.ElbowRightZ, tab_exam_record.WristRightX, \r\n                tab_exam_r" +
                "ecord.WristRightY, tab_exam_record.WristRightZ, tab_exam_record.HandRightX, \r\n  " +
                "              tab_exam_record.HandRightY, tab_exam_record.HandRightZ, tab_exam_r" +
                "ecord.HipRightX, tab_exam_record.HipRightY, \r\n                tab_exam_record.Hi" +
                "pRightZ, tab_exam_record.KneeRightX, tab_exam_record.KneeRightY, \r\n             " +
                "   tab_exam_record.KneeRightZ, tab_exam_record.AnkleRightX, tab_exam_record.Ankl" +
                "eRightY, \r\n                tab_exam_record.AnkleRightZ, tab_exam_record.FootRigh" +
                "tX, tab_exam_record.FootRightY, \r\n                tab_exam_record.FootRightZ, ta" +
                "b_exam_record.HandTipRightX, tab_exam_record.HandTipRightY, \r\n                ta" +
                "b_exam_record.HandTipRightZ, tab_exam_record.ThumbRightX, tab_exam_record.ThumbR" +
                "ightY, \r\n                tab_exam_record.ThumbRightZ, tab_exam_type.`order`\r\nFRO" +
                "M      tab_exam_record INNER JOIN\r\n                tab_exam_type ON tab_exam_rec" +
                "ord.exam_type_id = tab_exam_type.id\r\nWHERE   (tab_exam_record.exam_id = @Param1)" +
                "\r\nORDER BY tab_exam_type.`order`, tab_exam_record.exam_time";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Param1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_id";
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(jointexamDataSet.ExamRecordDataTable dataTable, int Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual jointexamDataSet.ExamRecordDataTable GetData(int Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            jointexamDataSet.ExamRecordDataTable dataTable = new jointexamDataSet.ExamRecordDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AnalysisTypeTableAdapter : global::System.ComponentModel.Component {
        
        private global::MySql.Data.MySqlClient.MySqlDataAdapter _adapter;
        
        private global::MySql.Data.MySqlClient.MySqlConnection _connection;
        
        private global::MySql.Data.MySqlClient.MySqlTransaction _transaction;
        
        private global::MySql.Data.MySqlClient.MySqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AnalysisTypeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::MySql.Data.MySqlClient.MySqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::MySql.Data.MySqlClient.MySqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::MySql.Data.MySqlClient.MySqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::MySql.Data.MySqlClient.MySqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::MySql.Data.MySqlClient.MySqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AnalysisType";
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("desc", "desc");
            tableMapping.ColumnMappings.Add("analysis_category", "analysis_category");
            tableMapping.ColumnMappings.Add("analysis_name", "analysis_name");
            tableMapping.ColumnMappings.Add("analysis_fun", "analysis_fun");
            tableMapping.ColumnMappings.Add("use_joints", "use_joints");
            tableMapping.ColumnMappings.Add("ptr_order", "ptr_order");
            tableMapping.ColumnMappings.Add("degrees", "degrees");
            tableMapping.ColumnMappings.Add("x", "x");
            tableMapping.ColumnMappings.Add("y", "y");
            tableMapping.ColumnMappings.Add("z", "z");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::MySql.Data.MySqlClient.MySqlConnection();
            this._connection.ConnectionString = global::Microsoft.Samples.Kinect.BodyBasics.Properties.Settings.Default.jointexamConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::MySql.Data.MySqlClient.MySqlCommand[1];
            this._commandCollection[0] = new global::MySql.Data.MySqlClient.MySqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT   tab_exam_type.name, tab_exam_type.`desc`, tab_analysis_type.analysis_category, tab_analysis_type.analysis_name, 
                tab_analysis_type.analysis_fun, tab_analysis_type.use_joints, tab_analysis_type.ptr_order, 
                tab_analysis_result.degrees, tab_analysis_result.x, tab_analysis_result.y, tab_analysis_result.z
FROM      tab_analysis_type INNER JOIN
                tab_exam_type ON tab_analysis_type.exam_type = tab_exam_type.id INNER JOIN
                tab_analysis_result ON tab_analysis_type.id = tab_analysis_result.analysis_type INNER JOIN
                tab_exam_record ON tab_exam_type.id = tab_exam_record.exam_type_id AND 
                tab_analysis_result.exam_record = tab_exam_record.id
WHERE   (tab_exam_type.id = @Param1) AND (tab_exam_record.exam_id = @Param2)
ORDER BY tab_exam_type.`order`, tab_analysis_type.ptr_order";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            global::MySql.Data.MySqlClient.MySqlParameter param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Param1";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "id";
            this._commandCollection[0].Parameters.Add(param);
            param = new global::MySql.Data.MySqlClient.MySqlParameter();
            param.ParameterName = "@Param2";
            param.DbType = global::System.Data.DbType.Int32;
            param.MySqlDbType = global::MySql.Data.MySqlClient.MySqlDbType.Int32;
            param.IsNullable = true;
            param.SourceColumn = "exam_id";
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(jointexamDataSet.AnalysisTypeDataTable dataTable, int Param1, int Param2) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Param2));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual jointexamDataSet.AnalysisTypeDataTable GetData(int Param1, int Param2) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Param1));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(Param2));
            jointexamDataSet.AnalysisTypeDataTable dataTable = new jointexamDataSet.AnalysisTypeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private tab_examTableAdapter _tab_examTableAdapter;
        
        private tab_exam_recordTableAdapter _tab_exam_recordTableAdapter;
        
        private tab_exam_typeTableAdapter _tab_exam_typeTableAdapter;
        
        private tab_personTableAdapter _tab_personTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tab_examTableAdapter tab_examTableAdapter {
            get {
                return this._tab_examTableAdapter;
            }
            set {
                this._tab_examTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tab_exam_recordTableAdapter tab_exam_recordTableAdapter {
            get {
                return this._tab_exam_recordTableAdapter;
            }
            set {
                this._tab_exam_recordTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tab_exam_typeTableAdapter tab_exam_typeTableAdapter {
            get {
                return this._tab_exam_typeTableAdapter;
            }
            set {
                this._tab_exam_typeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public tab_personTableAdapter tab_personTableAdapter {
            get {
                return this._tab_personTableAdapter;
            }
            set {
                this._tab_personTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tab_examTableAdapter != null) 
                            && (this._tab_examTableAdapter.Connection != null))) {
                    return this._tab_examTableAdapter.Connection;
                }
                if (((this._tab_exam_recordTableAdapter != null) 
                            && (this._tab_exam_recordTableAdapter.Connection != null))) {
                    return this._tab_exam_recordTableAdapter.Connection;
                }
                if (((this._tab_exam_typeTableAdapter != null) 
                            && (this._tab_exam_typeTableAdapter.Connection != null))) {
                    return this._tab_exam_typeTableAdapter.Connection;
                }
                if (((this._tab_personTableAdapter != null) 
                            && (this._tab_personTableAdapter.Connection != null))) {
                    return this._tab_personTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tab_examTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tab_exam_recordTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tab_exam_typeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tab_personTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(jointexamDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tab_personTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tab_person.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tab_personTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tab_examTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tab_exam.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tab_examTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tab_exam_typeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tab_exam_type.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tab_exam_typeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tab_exam_recordTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.tab_exam_record.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tab_exam_recordTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(jointexamDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tab_personTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tab_person.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tab_personTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tab_examTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tab_exam.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tab_examTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tab_exam_typeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tab_exam_type.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tab_exam_typeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tab_exam_recordTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.tab_exam_record.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tab_exam_recordTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(jointexamDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tab_exam_recordTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tab_exam_record.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tab_exam_recordTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tab_exam_typeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tab_exam_type.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tab_exam_typeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tab_examTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tab_exam.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tab_examTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tab_personTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.tab_person.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tab_personTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(jointexamDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tab_examTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tab_examTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._tab_exam_recordTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tab_exam_recordTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._tab_exam_typeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tab_exam_typeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            if (((this._tab_personTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tab_personTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tab_examTableAdapter != null)) {
                    revertConnections.Add(this._tab_examTableAdapter, this._tab_examTableAdapter.Connection);
                    this._tab_examTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._tab_examTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._tab_examTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tab_examTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tab_examTableAdapter.Adapter);
                    }
                }
                if ((this._tab_exam_recordTableAdapter != null)) {
                    revertConnections.Add(this._tab_exam_recordTableAdapter, this._tab_exam_recordTableAdapter.Connection);
                    this._tab_exam_recordTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._tab_exam_recordTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._tab_exam_recordTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tab_exam_recordTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tab_exam_recordTableAdapter.Adapter);
                    }
                }
                if ((this._tab_exam_typeTableAdapter != null)) {
                    revertConnections.Add(this._tab_exam_typeTableAdapter, this._tab_exam_typeTableAdapter.Connection);
                    this._tab_exam_typeTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._tab_exam_typeTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._tab_exam_typeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tab_exam_typeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tab_exam_typeTableAdapter.Adapter);
                    }
                }
                if ((this._tab_personTableAdapter != null)) {
                    revertConnections.Add(this._tab_personTableAdapter, this._tab_personTableAdapter.Connection);
                    this._tab_personTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(workConnection));
                    this._tab_personTableAdapter.Transaction = ((global::MySql.Data.MySqlClient.MySqlTransaction)(workTransaction));
                    if (this._tab_personTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tab_personTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tab_personTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tab_examTableAdapter != null)) {
                    this._tab_examTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._tab_examTableAdapter]));
                    this._tab_examTableAdapter.Transaction = null;
                }
                if ((this._tab_exam_recordTableAdapter != null)) {
                    this._tab_exam_recordTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._tab_exam_recordTableAdapter]));
                    this._tab_exam_recordTableAdapter.Transaction = null;
                }
                if ((this._tab_exam_typeTableAdapter != null)) {
                    this._tab_exam_typeTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._tab_exam_typeTableAdapter]));
                    this._tab_exam_typeTableAdapter.Transaction = null;
                }
                if ((this._tab_personTableAdapter != null)) {
                    this._tab_personTableAdapter.Connection = ((global::MySql.Data.MySqlClient.MySqlConnection)(revertConnections[this._tab_personTableAdapter]));
                    this._tab_personTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591